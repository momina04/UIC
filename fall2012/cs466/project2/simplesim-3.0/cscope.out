cscope 15 $HOME/uic/fall2012/cs466/project2/simplesim-3.0               0000911058
	@bitmap.h

52 #i‚de‡
BITMAP_H


53 
	#BITMAP_H


	)

61 
	#BITMAP_SIZE
(
BITS
Ë(((BITS)+31)/32)

	)

62 
	#BITMAP_TYPE
(
BITS
, 
NAME
Ë(NAME)[
	`BITMAP_SIZE
(BITS)]

	)

64 
	tBITMAP_ENT_TYPE
;

65 *
	tBITMAP_PTR_TYPE
;

68 
	#BITMAP_SET_MAP
(
BMAP
, 
SZ
) \

69 { 
i
; i=0; i<(
SZ
); i++Ë(
BMAP
)[i] = 0xffffffff; }

	)

72 
	#BITMAP_CLEAR_MAP
(
BMAP
, 
SZ
) \

73 { 
i
; i=0; i<(
SZ
); i++Ë(
BMAP
)[i] = 0; }

	)

76 
	#BITMAP_SET
(
BMAP
, 
SZ
, 
BIT
) \

77 (((
BMAP
)[(
BIT
)/32] |(1 << ((BITË% 32))), (BMAP))

	)

80 
	#BITMAP_CLEAR
(
BMAP
, 
SZ
, 
BIT
) \

81 (((
BMAP
)[(
BIT
)/32] &~(1 << ((BITË% 32))), (BMAP))

	)

84 
	#BITMAP_COPY
(
DESTMAP
, 
SRCMAP
, 
SZ
) \

85 { 
i
; i=0; i<(
SZ
); i++Ë(
DESTMAP
)[i] = (
SRCMAP
)[i]; }

	)

88 
	#__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, 
OP
) \

89 { 
i
; i=0; i<(
SZ
); i++Ë(
B1
)[i] = (
B2
)[i] 
	`OP
 (
B3
)[i]; }

	)

92 
	#BITMAP_IOR
(
B1
, 
B2
, 
B3
, 
SZ
) \

93 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, |)

	)

96 
	#BITMAP_XOR
(
B1
, 
B2
, 
B3
, 
SZ
) \

97 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, ^)

	)

100 
	#BITMAP_AND
(
B1
, 
B2
, 
B3
, 
SZ
) \

101 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, &)

	)

104 
	#BITMAP_NOT
(
B1
, 
B2
, 
SZ
) \

105 { 
i
; i=0; i<(
SZ
); i++Ë(
B1
)[i] = ~((
B2
)[i]); }

	)

108 
	#BITMAP_EMPTY_P
(
BMAP
, 
SZ
) \

109 ({ 
i
, 
ªs
=0; i=0; i<(
SZ
); i++Ëª†|(
BMAP
)[i]; !ªs; })

	)

112 
	#BITMAP_DISJOINT_P
(
B1
, 
B2
, 
SZ
) \

113 ({ 
i
, 
ªs
=0; i=0; i<(
SZ
); i++Ëª†|(
B1
)[i] & (
B2
)[i]; !ªs; })

	)

116 
	#BITMAP_SET_P
(
BMAP
, 
SZ
, 
BIT
) \

117 (((
BMAP
)[(
BIT
)/32] & (1 << ((BITË% 32))Ë!0)

	)

120 
	#BITMAP_CLEAR_P
(
BMAP
, 
SZ
, 
BIT
) \

121 (!
	`BMAP_SET_P
((
BMAP
), (
SZ
), (
BIT
)))

	)

124 
	#BITMAP_COUNT_ONES
(
BMAP
, 
SZ
) \

126 
i
, 
j
, 
n
 = 0; \

127 
i
 = 0; i < (
SZ
) ; i++) \

129 
w‹d
 = (
BMAP
)[
i
]; \

130 
j
=0; j < (()*8); j++) \

132 
√w_vÆ
, 
ﬁd_vÆ
 = 
w‹d
; \

133 
w‹d
 >>= 1; \

134 
√w_vÆ
 = 
w‹d
 << 1; \

135 i‡(
ﬁd_vÆ
 !
√w_vÆ
) \

136 
n
++; \

139 
n
; \

140 })

	)

	@bpred.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

55 
	~<as£π.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"b¥ed.h
"

66 
b¥ed_t
 *

67 
	$b¥ed_¸óã
(
b¥ed_˛ass
 
˛ass
,

68 
bimod_size
,

69 
l1size
,

70 
l2size
,

71 
mëa_size
,

72 
shi·_width
,

73 
x‹
,

74 
btb_£ts
,

75 
btb_assoc
,

76 
ªt°ack_size
)

78 
b¥ed_t
 *
¥ed
;

80 i‡(!(
¥ed
 = 
	`ˇŒoc
(1, (
b¥ed_t
))))

81 
	`Áèl
("out of virtual memory");

83 
¥ed
->
˛ass
 = class;

85 
˛ass
) {

86 
BPªdComb
:

88 
¥ed
->
dú¥ed
.
bimod
 =

89 
	`b¥ed_dú_¸óã
(
BPªd2bô
, 
bimod_size
, 0, 0, 0);

92 
¥ed
->
dú¥ed
.
twﬁev
 =

93 
	`b¥ed_dú_¸óã
(
BPªd2Levñ
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

96 
¥ed
->
dú¥ed
.
mëa
 =

97 
	`b¥ed_dú_¸óã
(
BPªd2bô
, 
mëa_size
, 0, 0, 0);

101 
BPªd2Levñ
:

102 
¥ed
->
dú¥ed
.
twﬁev
 =

103 
	`b¥ed_dú_¸óã
(
˛ass
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

107 
BPªd2bô
:

108 
¥ed
->
dú¥ed
.
bimod
 =

109 
	`b¥ed_dú_¸óã
(
˛ass
, 
bimod_size
, 0, 0, 0);

111 
BPªdTakí
:

112 
BPªdNŸTakí
:

117 
	`∑nic
("bogusÖredictor class");

121 
˛ass
) {

122 
BPªdComb
:

123 
BPªd2Levñ
:

124 
BPªd2bô
:

126 
i
;

129 i‡(!
btb_£ts
 || (btb_sets & (btb_sets-1)) != 0)

130 
	`Áèl
("number of BTB sets must beÇon-zeroándáÖower ofÅwo");

131 i‡(!
btb_assoc
 || (btb_assoc & (btb_assoc-1)) != 0)

132 
	`Áèl
("BTBássociativity must beÇon-zeroándáÖower ofÅwo");

134 i‡(!(
¥ed
->
btb
.
btb_d©a
 = 
	`ˇŒoc
(
btb_£ts
 * 
btb_assoc
,

135 (
b¥ed_btb_ít_t
))))

136 
	`Áèl
("cannotállocate BTB");

138 
¥ed
->
btb
.
£ts
 = 
btb_£ts
;

139 
¥ed
->
btb
.
assoc
 = 
btb_assoc
;

141 i‡(
¥ed
->
btb
.
assoc
 > 1)

142 
i
=0; i < (
¥ed
->
btb
.
assoc
*¥ed->btb.
£ts
); i++)

144 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

145 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = &pred->btb.btb_data[i+1];

147 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = 
NULL
;

149 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

150 
¥ed
->
btb
.
btb_d©a
[
i
+1].
¥ev
 = &pred->btb.btb_data[i];

154 i‡((
ªt°ack_size
 & (retstack_size-1)) != 0)

155 
	`Áèl
("Return-address-stack size must be zero oráÖower ofÅwo");

157 
¥ed
->
ªt°ack
.
size
 = 
ªt°ack_size
;

158 i‡(
ªt°ack_size
)

159 i‡(!(
¥ed
->
ªt°ack
.
°ack
 = 
	`ˇŒoc
(
ªt°ack_size
,

160 (
b¥ed_btb_ít_t
))))

161 
	`Áèl
("cannotállocateÑeturn-address-stack");

162 
¥ed
->
ªt°ack
.
tos
 = 
ªt°ack_size
 - 1;

167 
BPªdTakí
:

168 
BPªdNŸTakí
:

173 
	`∑nic
("bogusÖredictor class");

176  
¥ed
;

177 
	}
}

180 
b¥ed_dú_t
 *

181 
	$b¥ed_dú_¸óã
 (

182 
b¥ed_˛ass
 
˛ass
,

183 
l1size
,

184 
l2size
,

185 
shi·_width
,

186 
x‹
)

188 
b¥ed_dú_t
 *
¥ed_dú
;

189 
˙t
;

190 
ÊùÊ›
;

192 i‡(!(
¥ed_dú
 = 
	`ˇŒoc
(1, (
b¥ed_dú_t
))))

193 
	`Áèl
("out of virtual memory");

195 
¥ed_dú
->
˛ass
 = class;

197 
˙t
 = -1;

198 
˛ass
) {

199 
BPªd2Levñ
:

201 i‡(!
l1size
 || (l1size & (l1size-1)) != 0)

202 
	`Áèl
("level-1 size, `%d', must beÇon-zeroándáÖower ofÅwo",

203 
l1size
);

204 
¥ed_dú
->
c⁄fig
.
two
.
l1size
 =Ü1size;

206 i‡(!
l2size
 || (l2size & (l2size-1)) != 0)

207 
	`Áèl
("level-2 size, `%d', must beÇon-zeroándáÖower ofÅwo",

208 
l2size
);

209 
¥ed_dú
->
c⁄fig
.
two
.
l2size
 =Ü2size;

211 i‡(!
shi·_width
 || shift_width > 30)

212 
	`Áèl
("shiftÑegister width, `%d', must beÇon-zeroándÖositive",

213 
shi·_width
);

214 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
 = shift_width;

216 
¥ed_dú
->
c⁄fig
.
two
.
x‹
 = xor;

217 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
 = 
	`ˇŒoc
(
l1size
, ());

218 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
)

219 
	`Áèl
("cannotállocate shiftÑegisterÅable");

221 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
 = 
	`ˇŒoc
(
l2size
, ());

222 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
)

223 
	`Áèl
("cannotállocate secondÜevelÅable");

226 
ÊùÊ›
 = 1;

227 
˙t
 = 0; c¡ < 
l2size
; cnt++)

229 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
˙t
] = 
ÊùÊ›
;

230 
ÊùÊ›
 = 3 - flipflop;

236 
BPªd2bô
:

237 i‡(!
l1size
 || (l1size & (l1size-1)) != 0)

238 
	`Áèl
("2bitÅable size, `%d', must beÇon-zeroándáÖower ofÅwo",

239 
l1size
);

240 
¥ed_dú
->
c⁄fig
.
bimod
.
size
 = 
l1size
;

241 i‡(!(
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
 =

242 
	`ˇŒoc
(
l1size
, ())))

243 
	`Áèl
("cannotállocate 2bit storage");

245 
ÊùÊ›
 = 1;

246 
˙t
 = 0; c¡ < 
l1size
; cnt++)

248 
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
˙t
] = 
ÊùÊ›
;

249 
ÊùÊ›
 = 3 - flipflop;

254 
BPªdTakí
:

255 
BPªdNŸTakí
:

260 
	`∑nic
("bogus branch directionÖredictor class");

263  
¥ed_dú
;

264 
	}
}

268 
	$b¥ed_dú_c⁄fig
(

269 
b¥ed_dú_t
 *
¥ed_dú
,

270 
«me
[],

271 
FILE
 *
°ªam
)

273 
¥ed_dú
->
˛ass
) {

274 
BPªd2Levñ
:

275 
	`Ârötf
(
°ªam
,

277 
«me
, 
¥ed_dú
->
c⁄fig
.
two
.
l1size
,Öªd_dú->c⁄fig.two.
shi·_width
,

278 
¥ed_dú
->
c⁄fig
.
two
.
x‹
 ? "" : "no",Öªd_dú->c⁄fig.two.
l2size
);

281 
BPªd2bô
:

282 
	`Ârötf
(
°ªam
, "pred_dir: %s: 2-bit: %dÉntries, direct-mapped\n",

283 
«me
, 
¥ed_dú
->
c⁄fig
.
bimod
.
size
);

286 
BPªdTakí
:

287 
	`Ârötf
(
°ªam
, "¥ed_dú: %s:Öªdi˘Åakí\n", 
«me
);

290 
BPªdNŸTakí
:

291 
	`Ârötf
(
°ªam
, "¥ed_dú: %s:Öªdi˘ÇŸÅakí\n", 
«me
);

295 
	`∑nic
("bogus branch directionÖredictor class");

297 
	}
}

301 
	$b¥ed_c⁄fig
(
b¥ed_t
 *
¥ed
,

302 
FILE
 *
°ªam
)

304 
¥ed
->
˛ass
) {

305 
BPªdComb
:

306 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

307 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

308 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
mëa
, "mëa", 
°ªam
);

309 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

310 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

311 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

314 
BPªd2Levñ
:

315 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

316 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

317 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

318 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

321 
BPªd2bô
:

322 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

323 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

324 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

325 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

328 
BPªdTakí
:

329 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "èkí", 
°ªam
);

331 
BPªdNŸTakí
:

332 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "nŸèkí", 
°ªam
);

336 
	`∑nic
("bogus branchÖredictor class");

338 
	}
}

342 
	$b¥ed_°©s
(
b¥ed_t
 *
¥ed
,

343 
FILE
 *
°ªam
)

345 
	`Ârötf
(
°ªam
, "pred:áddr-predictionÑate = %f\n",

346 ()
¥ed
->
addr_hôs
/()’ªd->addr_hôs+¥ed->
mis£s
));

347 
	`Ârötf
(
°ªam
, "pred: dir-predictionÑate = %f\n",

348 ()
¥ed
->
dú_hôs
/()’ªd->dú_hôs+¥ed->
mis£s
));

349 
	}
}

353 
	$b¥ed_ªg_°©s
(
b¥ed_t
 *
¥ed
,

354 
°©_sdb_t
 *
sdb
)

356 
buf
[512], 
buf1
[512], *
«me
;

359 
¥ed
->
˛ass
)

361 
BPªdComb
:

362 
«me
 = "bpred_comb";

364 
BPªd2Levñ
:

365 
«me
 = "bpred_2lev";

367 
BPªd2bô
:

368 
«me
 = "bpred_bimod";

370 
BPªdTakí
:

371 
«me
 = "bpred_taken";

373 
BPªdNŸTakí
:

374 
«me
 = "bpred_nottaken";

377 
	`∑nic
("bogus branchÖredictor class");

380 
	`•rötf
(
buf
, "%s.lookups", 
«me
);

381 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of bpredÜookups",

382 &
¥ed
->
lookups
, 0, 
NULL
);

383 
	`•rötf
(
buf
, "%s.upd©es", 
«me
);

384 
	`•rötf
(
buf1
, "%s.dú_hô†+ %s.mis£s", 
«me
,Çame);

385 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "tŸÆÇumbî o‡upd©es", 
buf1
, "%12.0f");

386 
	`•rötf
(
buf
, "%s.addr_hôs", 
«me
);

387 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofáddress-predicted hits",

388 &
¥ed
->
addr_hôs
, 0, 
NULL
);

389 
	`•rötf
(
buf
, "%s.dú_hôs", 
«me
);

390 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

393 &
¥ed
->
dú_hôs
, 0, 
NULL
);

394 i‡(
¥ed
->
˛ass
 =
BPªdComb
)

396 
	`•rötf
(
buf
, "%s.u£d_bimod", 
«me
);

397 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

399 &
¥ed
->
u£d_bimod
, 0, 
NULL
);

400 
	`•rötf
(
buf
, "%s.u£d_2Àv", 
«me
);

401 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

403 &
¥ed
->
u£d_2Àv
, 0, 
NULL
);

405 
	`•rötf
(
buf
, "%s.mis£s", 
«me
);

406 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
¥ed
->
mis£s
, 0, 
NULL
);

407 
	`•rötf
(
buf
, "%s.jr_hôs", 
«me
);

408 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

410 &
¥ed
->
jr_hôs
, 0, 
NULL
);

411 
	`•rötf
(
buf
, "%s.jr_£í", 
«me
);

412 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

414 &
¥ed
->
jr_£í
, 0, 
NULL
);

415 
	`•rötf
(
buf
, "%s.jr_n⁄_øs_hôs.PP", 
«me
);

416 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

418 &
¥ed
->
jr_n⁄_øs_hôs
, 0, 
NULL
);

419 
	`•rötf
(
buf
, "%s.jr_n⁄_øs_£í.PP", 
«me
);

420 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

422 &
¥ed
->
jr_n⁄_øs_£í
, 0, 
NULL
);

423 
	`•rötf
(
buf
, "%s.b¥ed_addr_øã", 
«me
);

424 
	`•rötf
(
buf1
, "%s.addr_hô†/ %s.upd©es", 
«me
,Çame);

425 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

427 
buf1
, "%9.4f");

428 
	`•rötf
(
buf
, "%s.b¥ed_dú_øã", 
«me
);

429 
	`•rötf
(
buf1
, "%s.dú_hô†/ %s.upd©es", 
«me
,Çame);

430 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

432 
buf1
, "%9.4f");

433 
	`•rötf
(
buf
, "%s.b¥ed_jr_øã", 
«me
);

434 
	`•rötf
(
buf1
, "%s.jr_hô†/ %s.jr_£í", 
«me
,Çame);

435 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

437 
buf1
, "%9.4f");

438 
	`•rötf
(
buf
, "%s.b¥ed_jr_n⁄_øs_øã.PP", 
«me
);

439 
	`•rötf
(
buf1
, "%s.jr_n⁄_øs_hôs.PP / %s.jr_n⁄_øs_£í.PP", 
«me
,Çame);

440 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

442 
buf1
, "%9.4f");

443 
	`•rötf
(
buf
, "%s.ªt°ack_pushes", 
«me
);

444 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

446 &
¥ed
->
ªt°ack_pushes
, 0, 
NULL
);

447 
	`•rötf
(
buf
, "%s.ªt°ack_p›s", 
«me
);

448 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

450 &
¥ed
->
ªt°ack_p›s
, 0, 
NULL
);

451 
	`•rötf
(
buf
, "%s.u£d_øs.PP", 
«me
);

452 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

454 &
¥ed
->
u£d_øs
, 0, 
NULL
);

455 
	`•rötf
(
buf
, "%s.øs_hôs.PP", 
«me
);

456 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

458 &
¥ed
->
øs_hôs
, 0, 
NULL
);

459 
	`•rötf
(
buf
, "%s.øs_øã.PP", 
«me
);

460 
	`•rötf
(
buf1
, "%s.øs_hôs.PP / %s.u£d_øs.PP", 
«me
,Çame);

461 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

463 
buf1
, "%9.4f");

464 
	}
}

467 
	$b¥ed_a·î_¥imög
(
b¥ed_t
 *
b¥ed
)

469 i‡(
b¥ed
 =
NULL
)

472 
b¥ed
->
lookups
 = 0;

473 
b¥ed
->
addr_hôs
 = 0;

474 
b¥ed
->
dú_hôs
 = 0;

475 
b¥ed
->
u£d_øs
 = 0;

476 
b¥ed
->
u£d_bimod
 = 0;

477 
b¥ed
->
u£d_2Àv
 = 0;

478 
b¥ed
->
jr_hôs
 = 0;

479 
b¥ed
->
jr_£í
 = 0;

480 
b¥ed
->
mis£s
 = 0;

481 
b¥ed
->
ªt°ack_p›s
 = 0;

482 
b¥ed
->
ªt°ack_pushes
 = 0;

483 
b¥ed
->
øs_hôs
 = 0;

484 
	}
}

486 
	#BIMOD_HASH
(
PRED
, 
ADDR
) \

487 ((((
ADDR
Ë>> 19Ë^ ((ADDRË>> 
MD_BR_SHIFT
)Ë& ((
PRED
)->
c⁄fig
.
bimod
.
size
-1))

	)

492 
	$b¥ed_dú_lookup
(
b¥ed_dú_t
 *
¥ed_dú
,

493 
md_addr_t
 
baddr
)

495 *
p
 = 
NULL
;

498 
¥ed_dú
->
˛ass
) {

499 
BPªd2Levñ
:

501 
l1ödex
, 
l2ödex
;

504 
l1ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed_dú
->
c⁄fig
.
two
.
l1size
 - 1);

505 
l2ödex
 = 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
];

506 i‡(
¥ed_dú
->
c⁄fig
.
two
.
x‹
)

513 
l2ödex
 = ((÷2ödex ^ (
baddr
 >> 
MD_BR_SHIFT
))

514 & ((1 << 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
) - 1))

515 | ((
baddr
 >> 
MD_BR_SHIFT
)

516 << 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
));

518 
l2ödex
 =Ü2ödex ^ (
baddr
 >> 
MD_BR_SHIFT
);

523 
l2ödex
 =

524 
l2ödex


525 | ((
baddr
 >> 
MD_BR_SHIFT
Ë<< 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
);

527 
l2ödex
 =Ü2ödex & (
¥ed_dú
->
c⁄fig
.
two
.
l2size
 - 1);

530 
p
 = &
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
l2ödex
];

533 
BPªd2bô
:

534 
p
 = &
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
	`BIMOD_HASH
’ªd_dú, 
baddr
)];

536 
BPªdTakí
:

537 
BPªdNŸTakí
:

540 
	`∑nic
("bogus branch directionÖredictor class");

543  (*)
p
;

544 
	}
}

553 
md_addr_t


554 
	$b¥ed_lookup
(
b¥ed_t
 *
¥ed
,

555 
md_addr_t
 
baddr
,

556 
md_addr_t
 
bèrgë
,

557 
md_›code
 
›
,

558 
is_ˇŒ
,

559 
is_ªtu∫
,

560 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

561 *
°ack_ªcovî_idx
)

564 
b¥ed_btb_ít_t
 *
pbtb
 = 
NULL
;

565 
ödex
, 
i
;

567 i‡(!
dú_upd©e_±r
)

568 
	`∑nic
("no bpred updateÑecord");

571 i‡(!(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
))

574 
¥ed
->
lookups
++;

576 
dú_upd©e_±r
->
dú
.
øs
 = 
FALSE
;

577 
dú_upd©e_±r
->
pdú1
 = 
NULL
;

578 
dú_upd©e_±r
->
pdú2
 = 
NULL
;

579 
dú_upd©e_±r
->
pmëa
 = 
NULL
;

581 
¥ed
->
˛ass
) {

582 
BPªdComb
:

583 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

585 *
bimod
, *
twﬁev
, *
mëa
;

586 
bimod
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.bimod, 
baddr
);

587 
twﬁev
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.twﬁev, 
baddr
);

588 
mëa
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.mëa, 
baddr
);

589 
dú_upd©e_±r
->
pmëa
 = 
mëa
;

590 
dú_upd©e_±r
->
dú
.
mëa
 = (*meta >= 2);

591 
dú_upd©e_±r
->
dú
.
bimod
 = (*bimod >= 2);

592 
dú_upd©e_±r
->
dú
.
twﬁev
 = (*twolev >= 2);

593 i‡(*
mëa
 >= 2)

595 
dú_upd©e_±r
->
pdú1
 = 
twﬁev
;

596 
dú_upd©e_±r
->
pdú2
 = 
bimod
;

600 
dú_upd©e_±r
->
pdú1
 = 
bimod
;

601 
dú_upd©e_±r
->
pdú2
 = 
twﬁev
;

605 
BPªd2Levñ
:

606 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

608 
dú_upd©e_±r
->
pdú1
 =

609 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
twﬁev
, 
baddr
);

612 
BPªd2bô
:

613 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

615 
dú_upd©e_±r
->
pdú1
 =

616 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
);

619 
BPªdTakí
:

620  
bèrgë
;

621 
BPªdNŸTakí
:

622 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

624  
baddr
 + (
md_ö°_t
);

628  
bèrgë
;

631 
	`∑nic
("bogusÖredictor class");

642 i‡(
¥ed
->
ªt°ack
.
size
)

643 *
°ack_ªcovî_idx
 = 
¥ed
->
ªt°ack
.
tos
;

645 *
°ack_ªcovî_idx
 = 0;

648 i‡(
is_ªtu∫
 && 
¥ed
->
ªt°ack
.
size
)

650 
md_addr_t
 
èrgë
 = 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].target;

651 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+Öªd->ªt°ack.
size
 - 1)

652 % 
¥ed
->
ªt°ack
.
size
;

653 
¥ed
->
ªt°ack_p›s
++;

654 
dú_upd©e_±r
->
dú
.
øs
 = 
TRUE
;

655  
èrgë
;

658 #i‚de‡
RAS_BUG_COMPATIBLE


660 i‡(
is_ˇŒ
 && 
¥ed
->
ªt°ack
.
size
)

662 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+ 1)%Öªd->ªt°ack.
size
;

663 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].
èrgë
 =

664 
baddr
 + (
md_ö°_t
);

665 
¥ed
->
ªt°ack_pushes
++;

670 
ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

672 i‡(
¥ed
->
btb
.
assoc
 > 1)

674 
ödex
 *
¥ed
->
btb
.
assoc
;

677 
i
 = 
ödex
; i < (ödex+
¥ed
->
btb
.
assoc
) ; i++)

678 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

681 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

687 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

688 i‡(
pbtb
->
addr
 !
baddr
)

689 
pbtb
 = 
NULL
;

697 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) == (F_CTRL|F_UNCOND))

699  (
pbtb
 ?Öbtb->
èrgë
 : 1);

703 i‡(
pbtb
 =
NULL
)

706  ((*(
dú_upd©e_±r
->
pdú1
) >= 2)

713  ((*(
dú_upd©e_±r
->
pdú1
) >= 2)

714 ? 
pbtb
->
èrgë


717 
	}
}

724 
	$b¥ed_ªcovî
(
b¥ed_t
 *
¥ed
,

725 
md_addr_t
 
baddr
,

726 
°ack_ªcovî_idx
)

729 i‡(
¥ed
 =
NULL
)

732 
¥ed
->
ªt°ack
.
tos
 = 
°ack_ªcovî_idx
;

733 
	}
}

744 
	$b¥ed_upd©e
(
b¥ed_t
 *
¥ed
,

745 
md_addr_t
 
baddr
,

746 
md_addr_t
 
bèrgë
,

747 
èkí
,

748 
¥ed_èkí
,

749 
c‹ª˘
,

750 
md_›code
 
›
,

751 
b¥ed_upd©e_t
 *
dú_upd©e_±r
)

753 
b¥ed_btb_ít_t
 *
pbtb
 = 
NULL
;

754 
b¥ed_btb_ít_t
 *
Ãuhód
 = 
NULL
, *
Ãuôem
 = NULL;

755 
ödex
, 
i
;

759 i‡(!(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
))

764 i‡(
c‹ª˘
)

765 
¥ed
->
addr_hôs
++;

767 i‡(!!
¥ed_èkí
 =!!
èkí
)

768 
¥ed
->
dú_hôs
++;

770 
¥ed
->
mis£s
++;

772 i‡(
dú_upd©e_±r
->
dú
.
øs
)

774 
¥ed
->
u£d_øs
++;

775 i‡(
c‹ª˘
)

776 
¥ed
->
øs_hôs
++;

778 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_COND
)) == (F_CTRL|F_COND))

780 i‡(
dú_upd©e_±r
->
dú
.
mëa
)

781 
¥ed
->
u£d_2Àv
++;

783 
¥ed
->
u£d_bimod
++;

788 i‡(
	`MD_IS_INDIR
(
›
))

790 
¥ed
->
jr_£í
++;

791 i‡(
c‹ª˘
)

792 
¥ed
->
jr_hôs
++;

794 i‡(!
dú_upd©e_±r
->
dú
.
øs
)

796 
¥ed
->
jr_n⁄_øs_£í
++;

797 i‡(
c‹ª˘
)

798 
¥ed
->
jr_n⁄_øs_hôs
++;

808 i‡(
¥ed
->
˛ass
 =
BPªdNŸTakí
 ||Öªd->˛as†=
BPªdTakí
)

816 #ifde‡
RAS_BUG_COMPATIBLE


818 i‡(
	`MD_IS_CALL
(
›
Ë&& 
¥ed
->
ªt°ack
.
size
)

820 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+ 1)%Öªd->ªt°ack.
size
;

821 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].
èrgë
 =

822 
baddr
 + (
md_ö°_t
);

823 
¥ed
->
ªt°ack_pushes
++;

829 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND) &&

830 (
¥ed
->
˛ass
 =
BPªd2Levñ
 ||Öªd->˛as†=
BPªdComb
))

832 
l1ödex
, 
shi·_ªg
;

835 
l1ödex
 =

836 (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
l1size
 - 1);

837 
shi·_ªg
 =

838 (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] << 1Ë| (!!
èkí
);

839 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] =

840 
shi·_ªg
 & ((1 << 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·_width
) - 1);

844 i‡(
èkí
)

846 
ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

848 i‡(
¥ed
->
btb
.
assoc
 > 1)

850 
ödex
 *
¥ed
->
btb
.
assoc
;

854 
i
 = 
ödex
; i < (ödex+
¥ed
->
btb
.
assoc
) ; i++)

856 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

859 
	`as£π
(!
pbtb
);

860 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

863 
	`das£π
(
¥ed
->
btb
.
btb_d©a
[
i
].
¥ev


864 !
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
);

865 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
¥ev
 =
NULL
)

868 
	`das£π
(
Ãuhód
 =
NULL
);

869 
Ãuhód
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

871 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 =
NULL
)

874 
	`das£π
(
Ãuôem
 =
NULL
);

875 
Ãuôem
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

878 
	`das£π
(
Ãuhód
 && 
Ãuôem
);

880 i‡(!
pbtb
)

882 
pbtb
 = 
Ãuôem
;

888 i‡(
pbtb
 !
Ãuhód
)

891 i‡(
pbtb
->
¥ev
)

892 
pbtb
->
¥ev
->
√xt
 =Öbtb->next;

893 i‡(
pbtb
->
√xt
)

894 
pbtb
->
√xt
->
¥ev
 =Öbtb->prev;

896 
pbtb
->
√xt
 = 
Ãuhód
;

897 
pbtb
->
¥ev
 = 
NULL
;

898 
Ãuhód
->
¥ev
 = 
pbtb
;

899 
	`das£π
(
pbtb
->
¥ev
 ||Öbtb->
√xt
);

900 
	`das£π
(
pbtb
->
¥ev
 !pbtb->
√xt
);

905 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

915 i‡(
dú_upd©e_±r
->
pdú1
)

917 i‡(
èkí
)

919 i‡(*
dú_upd©e_±r
->
pdú1
 < 3)

920 ++*
dú_upd©e_±r
->
pdú1
;

924 i‡(*
dú_upd©e_±r
->
pdú1
 > 0)

925 --*
dú_upd©e_±r
->
pdú1
;

931 i‡(
dú_upd©e_±r
->
pdú2
)

933 i‡(
èkí
)

935 i‡(*
dú_upd©e_±r
->
pdú2
 < 3)

936 ++*
dú_upd©e_±r
->
pdú2
;

940 i‡(*
dú_upd©e_±r
->
pdú2
 > 0)

941 --*
dú_upd©e_±r
->
pdú2
;

946 i‡(
dú_upd©e_±r
->
pmëa
)

948 i‡(
dú_upd©e_±r
->
dú
.
bimod
 !dú_upd©e_±r->dú.
twﬁev
)

951 i‡(
dú_upd©e_±r
->
dú
.
twﬁev
 =()
èkí
)

954 i‡(*
dú_upd©e_±r
->
pmëa
 < 3)

955 ++*
dú_upd©e_±r
->
pmëa
;

960 i‡(*
dú_upd©e_±r
->
pmëa
 > 0)

961 --*
dú_upd©e_±r
->
pmëa
;

967 i‡(
pbtb
)

970 
	`das£π
(
èkí
);

972 i‡(
pbtb
->
addr
 =
baddr
)

974 i‡(!
c‹ª˘
)

975 
pbtb
->
èrgë
 = 
bèrgë
;

980 
pbtb
->
addr
 = 
baddr
;

981 
pbtb
->
›
 = op;

982 
pbtb
->
èrgë
 = 
bèrgë
;

985 
	}
}

	@bpred.h

52 #i‚de‡
BPRED_H


53 
	#BPRED_H


	)

55 
	#das£π
(
a
Ë
	`as£π
◊)

	)

57 
	~<°dio.h
>

59 
	~"ho°.h
"

60 
	~"misc.h
"

61 
	~"machöe.h
"

62 
	~"°©s.h
"

101 
	eb¥ed_˛ass
 {

102 
	mBPªdComb
,

103 
	mBPªd2Levñ
,

104 
	mBPªd2bô
,

105 
	mBPªdTakí
,

106 
	mBPªdNŸTakí
,

107 
	mBPªd_NUM


111 
	sb¥ed_btb_ít_t
 {

112 
md_addr_t
 
	maddr
;

113 
md_›code
 
	m›
;

114 
md_addr_t
 
	mèrgë
;

115 
b¥ed_btb_ít_t
 *
	m¥ev
, *
	m√xt
;

119 
	sb¥ed_dú_t
 {

120 
b¥ed_˛ass
 
	m˛ass
;

123 
	msize
;

124 *
	mèbÀ
;

125 } 
	mbimod
;

127 
	ml1size
;

128 
	ml2size
;

129 
	mshi·_width
;

130 
	mx‹
;

131 *
	mshi·ªgs
;

132 *
	ml2èbÀ
;

133 } 
	mtwo
;

134 } 
	mc⁄fig
;

138 
	sb¥ed_t
 {

139 
b¥ed_˛ass
 
	m˛ass
;

141 
b¥ed_dú_t
 *
	mbimod
;

142 
b¥ed_dú_t
 *
	mtwﬁev
;

143 
b¥ed_dú_t
 *
	mmëa
;

144 } 
	mdú¥ed
;

147 
	m£ts
;

148 
	massoc
;

149 
b¥ed_btb_ít_t
 *
	mbtb_d©a
;

150 } 
	mbtb
;

153 
	msize
;

154 
	mtos
;

155 
b¥ed_btb_ít_t
 *
	m°ack
;

156 } 
	mªt°ack
;

159 
cou¡î_t
 
	maddr_hôs
;

160 
cou¡î_t
 
	mdú_hôs
;

161 
cou¡î_t
 
	mu£d_øs
;

162 
cou¡î_t
 
	mu£d_bimod
;

163 
cou¡î_t
 
	mu£d_2Àv
;

164 
cou¡î_t
 
	mjr_hôs
;

165 
cou¡î_t
 
	mjr_£í
;

166 
cou¡î_t
 
	mjr_n⁄_øs_hôs
;

167 
cou¡î_t
 
	mjr_n⁄_øs_£í
;

168 
cou¡î_t
 
	mmis£s
;

170 
cou¡î_t
 
	mlookups
;

171 
cou¡î_t
 
	mªt°ack_p›s
;

172 
cou¡î_t
 
	mªt°ack_pushes
;

173 
cou¡î_t
 
	møs_hôs
;

177 
	sb¥ed_upd©e_t
 {

178 *
	mpdú1
;

179 *
	mpdú2
;

180 *
	mpmëa
;

182 
	møs
 : 1;

183 
	mbimod
 : 1;

184 
	mtwﬁev
 : 1;

185 
	mmëa
 : 1;

186 } 
	mdú
;

190 
b¥ed_t
 *

191 
b¥ed_¸óã
(
b¥ed_˛ass
 
˛ass
,

192 
bimod_size
,

193 
l1size
,

194 
l2size
,

195 
mëa_size
,

196 
shi·_width
,

197 
x‹
,

198 
btb_£ts
,

199 
btb_assoc
,

200 
ªt°ack_size
);

203 
b¥ed_dú_t
 *

204 
b¥ed_dú_¸óã
 (

205 
b¥ed_˛ass
 
˛ass
,

206 
l1size
,

207 
l2size
,

208 
shi·_width
,

209 
x‹
);

213 
b¥ed_c⁄fig
(
b¥ed_t
 *
¥ed
,

214 
FILE
 *
°ªam
);

218 
b¥ed_°©s
(
b¥ed_t
 *
¥ed
,

219 
FILE
 *
°ªam
);

223 
b¥ed_ªg_°©s
(
b¥ed_t
 *
¥ed
,

224 
°©_sdb_t
 *
sdb
);

227 
b¥ed_a·î_¥imög
(
b¥ed_t
 *
b¥ed
);

236 
md_addr_t


237 
b¥ed_lookup
(
b¥ed_t
 *
¥ed
,

238 
md_addr_t
 
baddr
,

239 
md_addr_t
 
bèrgë
,

240 
md_›code
 
›
,

241 
is_ˇŒ
,

242 
is_ªtu∫
,

243 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

244 *
°ack_ªcovî_idx
);

252 
b¥ed_ªcovî
(
b¥ed_t
 *
¥ed
,

253 
md_addr_t
 
baddr
,

254 
°ack_ªcovî_idx
);

266 
b¥ed_upd©e
(
b¥ed_t
 *
¥ed
,

267 
md_addr_t
 
baddr
,

268 
md_addr_t
 
bèrgë
,

269 
èkí
,

270 
¥ed_èkí
,

271 
c‹ª˘
,

272 
md_›code
 
›
,

273 
b¥ed_upd©e_t
 *
dú_upd©e_±r
);

276 #ifde‡
foo0


280 
b¥ed_dump
(
b¥ed_t
 *
¥ed
,

281 
FILE
 *
°ªam
);

	@cache.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<as£π.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ˇche.h
"

62 
	#CACHE_TAG
(
˝
, 
addr
Ë(◊ddrË>> (˝)->
èg_shi·
)

	)

63 
	#CACHE_SET
(
˝
, 
addr
Ë((◊ddrË>> (˝)->
£t_shi·
Ë& (˝)->
£t_mask
)

	)

64 
	#CACHE_BLK
(
˝
, 
addr
Ë(◊ddrË& (˝)->
blk_mask
)

	)

65 
	#CACHE_TAGSET
(
˝
, 
addr
Ë(◊ddrË& (˝)->
èg£t_mask
)

	)

68 
	#CACHE_BADDR
(
˝
, 
addr
Ë(◊ddrË& ~(˝)->
blk_mask
)

	)

69 
	#CACHE_MK_BADDR
(
˝
, 
èg
, 
£t
) \

70 (((
èg
Ë<< (
˝
)->
èg_shi·
)|((
£t
Ë<< (˝)->
£t_shi·
))

	)

73 
	#CACHE_BINDEX
(
˝
, 
blks
, 
i
) \

74 ((
ˇche_blk_t
 *)(((*)(
blks
)) + \

75 (
i
)*((
ˇche_blk_t
) + \

76 ((
˝
)->
bÆloc
 \

77 ? (
˝
)->
bsize
*(
byã_t
Ë: 0))))

	)

80 
	#__CACHE_ACCESS
(
ty≥
, 
d©a
, 
bofs
) \

81 (*((
ty≥
 *)(((*)
d©a
Ë+ (
bofs
))))

	)

84 
	#CACHE_DOUBLE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

85 
	#CACHE_FLOAT
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

86 
	#CACHE_WORD
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

87 
	#CACHE_HALF
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

88 
	#CACHE_BYTE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

93 
	#CACHE_HASH
(
˝
, 
key
) \

94 (((
key
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& ((
˝
)->
hsize
-1))

	)

97 
	#CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
) \

98 i‡(
cmd
 =
Ród
) \

100 
nbyãs
) { \

102 *((
byã_t
 *)
p
Ë
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
); ; \

104 *((
hÆf_t
 *)
p
Ë
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
); ; \

106 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); ; \

109 
w‹ds
 = 
nbyãs
 >> 2; \

110 
w‹ds
-- > 0) \

112 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); \

113 
p
 +4; 
bofs
 += 4; \

120 
nbyãs
) { \

122 
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
Ë*((
byã_t
 *)
p
); ; \

124 
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
Ë*((
hÆf_t
 *)
p
); ; \

126 
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); ; \

129 
w‹ds
 = 
nbyãs
 >> 2; \

130 
w‹ds
-- > 0) \

132 
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); \

133 
p
 +4; 
bofs
 += 4; \

137 }

	)

140 
	#BOUND_POS
(
N
Ë(()(
	`MIN
(
	`MAX
(0, (N)), 2147483647)))

	)

144 
	$u∆ök_hèb_ít
(
ˇche_t
 *
˝
,

145 
ˇche_£t_t
 *
£t
,

146 
ˇche_blk_t
 *
blk
)

148 
ˇche_blk_t
 *
¥ev
, *
ít
;

149 
ödex
 = 
	`CACHE_HASH
(
˝
, 
blk
->
èg
);

152 
¥ev
=
NULL
,
ít
=
£t
->
hash
[
ödex
];

153 
ít
;

154 
¥ev
=
ít
,ítÛ¡->
hash_√xt
)

156 i‡(
ít
 =
blk
)

159 
	`as£π
(
ít
);

162 i‡(!
¥ev
)

165 
£t
->
hash
[
ödex
] = 
ít
->
hash_√xt
;

170 
¥ev
->
hash_√xt
 = 
ít
->hash_next;

172 
ít
->
hash_√xt
 = 
NULL
;

173 
	}
}

177 
	$lök_hèb_ít
(
ˇche_t
 *
˝
,

178 
ˇche_£t_t
 *
£t
,

179 
ˇche_blk_t
 *
blk
)

181 
ödex
 = 
	`CACHE_HASH
(
˝
, 
blk
->
èg
);

184 
blk
->
hash_√xt
 = 
£t
->
hash
[
ödex
];

185 
£t
->
hash
[
ödex
] = 
blk
;

186 
	}
}

189 
	eli°_loc_t
 { 
	mHód
, 
	mTaû
 };

193 
	$upd©e_way_li°
(
ˇche_£t_t
 *
£t
,

194 
ˇche_blk_t
 *
blk
,

195 
li°_loc_t
 
whîe
)

198 i‡(!
blk
->
way_¥ev
 && !blk->
way_√xt
)

201 
	`as£π
(
£t
->
way_hód
 =
blk
 && së->
way_èû
 == blk);

206 i‡(!
blk
->
way_¥ev
)

208 
	`as£π
(
£t
->
way_hód
 =
blk
 && së->
way_èû
 != blk);

209 i‡(
whîe
 =
Hód
)

215 
£t
->
way_hód
 = 
blk
->
way_√xt
;

216 
blk
->
way_√xt
->
way_¥ev
 = 
NULL
;

218 i‡(!
blk
->
way_√xt
)

221 
	`as£π
(
£t
->
way_hód
 !
blk
 && së->
way_èû
 == blk);

222 i‡(
whîe
 =
Taû
)

227 
£t
->
way_èû
 = 
blk
->
way_¥ev
;

228 
blk
->
way_¥ev
->
way_√xt
 = 
NULL
;

233 
	`as£π
(
£t
->
way_hód
 !
blk
 && së->
way_èû
 != blk);

234 
blk
->
way_¥ev
->
way_√xt
 = blk->way_next;

235 
blk
->
way_√xt
->
way_¥ev
 = blk->way_prev;

239 i‡(
whîe
 =
Hód
)

242 
blk
->
way_√xt
 = 
£t
->
way_hód
;

243 
blk
->
way_¥ev
 = 
NULL
;

244 
£t
->
way_hód
->
way_¥ev
 = 
blk
;

245 
£t
->
way_hód
 = 
blk
;

247 i‡(
whîe
 =
Taû
)

250 
blk
->
way_¥ev
 = 
£t
->
way_èû
;

251 
blk
->
way_√xt
 = 
NULL
;

252 
£t
->
way_èû
->
way_√xt
 = 
blk
;

253 
£t
->
way_èû
 = 
blk
;

256 
	`∑nic
("bogus WHERE designator");

257 
	}
}

260 
ˇche_t
 *

261 
ˇche_¸óã
(*
«me
,

262 
n£ts
,

263 
bsize
,

264 
bÆloc
,

265 
usize
,

266 
assoc
,

267 
ˇche_pﬁicy
 
pﬁicy
,

269 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

270 
md_addr_t
 
baddr
, 
bsize
,

271 
ˇche_blk_t
 *
blk
,

272 
tick_t
 
now
),

273 
hô_œãncy
)

275 
ˇche_t
 *
˝
;

276 
ˇche_blk_t
 *
blk
;

277 
i
, 
j
, 
bödex
;

280 i‡(
n£ts
 <= 0)

281 
	`Áèl
("ˇchêsizê(ö sësË`%d' mu° bên⁄-zîo", 
n£ts
);

282 i‡((
n£ts
 & (nsets-1)) != 0)

283 
	`Áèl
("ˇchêsizê(ö sësË`%d' i†nŸáÖowî o‡two", 
n£ts
);

285 i‡(
bsize
 < 8)

286 
	`Áèl
("ˇchêblock sizê(ö byãsË`%d' mu° bê8 o∏gª©î", 
bsize
);

287 i‡((
bsize
 & (bsize-1)) != 0)

288 
	`Áèl
("ˇchêblock sizê(ö byãsË`%d' mu° bê®powî o‡two", 
bsize
);

289 i‡(
usize
 < 0)

290 
	`Áèl
("u£∏d©®sizê(ö byãsË`%d' mu° bê®posôivêvÆue", 
usize
);

291 i‡(
assoc
 <= 0)

292 
	`Áèl
("ˇchêassocütivôy `%d' mu° bên⁄-zîÿ™dÖosôive", 
assoc
);

293 i‡((
assoc
 & (assoc-1)) != 0)

294 
	`Áèl
("ˇchêassocütivôy `%d' mu° bê®powî o‡two", 
assoc
);

295 i‡(!
blk_ac˚ss_‚
)

296 
	`Áèl
("must specify miss/replacement functions");

299 
˝
 = (
ˇche_t
 *)

300 
	`ˇŒoc
(1, (
ˇche_t
Ë+ (
n£ts
-1)*(
ˇche_£t_t
));

301 i‡(!
˝
)

302 
	`Áèl
("out of virtual memory");

305 
˝
->
«me
 = 
	`my°rdup
(name);

306 
˝
->
n£ts
 =Çsets;

307 
˝
->
bsize
 = bsize;

308 
˝
->
bÆloc
 = balloc;

309 
˝
->
usize
 = usize;

310 
˝
->
assoc
 =ássoc;

311 
˝
->
pﬁicy
 =Öolicy;

312 
˝
->
hô_œãncy
 = hit_latency;

315 
˝
->
blk_ac˚ss_‚
 = blk_access_fn;

318 
˝
->
hsize
 = 
	`CACHE_HIGHLY_ASSOC
(˝Ë? (
assoc
 >> 2) : 0;

319 
˝
->
blk_mask
 = 
bsize
-1;

320 
˝
->
£t_shi·
 = 
	`log_ba£2
(
bsize
);

321 
˝
->
£t_mask
 = 
n£ts
-1;

322 
˝
->
èg_shi·
 = cp->
£t_shi·
 + 
	`log_ba£2
(
n£ts
);

323 
˝
->
èg_mask
 = (1 << (32 - cp->
èg_shi·
))-1;

324 
˝
->
èg£t_mask
 = ~˝->
blk_mask
;

325 
˝
->
bus_‰ì
 = 0;

328 
	`debug
("%s: cp->hsizê = %d", 
˝
->
«me
, cp->
hsize
);

329 
	`debug
("%s: cp->blk_mask = 0x%08x", 
˝
->
«me
, cp->
blk_mask
);

330 
	`debug
("%s: cp->£t_shi· = %d", 
˝
->
«me
, cp->
£t_shi·
);

331 
	`debug
("%s: cp->£t_mask = 0x%08x", 
˝
->
«me
, cp->
£t_mask
);

332 
	`debug
("%s: cp->èg_shi· = %d", 
˝
->
«me
, cp->
èg_shi·
);

333 
	`debug
("%s: cp->èg_mask = 0x%08x", 
˝
->
«me
, cp->
èg_mask
);

336 
˝
->
hôs
 = 0;

337 
˝
->
mis£s
 = 0;

338 
˝
->
ª∂a˚míts
 = 0;

339 
˝
->
wrôebacks
 = 0;

340 
˝
->
övÆid©i⁄s
 = 0;

343 
˝
->
œ°_èg£t
 = 0;

344 
˝
->
œ°_blk
 = 
NULL
;

347 
˝
->
d©a
 = (
byã_t
 *)
	`ˇŒoc
(
n£ts
 * 
assoc
,

348 (
ˇche_blk_t
) +

349 (
˝
->
bÆloc
 ? (
bsize
*(
byã_t
)) : 0));

350 i‡(!
˝
->
d©a
)

351 
	`Áèl
("out of virtual memory");

354 
bödex
=0,
i
=0; i<
n£ts
; i++)

356 
˝
->
£ts
[
i
].
way_hód
 = 
NULL
;

357 
˝
->
£ts
[
i
].
way_èû
 = 
NULL
;

359 i‡(
˝
->
hsize
)

361 
˝
->
£ts
[
i
].
hash
 =

362 (
ˇche_blk_t
 **)
	`ˇŒoc
(
˝
->
hsize
,

363 (
ˇche_blk_t
 *));

364 i‡(!
˝
->
£ts
[
i
].
hash
)

365 
	`Áèl
("out of virtual memory");

370 
˝
->
£ts
[
i
].
blks
 = 
	`CACHE_BINDEX
(˝, cp->
d©a
, 
bödex
);

374 
j
=0; j<
assoc
; j++)

377 
blk
 = 
	`CACHE_BINDEX
(
˝
, cp->
d©a
, 
bödex
);

378 
bödex
++;

381 
blk
->
°©us
 = 0;

382 
blk
->
èg
 = 0;

383 
blk
->
ªady
 = 0;

384 
blk
->
u£r_d©a
 = (
usize
 != 0

385 ? (
byã_t
 *)
	`ˇŒoc
(
usize
, (byã_t)Ë: 
NULL
);

388 i‡(
˝
->
hsize
)

389 
	`lök_hèb_ít
(
˝
, &˝->
£ts
[
i
], 
blk
);

392 
blk
->
way_√xt
 = 
˝
->
£ts
[
i
].
way_hód
;

393 
blk
->
way_¥ev
 = 
NULL
;

394 i‡(
˝
->
£ts
[
i
].
way_hód
)

395 
˝
->
£ts
[
i
].
way_hód
->
way_¥ev
 = 
blk
;

396 
˝
->
£ts
[
i
].
way_hód
 = 
blk
;

397 i‡(!
˝
->
£ts
[
i
].
way_èû
)

398 
˝
->
£ts
[
i
].
way_èû
 = 
blk
;

401  
˝
;

402 
	}
}

405 
ˇche_pﬁicy


406 
	$ˇche_ch¨2pﬁicy
(
c
)

408 
c
) {

409 'l':  
LRU
;

410 'r':  
R™dom
;

411 'f':  
FIFO
;

412 : 
	`Áèl
("bogu†ª∂a˚míàpﬁicy, `%c'", 
c
);

414 
	}
}

418 
	$ˇche_c⁄fig
(
ˇche_t
 *
˝
,

419 
FILE
 *
°ªam
)

421 
	`Ârötf
(
°ªam
,

423 
˝
->
«me
, cp->
n£ts
, cp->
bsize
, cp->
usize
);

424 
	`Ârötf
(
°ªam
,

426 
˝
->
«me
, cp->
assoc
,

427 
˝
->
pﬁicy
 =
LRU
 ? "LRU"

428 : 
˝
->
pﬁicy
 =
R™dom
 ? "Random"

429 : 
˝
->
pﬁicy
 =
FIFO
 ? "FIFO"

430 : (
	`ab‹t
(), ""));

431 
	}
}

435 
	$ˇche_ªg_°©s
(
ˇche_t
 *
˝
,

436 
°©_sdb_t
 *
sdb
)

438 
buf
[512], 
buf1
[512], *
«me
;

441 i‡(!
˝
->
«me
 || !cp->name[0])

442 
«me
 = "<unknown>";

444 
«me
 = 
˝
->name;

446 
	`•rötf
(
buf
, "%s.ac˚s£s", 
«me
);

447 
	`•rötf
(
buf1
, "%s.hô†+ %s.mis£s", 
«me
,Çame);

448 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "tŸÆÇumbî o‡ac˚s£s", 
buf1
, "%12.0f");

449 
	`•rötf
(
buf
, "%s.hôs", 
«me
);

450 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡hôs", &
˝
->
hôs
, 0, 
NULL
);

451 
	`•rötf
(
buf
, "%s.mis£s", 
«me
);

452 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
˝
->
mis£s
, 0, 
NULL
);

453 
	`•rötf
(
buf
, "%s.ª∂a˚míts", 
«me
);

454 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofÑeplacements",

455 &
˝
->
ª∂a˚míts
, 0, 
NULL
);

456 
	`•rötf
(
buf
, "%s.wrôebacks", 
«me
);

457 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of writebacks",

458 &
˝
->
wrôebacks
, 0, 
NULL
);

459 
	`•rötf
(
buf
, "%s.övÆid©i⁄s", 
«me
);

460 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of invalidations",

461 &
˝
->
övÆid©i⁄s
, 0, 
NULL
);

462 
	`•rötf
(
buf
, "%s.miss_øã", 
«me
);

463 
	`•rötf
(
buf1
, "%s.mis£†/ %s.ac˚s£s", 
«me
,Çame);

464 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "mis†øã (i.e., mis£s/ªf)", 
buf1
, 
NULL
);

465 
	`•rötf
(
buf
, "%s.ª∂_øã", 
«me
);

466 
	`•rötf
(
buf1
, "%s.ª∂a˚mít†/ %s.ac˚s£s", 
«me
,Çame);

467 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "ª∂a˚míàøã (i.e.,Ñïls/ªf)", 
buf1
, 
NULL
);

468 
	`•rötf
(
buf
, "%s.wb_øã", 
«me
);

469 
	`•rötf
(
buf1
, "%s.wrôeback†/ %s.ac˚s£s", 
«me
,Çame);

470 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "wrôebackÑ©ê(i.e., wrbks/ªf)", 
buf1
, 
NULL
);

471 
	`•rötf
(
buf
, "%s.öv_øã", 
«me
);

472 
	`•rötf
(
buf1
, "%s.övÆid©i⁄†/ %s.ac˚s£s", 
«me
,Çame);

473 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "övÆid©i⁄Ñ©ê(i.e., invs/ªf)", 
buf1
, 
NULL
);

474 
	}
}

478 
	$ˇche_°©s
(
ˇche_t
 *
˝
,

479 
FILE
 *
°ªam
)

481 
sum
 = ()(
˝
->
hôs
 + cp->
mis£s
);

483 
	`Ârötf
(
°ªam
,

485 
˝
->
«me
, ()˝->
hôs
, ()˝->
mis£s
,

486 ()
˝
->
ª∂a˚míts
, ()˝->
övÆid©i⁄s
);

487 
	`Ârötf
(
°ªam
,

489 
˝
->
«me
,

490 ()
˝
->
mis£s
/
sum
, ()()˝->
ª∂a˚míts
/sum,

491 ()
˝
->
övÆid©i⁄s
/
sum
);

492 
	}
}

500 
	$ˇche_ac˚ss
(
ˇche_t
 *
˝
,

501 
mem_cmd
 
cmd
,

502 
md_addr_t
 
addr
,

503 *
vp
,

504 
nbyãs
,

505 
tick_t
 
now
,

506 
byã_t
 **
ud©a
,

507 
md_addr_t
 *
ª∂_addr
)

509 
byã_t
 *
p
 = 
vp
;

510 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

511 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

512 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
(
˝
, 
addr
);

513 
ˇche_blk_t
 *
blk
, *
ª∂
;

514 
œt
 = 0;

517 i‡(
ª∂_addr
)

518 *
ª∂_addr
 = 0;

521 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

522 
	`Áèl
("ˇche:ác˚s†îr‹: bad sizê‹álignmít,ádd∏0x%08x", 
addr
);

527 i‡((
addr
 + 
nbyãs
Ë> (◊dd∏& ~
˝
->
blk_mask
Ë+ cp->
bsize
))

528 
	`Áèl
("ˇche:ác˚s†îr‹:ác˚s†•™†block,ádd∏0x%08x", 
addr
);

533 i‡(
	`CACHE_TAGSET
(
˝
, 
addr
Ë=˝->
œ°_èg£t
)

536 
blk
 = 
˝
->
œ°_blk
;

537 
ˇche_Á°_hô
;

540 i‡(
˝
->
hsize
)

543 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

545 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

546 
blk
;

547 
blk
=blk->
hash_√xt
)

549 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

550 
ˇche_hô
;

556 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

557 
blk
;

558 
blk
=blk->
way_√xt
)

560 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

561 
ˇche_hô
;

568 
˝
->
mis£s
++;

572 
˝
->
pﬁicy
) {

573 
LRU
:

574 
FIFO
:

575 
ª∂
 = 
˝
->
£ts
[
£t
].
way_èû
;

576 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
ª∂
, 
Hód
);

578 
R™dom
:

580 
bödex
 = 
	`myønd
(Ë& (
˝
->
assoc
 - 1);

581 
ª∂
 = 
	`CACHE_BINDEX
(
˝
, cp->
£ts
[
£t
].
blks
, 
bödex
);

585 
	`∑nic
("bogusÑeplacementÖolicy");

589 i‡(
˝
->
hsize
)

590 
	`u∆ök_hèb_ít
(
˝
, &˝->
£ts
[
£t
], 
ª∂
);

593 
˝
->
œ°_èg£t
 = 0;

594 
˝
->
œ°_blk
 = 
NULL
;

597 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

599 
˝
->
ª∂a˚míts
++;

601 i‡(
ª∂_addr
)

602 *
ª∂_addr
 = 
	`CACHE_MK_BADDR
(
˝
, 
ª∂
->
èg
, 
£t
);

605 
œt
 +
	`BOUND_POS
(
ª∂
->
ªady
 - 
now
);

608 
œt
 +
	`BOUND_POS
(
˝
->
bus_‰ì
 - (
now
 +Üat));

611 
˝
->
bus_‰ì
 = 
	`MAX
(˝->bus_‰ì, (
now
 + 
œt
)) + 1;

613 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

616 
˝
->
wrôebacks
++;

617 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

618 
	`CACHE_MK_BADDR
(
˝
, 
ª∂
->
èg
, 
£t
),

619 
˝
->
bsize
, 
ª∂
, 
now
+
œt
);

624 
ª∂
->
èg
 =Åag;

625 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

628 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Ród
, 
	`CACHE_BADDR
(˝, 
addr
), cp->
bsize
,

629 
ª∂
, 
now
+
œt
);

632 i‡(
˝
->
bÆloc
)

634 
	`CACHE_BCOPY
(
cmd
, 
ª∂
, 
bofs
, 
p
, 
nbyãs
);

638 i‡(
cmd
 =
Wrôe
)

639 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

642 i‡(
ud©a
)

643 *
ud©a
 = 
ª∂
->
u£r_d©a
;

646 
ª∂
->
ªady
 = 
now
+
œt
;

649 i‡(
˝
->
hsize
)

650 
	`lök_hèb_ít
(
˝
, &˝->
£ts
[
£t
], 
ª∂
);

653  
œt
;

656 
ˇche_hô
:

659 
˝
->
hôs
++;

662 i‡(
˝
->
bÆloc
)

664 
	`CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

668 i‡(
cmd
 =
Wrôe
)

669 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

672 i‡(
blk
->
way_¥ev
 && 
˝
->
pﬁicy
 =
LRU
)

675 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Hód
);

681 
˝
->
œ°_èg£t
 = 
	`CACHE_TAGSET
(˝, 
addr
);

682 
˝
->
œ°_blk
 = 
blk
;

685 i‡(
ud©a
)

686 *
ud©a
 = 
blk
->
u£r_d©a
;

689  (Ë
	`MAX
(
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

691 
ˇche_Á°_hô
:

694 
˝
->
hôs
++;

697 i‡(
˝
->
bÆloc
)

699 
	`CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

703 i‡(
cmd
 =
Wrôe
)

704 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

711 i‡(
ud©a
)

712 *
ud©a
 = 
blk
->
u£r_d©a
;

715 
˝
->
œ°_èg£t
 = 
	`CACHE_TAGSET
(˝, 
addr
);

716 
˝
->
œ°_blk
 = 
blk
;

719  (Ë
	`MAX
(
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

720 
	}
}

726 
	$ˇche_¥obe
(
ˇche_t
 *
˝
,

727 
md_addr_t
 
addr
)

729 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

730 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

731 
ˇche_blk_t
 *
blk
;

735 i‡(
˝
->
hsize
)

738 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

740 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

741 
blk
;

742 
blk
=blk->
hash_√xt
)

744 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

745  
TRUE
;

751 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

752 
blk
;

753 
blk
=blk->
way_√xt
)

755 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

756  
TRUE
;

761  
FALSE
;

762 
	}
}

766 
	$ˇche_Êush
(
ˇche_t
 *
˝
,

767 
tick_t
 
now
)

769 
i
, 
œt
 = 
˝
->
hô_œãncy
;

770 
ˇche_blk_t
 *
blk
;

773 
˝
->
œ°_èg£t
 = 0;

774 
˝
->
œ°_blk
 = 
NULL
;

777 
i
=0; i<
˝
->
n£ts
; i++)

779 
blk
=
˝
->
£ts
[
i
].
way_hód
; blk; blk=blk->
way_√xt
)

781 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

783 
˝
->
övÆid©i⁄s
++;

784 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

786 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

789 
˝
->
wrôebacks
++;

790 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

791 
	`CACHE_MK_BADDR
(
˝
, 
blk
->
èg
, 
i
),

792 
˝
->
bsize
, 
blk
, 
now
+
œt
);

799  
œt
;

800 
	}
}

805 
	$ˇche_Êush_addr
(
ˇche_t
 *
˝
,

806 
md_addr_t
 
addr
,

807 
tick_t
 
now
)

809 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

810 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

811 
ˇche_blk_t
 *
blk
;

812 
œt
 = 
˝
->
hô_œãncy
;

814 i‡(
˝
->
hsize
)

817 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

819 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

820 
blk
;

821 
blk
=blk->
hash_√xt
)

823 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

830 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

831 
blk
;

832 
blk
=blk->
way_√xt
)

834 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

839 i‡(
blk
)

841 
˝
->
övÆid©i⁄s
++;

842 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

845 
˝
->
œ°_èg£t
 = 0;

846 
˝
->
œ°_blk
 = 
NULL
;

848 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

851 
˝
->
wrôebacks
++;

852 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

853 
	`CACHE_MK_BADDR
(
˝
, 
blk
->
èg
, 
£t
),

854 
˝
->
bsize
, 
blk
, 
now
+
œt
);

857 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Taû
);

861  
œt
;

862 
	}
}

	@cache.h

52 #i‚de‡
CACHE_H


53 
	#CACHE_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"mem‹y.h
"

61 
	~"°©s.h
"

99 
	#CACHE_HIGHLY_ASSOC
(
˝
Ë((˝)->
assoc
 > 4)

	)

102 
	eˇche_pﬁicy
 {

103 
	mLRU
,

104 
	mR™dom
,

105 
	mFIFO


109 
	#CACHE_BLK_VALID
 0x00000001

	)

110 
	#CACHE_BLK_DIRTY
 0x00000002

	)

113 
	sˇche_blk_t


115 
ˇche_blk_t
 *
	mway_√xt
;

117 
ˇche_blk_t
 *
	mway_¥ev
;

118 
ˇche_blk_t
 *
	mhash_√xt
;

122 
md_addr_t
 
	mèg
;

123 
	m°©us
;

124 
tick_t
 
	mªady
;

126 
byã_t
 *
	mu£r_d©a
;

131 
byã_t
 
	md©a
[1];

136 
	sˇche_£t_t


138 
ˇche_blk_t
 **
	mhash
;

140 
ˇche_blk_t
 *
	mway_hód
;

141 
ˇche_blk_t
 *
	mway_èû
;

142 
ˇche_blk_t
 *
	mblks
;

148 
	sˇche_t


151 *
	m«me
;

152 
	mn£ts
;

153 
	mbsize
;

154 
	mbÆloc
;

155 
	musize
;

156 
	massoc
;

157 
ˇche_pﬁicy
 
	mpﬁicy
;

158 
	mhô_œãncy
;

170 (*
	mblk_ac˚ss_‚
)(
mem_cmd
 
	mcmd
,

171 
md_addr_t
 
	mbaddr
,

172 
	mbsize
,

173 
ˇche_blk_t
 *
	mblk
,

174 
tick_t
 
	mnow
);

177 
	mhsize
;

178 
md_addr_t
 
	mblk_mask
;

179 
	m£t_shi·
;

180 
md_addr_t
 
	m£t_mask
;

181 
	mèg_shi·
;

182 
md_addr_t
 
	mèg_mask
;

183 
md_addr_t
 
	mèg£t_mask
;

186 
tick_t
 
	mbus_‰ì
;

196 
cou¡î_t
 
	mhôs
;

197 
cou¡î_t
 
	mmis£s
;

198 
cou¡î_t
 
	mª∂a˚míts
;

199 
cou¡î_t
 
	mwrôebacks
;

200 
cou¡î_t
 
	mövÆid©i⁄s
;

203 
md_addr_t
 
	mœ°_èg£t
;

204 
ˇche_blk_t
 *
	mœ°_blk
;

207 
byã_t
 *
	md©a
;

211 
ˇche_£t_t
 
	m£ts
[1];

215 
ˇche_t
 *

216 
ˇche_¸óã
(*
«me
,

217 
n£ts
,

218 
bsize
,

219 
bÆloc
,

220 
usize
,

221 
assoc
,

222 
ˇche_pﬁicy
 
pﬁicy
,

224 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

225 
md_addr_t
 
baddr
, 
bsize
,

226 
ˇche_blk_t
 *
blk
,

227 
tick_t
 
now
),

228 
hô_œãncy
);

231 
ˇche_pﬁicy


232 
	`ˇche_ch¨2pﬁicy
(
c
);

236 
	`ˇche_c⁄fig
(
ˇche_t
 *
˝
,

237 
FILE
 *
°ªam
);

241 
	`ˇche_ªg_°©s
(
ˇche_t
 *
˝
,

242 
°©_sdb_t
 *
sdb
);

246 
	`ˇche_°©s
(
ˇche_t
 *
˝
,

247 
FILE
 *
°ªam
);

250 
	`ˇche_°©s
(
ˇche_t
 *
˝
, 
FILE
 *
°ªam
);

258 
	`ˇche_ac˚ss
(
ˇche_t
 *
˝
,

259 
mem_cmd
 
cmd
,

260 
md_addr_t
 
addr
,

261 *
vp
,

262 
nbyãs
,

263 
tick_t
 
now
,

264 
byã_t
 **
ud©a
,

265 
md_addr_t
 *
ª∂_addr
);

269 
	#ˇche_doubÀ
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

270 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

271 
	#ˇche_Êﬂt
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

272 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

273 
	#ˇche_dw‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

274 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

275 
	#ˇche_w‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

276 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

277 
	#ˇche_hÆf
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

278 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

279 
	#ˇche_byã
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

280 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

286 
	`ˇche_¥obe
(
ˇche_t
 *
˝
,

287 
md_addr_t
 
addr
);

291 
	`ˇche_Êush
(
ˇche_t
 *
˝
,

292 
tick_t
 
now
);

297 
	`ˇche_Êush_addr
(
ˇche_t
 *
˝
,

298 
md_addr_t
 
addr
,

299 
tick_t
 
now
);

	@dlite.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<˘y≥.h
>

56 
	~<î∫o.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"vîsi⁄.h
"

62 
	~"evÆ.h
"

63 
	~"ªgs.h
"

64 
	~"mem‹y.h
"

65 
	~"sim.h
"

66 
	~"symbﬁ.h
"

67 
	~"lﬂdî.h
"

68 
	~"›ti⁄s.h
"

69 
	~"°©s.h
"

70 
	~"ønge.h
"

71 
	~"dlôe.h
"

74 
dlôe_ªg_obj_t
 
	gf_dlôe_ªg_obj
 = 
NULL
;

75 
dlôe_mem_obj_t
 
	gf_dlôe_mem_obj
 = 
NULL
;

76 
dlôe_m°©e_obj_t
 
	gf_dlôe_m°©e_obj
 = 
NULL
;

79 
	gdlôe_a˘ive
 = 
FALSE
;

82 
	gdlôe_check
 = 
FALSE
;

85 
	gdlôe_ªtu∫
 = 
FALSE
;

88 
	#MOD_BYTE
 0x0001

	)

89 
	#MOD_HALF
 0x0002

	)

90 
	#MOD_WORD
 0x0004

	)

91 
	#MOD_QWORD
 0x0008

	)

92 
	#MOD_FLOAT
 0x0010

	)

93 
	#MOD_DOUBLE
 0x0020

	)

94 
	#MOD_CHAR
 0x0040

	)

95 
	#MOD_STRING
 0x0080

	)

97 
	#MOD_SIZES
 \

98 (
MOD_BYTE
|
MOD_HALF
|
MOD_WORD
|
MOD_QWORD
 \

99 |
MOD_FLOAT
|
MOD_DOUBLE
|
MOD_CHAR
|
MOD_STRING
)

	)

102 
	#MOD_DECIMAL
 0x0100

	)

103 
	#MOD_UNSIGNED
 0x0200

	)

104 
	#MOD_OCTAL
 0x0400

	)

105 
	#MOD_HEX
 0x0800

	)

106 
	#MOD_BINARY
 0x1000

	)

108 
	#MOD_FORMATS
 \

109 (
MOD_DECIMAL
|
MOD_UNSIGNED
|
MOD_OCTAL
|
MOD_HEX
|
MOD_BINARY
)

	)

114 
	$modifõr_∑r£r
(*
p
,

115 **
ídp
,

116 *
pmod
)

118 
modifõrs
 = 0;

121 *
pmod
 = 0;

124 i‡(*
p
 == '/')

126 
p
++;

128 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

130 *
p
)

133 
modifõrs
 |
MOD_BYTE
;

136 
modifõrs
 |
MOD_HALF
;

139 
modifõrs
 |
MOD_WORD
;

142 
modifõrs
 |
MOD_QWORD
;

145 
modifõrs
 |
MOD_DECIMAL
;

148 
modifõrs
 |
MOD_UNSIGNED
;

151 
modifõrs
 |
MOD_OCTAL
;

154 
modifõrs
 |
MOD_HEX
;

157 
modifõrs
 |
MOD_BINARY
;

160 
modifõrs
 |
MOD_FLOAT
;

163 
modifõrs
 |
MOD_DOUBLE
;

166 
modifõrs
 |
MOD_CHAR
;

169 
modifõrs
 |
MOD_STRING
;

174 
p
++;

179 *
ídp
 = 
p
;

180 *
pmod
 = 
modifõrs
;

181  
NULL
;

182 
	}
}

185 
evÆ_°©e_t
 *
	gdlôe_evÆu©‹
 = 
NULL
;

186 
ªgs_t
 *
	gloˇl_ªgs
 = 
NULL
;

191 
evÆ_vÆue_t


192 
	$idít_evÆu©‹
(
evÆ_°©e_t
 *
es
)

194 
i
;

195 *
îr_°r
;

196 
evÆ_vÆue_t
 
vÆ
;

197 
°©_°©_t
 *
°©
;

198 
sym_sym_t
 *
sym
;

199 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

202 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

204 i‡(!
	`my°ricmp
(
es
->
tok_buf
, 
md_ªg_«mes
[
i
].
°r
))

206 
îr_°r
 =

207 
	`f_dlôe_ªg_obj
(
loˇl_ªgs
, 
FALSE
,

208 
md_ªg_«mes
[
i
].
fûe
, md_ªg_«mes[i].
ªg
, &
vÆ
);

209 i‡(
îr_°r
)

211 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

212 
vÆ
 = 
îr_vÆue
;

214  
vÆ
;

219 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
TRUE
);

220 
sym
 = 
	`sym_böd_«me
(
es
->
tok_buf
, 
NULL
, 
sdb_™y
);

221 i‡(
sym
)

224 
vÆ
.
ty≥
 = 
ë_addr
;

225 
vÆ
.
vÆue
.
as_addr
 = 
sym
->
addr
;

226  
vÆ
;

230 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
es
->
tok_buf
);

231 i‡(
°©
)

234 
°©
->
sc
)

236 
sc_öt
:

237 
vÆ
.
ty≥
 = 
ë_öt
;

238 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

240 
sc_uöt
:

241 
vÆ
.
ty≥
 = 
ë_uöt
;

242 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

244 #ifde‡
HOST_HAS_QWORD


245 
sc_qw‹d
:

246 
vÆ
.
ty≥
 = 
ë_qw‹d
;

247 
vÆ
.
vÆue
.
as_qw‹d
 = *
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

250 
sc_Êﬂt
:

251 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

252 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

254 
sc_doubÀ
:

255 
vÆ
.
ty≥
 = 
ë_doubÀ
;

256 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

258 
sc_di°
:

259 
sc_sdi°
:

260 
evÆ_îr‹
 = 
ERR_BADEXPR
;

261 
vÆ
 = 
îr_vÆue
;

263 
sc_f‹muœ
:

266 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
sim_sdb
);

267 *
ídp
;

269 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

270 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

273 
vÆ
 = 
îr_vÆue
;

276 
	`evÆ_dñëe
(
es
);

280 
	`∑nic
("bogus stat class");

282  
vÆ
;

287 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

288 
vÆ
 = 
îr_vÆue
;

289  
vÆ
;

290 
	}
}

293 
	#MAX_ARGS
 4

	)

296 
	#MAX_STR
 128

	)

299 
	u¨g_vÆ_t
 {

300 
	mas_modifõr
;

301 
evÆ_vÆue_t
 
	mas_vÆue
;

302 
	mas_ac˚ss
;

303 
	mas_°r
[
MAX_STR
];

308 (*
	tcmd_‚_t
)(
	t«rgs
,

309 
	t¨g_vÆ_t
 
	t¨gs
[],

310 
	tªgs_t
 *
	tªgs
,

311 
	tmem_t
 *
	tmem
);

315 
	sdlôe_cmd_t
 {

316 *
	mcmd_°r
;

317 *
	m¨g_°rs
[
MAX_ARGS
];

325 
cmd_‚_t
 
	mcmd_‚
;

326 *
	mhñp_°r
;

331 
dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

332 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

334 
dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

335 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

337 
dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

338 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

340 
dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

341 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

343 
dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

344 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

346 
dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

347 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

349 
dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

350 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

352 
dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

353 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

355 
dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

356 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

358 
dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

359 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

361 
dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

362 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

364 
dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

365 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

367 
dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

368 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

370 
dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

371 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

373 
dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

374 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

376 
dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

377 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

379 
dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

380 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

382 
dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

383 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

385 
dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

386 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

388 
dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

389 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

391 
dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

392 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

394 
dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

395 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

397 
dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

398 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

400 
dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

401 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

403 
dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

404 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

406 
dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

407 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

409 
dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

410 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

412 
dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

413 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

415 
dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

416 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

418 
dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

419 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

424 
dlôe_cmd_t
 
	gcmd_db
[] =

426 { "hñp", { "s?", 
NULL
 }, 
dlôe_hñp
,

428 { "vîsi⁄", { 
NULL
 }, 
dlôe_vîsi⁄
,

430 { "ãrmö©e", { 
NULL
 }, 
dlôe_ãrmö©e
,

432 { "quô", { 
NULL
 }, 
dlôe_quô
,

434 { "c⁄t", { "a?", 
NULL
 }, 
dlôe_c⁄t
,

436 { "°ï", { 
NULL
 }, 
dlôe_°ï
,

439 { "√xt", { 
NULL
 }, 
dlôe_√xt
,

442 { "¥öt", { "m?", "e", 
NULL
 }, 
dlôe_¥öt
,

444 { "›ti⁄s", { 
NULL
 }, 
dlôe_›ti⁄s
,

446 { "›ti⁄", { "s", 
NULL
 }, 
dlôe_›ti⁄
,

448 { "°©s", { 
NULL
 }, 
dlôe_°©s
,

450 { "°©", { "s", 
NULL
 }, 
dlôe_°©
,

452 { "wh©is", { "e", 
NULL
 }, 
dlôe_wh©is
,

454 { "---", { 
NULL
 }, NULL, NULL },

455 { "ªgs", { 
NULL
 }, 
dlôe_ªgs
,

457 { "úegs", { 
NULL
 }, 
dlôe_úegs
,

459 { "Âªgs", { 
NULL
 }, 
dlôe_Âªgs
,

461 { "¸egs", { 
NULL
 }, 
dlôe_¸egs
,

463 { "m°©e", { "s?", 
NULL
 }, 
dlôe_m°©e
,

465 { "di•œy", { "m?", "a", 
NULL
 }, 
dlôe_di•œy
,

467 { "dump", { "a?", "c?", 
NULL
 }, 
dlôe_dump
,

469 { "dis", { "a?", "c?", 
NULL
 }, 
dlôe_dis
,

471 { "bªak", { "a", 
NULL
 }, 
dlôe_bªak
,

473 { "dbªak", { "a", "t?", 
NULL
 }, 
dlôe_dbªak
,

476 { "rbªak", { "s", "t?", 
NULL
 }, 
dlôe_rbªak
,

479 { "bªaks", { 
NULL
 }, 
dlôe_bªaks
,

481 { "dñëe", { "i", 
NULL
 }, 
dlôe_dñëe
,

483 { "˛ór", { 
NULL
 }, 
dlôe_˛ór
,

485 { "---", { 
NULL
 }, NULL, NULL },

486 { "symbﬁs", { 
NULL
 }, 
dlôe_symbﬁs
,

488 { "tsymbﬁs", { 
NULL
 }, 
dlôe_tsymbﬁs
,

490 { "dsymbﬁs", { 
NULL
 }, 
dlôe_dsymbﬁs
,

492 { "symbﬁ", { "s", 
NULL
 }, 
dlôe_symbﬁ
,

494 { "---", { 
NULL
 }, NULL, NULL },

496 { 
NULL
, { NULL }, NULL, NULL }

500 *
	gdlôe_hñp_èû
 =

515 #ifde‡
HOST_HAS_QWORD


531 
	$dlôe_exec
(*
cmd_°r
,

532 
ªgs_t
 *
ªgs
,

533 
mem_t
 *
mem
)

535 
i
, 
¨g_˙t
;

536 
dlôe_cmd_t
 *
cmd
;

537 
cmd_buf
[512], *
p
, *
q
, *
ídp
;

538 
¨g_vÆ_t
 
¨gs
[
MAX_ARGS
];

540 
p
 = 
cmd_°r
;

541 
q
 = 
cmd_buf
;

544 *
p
 == ' ' || *p == '\t' || *p == '\n')

545 
p
++;

548 i‡(*
p
 == '\0')

551  
NULL
;

555 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t' && *p != '/')

556 *
q
++ = *
p
++;

557 *
q
 = '\0';

560 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

562 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
cmd_buf
))

565 i‡(
cmd
->
cmd_°r
 =
NULL
)

569 
i
=0, 
¨g_˙t
=0; i<
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++,árg_cnt++)

571 
›ti⁄Æ
, 
ac˚ss
, 
modifõrs
;

572 *
¨g
, 
¨g_ty≥
, *
îr_°r
;

573 
evÆ_vÆue_t
 
vÆ
;

576 *
p
 == ' ' || *p == '\t' || *p == '\n')

577 
p
++;

579 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

580 
¨g_ty≥
 = 
¨g
[0];

581 
›ti⁄Æ
 = (
¨g
[1] == '?');

583 i‡(*
p
 == '\0')

585 i‡(
›ti⁄Æ
)

594 
ídp
 = 
p
;

595 
¨g_ty≥
)

598 
îr_°r
 = 
	`modifõr_∑r£r
(
p
, &
ídp
, &
modifõrs
);

599 i‡(
îr_°r
)

600  
îr_°r
;

601 
¨gs
[
¨g_˙t
].
as_modifõr
 = 
modifõrs
;

604 
loˇl_ªgs
 = 
ªgs
;

605 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

606 i‡(
evÆ_îr‹
)

607  
evÆ_îr_°r
[
evÆ_îr‹
];

608 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

611 
loˇl_ªgs
 = 
ªgs
;

612 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

613 i‡(
evÆ_îr‹
)

614  
evÆ_îr_°r
[
evÆ_îr‹
];

615 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

618 
loˇl_ªgs
 = 
ªgs
;

619 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

620 i‡(
evÆ_îr‹
)

621  
evÆ_îr_°r
[
evÆ_îr‹
];

622 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

625 
ac˚ss
 = 0;

626 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

628 *
p
)

631 
ac˚ss
 |
ACCESS_READ
;

634 
ac˚ss
 |
ACCESS_WRITE
;

637 
ac˚ss
 |
ACCESS_EXEC
;

642 
p
++;

644 
ídp
 = 
p
;

645 
¨gs
[
¨g_˙t
].
as_ac˚ss
 = 
ac˚ss
;

648 
loˇl_ªgs
 = 
ªgs
;

649 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

650 i‡(
evÆ_îr‹
)

651  
evÆ_îr_°r
[
evÆ_îr‹
];

652 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

655 
q
 = 
¨gs
[
¨g_˙t
].
as_°r
;

656 *
p
 != ' ' && *p != '\t' && *p != '\0')

657 *
q
++ = *
p
++;

658 *
q
 = '\0';

659 
ídp
 = 
p
;

662 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

664 
p
 = 
ídp
;

669 *
p
 == ' ' || *p == '\t' || *p == '\n')

670 
p
++;

673 i‡(*
p
 != '\0')

677  
cmd
->
	`cmd_‚
(
¨g_˙t
, 
¨gs
, 
ªgs
, 
mem
);

678 
	}
}

682 
	$¥öt_vÆ
(
modifõrs
,

683 
evÆ_vÆue_t
 
vÆ
)

685 *
f‹m©
 = "", *
¥efix
 = "", 
ødix
, 
buf
[512];

688 i‡((
modifõrs
 & 
MOD_SIZES
) == 0)

691 
vÆ
.
ty≥
)

693 
ë_öt
: 
modifõrs
 |
MOD_WORD
; ;

694 
ë_uöt
: 
modifõrs
 |
MOD_WORD
; ;

695 
ë_addr
:

696 #ifde‡
HOST_HAS_QWORD


697 i‡((
md_addr_t
) > 4)

698 
modifõrs
 |
MOD_QWORD
;

701 
modifõrs
 |
MOD_WORD
;

703 #ifde‡
HOST_HAS_QWORD


704 
ë_qw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

705 
ë_sqw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

707 
ë_Êﬂt
: 
modifõrs
 |
MOD_FLOAT
; ;

708 
ë_doubÀ
: 
modifõrs
 |
MOD_DOUBLE
; ;

709 
ë_symbﬁ
:

713 i‡(((
modifõrs
 & 
MOD_SIZES
) & ((modifiers & MOD_SIZES) - 1)) != 0)

717 i‡((
modifõrs
 & 
MOD_FORMATS
) == 0)

720 
vÆ
.
ty≥
)

722 
ë_öt
: 
modifõrs
 |
MOD_DECIMAL
; ;

723 
ë_uöt
: 
modifõrs
 |
MOD_UNSIGNED
; ;

724 
ë_addr
: 
modifõrs
 |
MOD_HEX
; ;

725 #ifde‡
HOST_HAS_QWORD


726 
ë_qw‹d
: 
modifõrs
 |
MOD_UNSIGNED
; ;

727 
ë_sqw‹d
: 
modifõrs
 |
MOD_DECIMAL
; ;

729 
ë_Êﬂt
: ;

730 
ë_doubÀ
: ;

731 
ë_symbﬁ
:

735 i‡(((
modifõrs
 & 
MOD_FORMATS
) & ((modifiers & MOD_FORMATS) - 1)) != 0)

739 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_HALF
|
MOD_WORD
|
MOD_QWORD
))

741 i‡(
modifõrs
 & 
MOD_DECIMAL
)

742 
ødix
 = 'd';

743 i‡(
modifõrs
 & 
MOD_UNSIGNED
)

744 
ødix
 = 'u';

745 i‡(
modifõrs
 & 
MOD_OCTAL
)

746 
ødix
 = 'o';

747 i‡(
modifõrs
 & 
MOD_HEX
)

748 
ødix
 = 'x';

749 i‡(
modifõrs
 & 
MOD_BINARY
)

752 
	`∑nic
("no default integer format");

754 i‡(
modifõrs
 & 
MOD_BYTE
)

756 i‡(
modifõrs
 & 
MOD_OCTAL
)

758 
¥efix
 = "0";

759 
f‹m©
 = "03";

761 i‡(
modifõrs
 & 
MOD_HEX
)

763 
¥efix
 = "0x";

764 
f‹m©
 = "02";

768 
¥efix
 = "";

769 
f‹m©
 = "";

772 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

773 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

775 i‡(
modifõrs
 & 
MOD_HALF
)

777 i‡(
modifõrs
 & 
MOD_OCTAL
)

779 
¥efix
 = "0";

780 
f‹m©
 = "06";

782 i‡(
modifõrs
 & 
MOD_HEX
)

784 
¥efix
 = "0x";

785 
f‹m©
 = "04";

789 
¥efix
 = "";

790 
f‹m©
 = "";

793 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

794 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

796 i‡(
modifõrs
 & 
MOD_WORD
)

798 i‡(
modifõrs
 & 
MOD_OCTAL
)

800 
¥efix
 = "0";

801 
f‹m©
 = "011";

803 i‡(
modifõrs
 & 
MOD_HEX
)

805 
¥efix
 = "0x";

806 
f‹m©
 = "08";

810 
¥efix
 = "";

811 
f‹m©
 = "";

814 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

815 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

817 #ifde‡
HOST_HAS_QWORD


818 i‡(
modifõrs
 & 
MOD_QWORD
)

820 i‡(
modifõrs
 & 
MOD_OCTAL
)

822 
¥efix
 = "0";

823 
f‹m©
 = "022";

825 i‡(
modifõrs
 & 
MOD_HEX
)

827 
¥efix
 = "0x";

828 
f‹m©
 = "016";

832 
¥efix
 = "";

833 
f‹m©
 = "";

836 
	`•rötf
(
buf
, "%s%%%¶%c", 
¥efix
, 
f‹m©
, 
ødix
);

837 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_qw‹d
(
vÆ
));

841 i‡(
modifõrs
 & 
MOD_FLOAT
)

842 
	`Ârötf
(
°dout
, "%f", ()
	`evÆ_as_Êﬂt
(
vÆ
));

843 i‡(
modifõrs
 & 
MOD_DOUBLE
)

844 
	`Ârötf
(
°dout
, "%f", 
	`evÆ_as_doubÀ
(
vÆ
));

845 i‡(
modifõrs
 & 
MOD_CHAR
)

846 
	`Ârötf
(
°dout
, "`%c'", 
	`evÆ_as_uöt
(
vÆ
));

847 i‡(
modifõrs
 & 
MOD_STRING
)

850 
	`∑nic
("no default format");

853  
NULL
;

854 
	}
}

858 
	$dlôe_mem_obj
(
mem_t
 *
mem
,

859 
is_wrôe
,

860 
md_addr_t
 
addr
,

861 *
p
,

862 
nbyãs
)

864 
mem_cmd
 
cmd
;

866 i‡(!
is_wrôe
)

867 
cmd
 = 
Ród
;

869 
cmd
 = 
Wrôe
;

872 *
îr°r
;

873 
îr°r
 = 
	`mem_vÆid
(
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

874 i‡(
îr°r
)

875  
îr°r
;

879 
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

882  
NULL
;

883 
	}
}

887 
	$dlôe_m°©e_obj
(
FILE
 *
°ªam
,

888 *
cmd
,

889 
ªgs_t
 *
ªgs
,

890 
mem_t
 *
mem
)

893 
	`Ârötf
(
°ªam
, "No machine state.\n");

896  
NULL
;

897 
	}
}

901 
	$dlôe_∑u£
()

903 
buf
[512];

904 
	`Ârötf
(
°dout
, "Press <return>Åo continue...");

905 
	`fÊush
(
°dout
);

906 
	`fgës
(
buf
, 512, 
°dö
);

907 
	}
}

911 
	$¥öt_hñp
(
dlôe_cmd_t
 *
cmd
)

913 
i
;

916 
	`Ârötf
(
°dout
, " %†", 
cmd
->
cmd_°r
);

919 
i
=0; i < 
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++)

921 
›ti⁄Æ
;

922 *
¨g
, 
¨g_ty≥
;

924 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

925 
¨g_ty≥
 = 
¨g
[0];

926 
›ti⁄Æ
 = (
¨g
[1] == '?');

928 i‡(
›ti⁄Æ
)

929 
	`Ârötf
(
°dout
, "{");

931 
	`Ârötf
(
°dout
, "<");

933 
¨g_ty≥
)

936 
	`Ârötf
(
°dout
, "/modifiers");

939 
	`Ârötf
(
°dout
, "addr");

942 
	`Ârötf
(
°dout
, "count");

945 
	`Ârötf
(
°dout
, "expr");

948 
	`Ârötf
(
°dout
, "r|w|x");

951 
	`Ârötf
(
°dout
, "id");

954 
	`Ârötf
(
°dout
, "string");

957 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

960 i‡(
›ti⁄Æ
)

961 
	`Ârötf
(
°dout
, "}");

963 
	`Ârötf
(
°dout
, ">");

965 
	`Ârötf
(
°dout
, " ");

967 
	`Ârötf
(
°dout
, "\n");

970 
	`Ârötf
(
°dout
, " %s\n", 
cmd
->
hñp_°r
);

971 
	}
}

975 
	$dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

976 
ªgs_t
 *
ªgs
,

977 
mem_t
 *
mem
)

979 
dlôe_cmd_t
 *
cmd
;

981 i‡(
«rgs
 != 0 &&Çargs != 1)

984 i‡(
«rgs
 == 1)

987 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

989 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
¨gs
[0].
as_°r
))

992 i‡(!
cmd
->
cmd_°r
)

995 
	`¥öt_hñp
(
cmd
);

1000 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

1003 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, "---"))

1004 
	`dlôe_∑u£
();

1006 
	`¥öt_hñp
(
cmd
);

1009 
	`Ârötf
 (
°dout
, "\n");

1010 i‡(
dlôe_hñp_èû
)

1011 
	`Ârötf
 (
°dout
, "%s\n", 
dlôe_hñp_èû
);

1015  
NULL
;

1016 
	}
}

1020 
	$dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1021 
ªgs_t
 *
ªgs
,

1022 
mem_t
 *
mem
)

1024 i‡(
«rgs
 != 0)

1028 
	`Ârötf
(
°dout
, "The SimpleScalar/%s Tool Set, version %d.%d of %s.\n",

1029 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

1030 
	`Ârötf
(
°dout
,

1034  
NULL
;

1035 
	}
}

1039 
	$dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1040 
ªgs_t
 *
ªgs
,

1041 
mem_t
 *
mem
)

1043 i‡(
«rgs
 != 0)

1046 
	`Ârötf
(
°dout
, "DLite:Åerminating simulation...\n");

1047 
	`l⁄gjmp
(
sim_exô_buf
, 1);

1050  
NULL
;

1051 
	}
}

1055 
	$dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1056 
ªgs_t
 *
ªgs
,

1057 
mem_t
 *
mem
)

1059 i‡(
«rgs
 != 0)

1062 
	`Ârötf
(
°dout
, "DLite:Éxiting simulator...\n");

1063 
	`exô
(1);

1066  
NULL
;

1067 
	}
}

1071 
	$dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1072 
ªgs_t
 *
ªgs
,

1073 
mem_t
 *
mem
)

1075 
evÆ_vÆue_t
 
vÆ
;

1077 i‡(!
f_dlôe_ªg_obj
 || !
f_dlôe_mem_obj
)

1078 
	`∑nic
("DLite isÇot configured");

1080 i‡(
«rgs
 != 0 &&Çargs != 1)

1083 i‡(
«rgs
 == 1)

1086 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1090 
vÆ
.
ty≥
 = 
ë_addr
;

1091 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1092 
	`f_dlôe_ªg_obj
(
ªgs
, 
TRUE
, 
π_PC
, 0, &
vÆ
);

1094 
	`myÂrötf
(
°dout
, "DLite: continuingÉxecution @ 0x%08p...\n",

1095 
vÆ
.
vÆue
.
as_addr
);

1099 
dlôe_a˘ive
 = 
FALSE
;

1100 
dlôe_ªtu∫
 = 
TRUE
;

1103  
NULL
;

1104 
	}
}

1108 
	$dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1109 
ªgs_t
 *
ªgs
,

1110 
mem_t
 *
mem
)

1112 i‡(
«rgs
 != 0)

1116 
dlôe_a˘ive
 = 
TRUE
;

1117 
dlôe_ªtu∫
 = 
TRUE
;

1120  
NULL
;

1121 
	}
}

1126 
	$dlôe_√xt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[])

1128 i‡(
«rgs
 != 0)

1132 
dlôe_°ï_˙t
 = 1;

1133 
dlôe_°ï_öto
 = 
FALSE
;

1136  
NULL
;

1137 
	}
}

1142 
	$dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1143 
ªgs_t
 *
ªgs
,

1144 
mem_t
 *
mem
)

1146 
modifõrs
 = 0;

1147 *
îr_°r
;

1148 
evÆ_vÆue_t
 
vÆ
;

1150 i‡(
«rgs
 != 1 &&Çargs != 2)

1153 i‡(
«rgs
 == 2)

1156 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1157 
vÆ
 = 
¨gs
[1].
as_vÆue
;

1162 
vÆ
 = 
¨gs
[0].
as_vÆue
;

1166 
îr_°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1167 i‡(
îr_°r
)

1168  
îr_°r
;

1169 
	`Ârötf
(
°dout
, "\n");

1172  
NULL
;

1173 
	}
}

1177 
	$dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1178 
ªgs_t
 *
ªgs
,

1179 
mem_t
 *
mem
)

1181 i‡(
«rgs
 != 0)

1185 
	`›t_¥öt_›ti⁄s
(
sim_odb
, 
°dout
, 
TRUE
, 
FALSE
);

1188  
NULL
;

1189 
	}
}

1193 
	$dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1194 
ªgs_t
 *
ªgs
,

1195 
mem_t
 *
mem
)

1197 
›t_›t_t
 *
›t
;

1199 i‡(
«rgs
 != 1)

1203 
›t
 = 
	`›t_föd_›ti⁄
(
sim_odb
, 
¨gs
[0].
as_°r
);

1204 i‡(!
›t
)

1208 
	`Ârötf
(
°dout
, "%-16† ", 
›t
->
«me
);

1209 
	`›t_¥öt_›ti⁄
(
›t
, 
°dout
);

1210 i‡(
›t
->
desc
)

1211 
	`Ârötf
(
°dout
, " # %s", 
›t
->
desc
);

1212 
	`Ârötf
(
°dout
, "\n");

1215  
NULL
;

1216 
	}
}

1220 
	$dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1221 
ªgs_t
 *
ªgs
,

1222 
mem_t
 *
mem
)

1224 i‡(
«rgs
 != 0)

1228 
	`°©_¥öt_°©s
(
sim_sdb
, 
°dout
);

1229 
	`sim_aux_°©s
(
°dout
);

1232  
NULL
;

1233 
	}
}

1237 
	$dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1238 
ªgs_t
 *
ªgs
,

1239 
mem_t
 *
mem
)

1241 
°©_°©_t
 *
°©
;

1243 i‡(
«rgs
 != 1)

1247 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
¨gs
[0].
as_°r
);

1248 i‡(!
°©
)

1252 
	`°©_¥öt_°©
(
sim_sdb
, 
°©
, 
°dout
);

1255  
NULL
;

1256 
	}
}

1260 
	$dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1261 
ªgs_t
 *
ªgs
,

1262 
mem_t
 *
mem
)

1264 i‡(
«rgs
 != 1)

1267 
	`Ârötf
(
°dout
, "ty≥ =`%s'\n", 
evÆ_ty≥_°r
[
¨gs
[0].
as_vÆue
.
ty≥
]);

1270  
NULL
;

1271 
	}
}

1275 
	$dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1276 
ªgs_t
 *
ªgs
,

1277 
mem_t
 *
mem
)

1279 *
îr_°r
;

1281 i‡(
«rgs
 != 0)

1285 
	`myÂrötf
(
°dout
, "PC: 0x%08p NPC: 0x%08p\n",

1286 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_NPC
);

1287 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1288  
îr_°r
;

1289 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1292  
NULL
;

1293 
	}
}

1297 
	$dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1298 
ªgs_t
 *
ªgs
,

1299 
mem_t
 *
mem
)

1302 
	`md_¥öt_Âªgs
(
ªgs
->
ªgs_F
, 
°dout
);

1305  
NULL
;

1306 
	}
}

1310 
	$dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1311 
ªgs_t
 *
ªgs
,

1312 
mem_t
 *
mem
)

1315 
	`md_¥öt_¸egs
(
ªgs
->
ªgs_C
, 
°dout
);

1318  
NULL
;

1319 
	}
}

1323 
	$dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1324 
ªgs_t
 *
ªgs
,

1325 
mem_t
 *
mem
)

1327 *
îr_°r
;

1329 
	`myÂrötf
(
°dout
, "PC: 0x%08p NPC: 0x%08p\n",

1330 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_NPC
);

1331 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1332  
îr_°r
;

1333 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1334 
	`dlôe_∑u£
();

1335 i‡((
îr_°r
 = 
	`dlôe_Âªgs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1336  
îr_°r
;

1339  
NULL
;

1340 
	}
}

1344 
	$dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1345 
ªgs_t
 *
ªgs
,

1346 
mem_t
 *
mem
)

1348 *
îr°r
;

1350 i‡(
«rgs
 != 0 &&Çargs != 1)

1353 i‡(
f_dlôe_m°©e_obj
)

1355 i‡(
«rgs
 == 0)

1357 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
NULL
, 
ªgs
, 
mem
);

1358 i‡(
îr°r
)

1359  
îr°r
;

1363 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
¨gs
[0].
as_°r
, 
ªgs
, 
mem
);

1364 i‡(
îr°r
)

1365  
îr°r
;

1370  
NULL
;

1371 
	}
}

1375 
	$dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1376 
ªgs_t
 *
ªgs
,

1377 
mem_t
 *
mem
)

1379 
modifõrs
, 
size
;

1380 
md_addr_t
 
addr
;

1381 
buf
[512];

1382 
evÆ_vÆue_t
 
vÆ
;

1383 *
îr°r
;

1385 i‡(
«rgs
 != 1 &&Çargs != 2)

1388 i‡(
«rgs
 == 1)

1391 
modifõrs
 = 0;

1394 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1398 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1400 i‡(
«rgs
 == 2)

1402 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1405 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1409 
addr
 = 
	`evÆ_as_addr
(
¨gs
[1].
as_vÆue
);

1413 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1414 
size
 = 1;

1415 i‡(
modifõrs
 & 
MOD_HALF
)

1416 
size
 = 2;

1417 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1418 
size
 = 8;

1420 
size
 = 4;

1423 
îr°r
 = 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
, 
addr
, (*)
buf
, 
size
);

1424 i‡(
îr°r
)

1425  
îr°r
;

1428 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1431 
vÆ
.
ty≥
 = 
ë_öt
;

1432 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1434 i‡(
modifõrs
 & 
MOD_HALF
)

1437 
vÆ
.
ty≥
 = 
ë_öt
;

1438 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1440 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1443 
vÆ
.
ty≥
 = 
ë_doubÀ
;

1444 
vÆ
.
vÆue
.
as_doubÀ
 = *(*)
buf
;

1449 
vÆ
.
ty≥
 = 
ë_uöt
;

1450 
vÆ
.
vÆue
.
as_uöt
 = *(*)
buf
;

1454 
îr°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1455 i‡(
îr°r
)

1456  
îr°r
;

1457 
	`Ârötf
(
°dout
, "\n");

1460  
NULL
;

1461 
	}
}

1464 
	#BYTES_PER_LINE
 16

	)

1465 
	#LINES_PER_SCREEN
 4

	)

1469 
	$dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1470 
ªgs_t
 *
ªgs
,

1471 
mem_t
 *
mem
)

1473 
i
, 
j
;

1474 
cou¡
 = 
LINES_PER_SCREEN
 * 
BYTES_PER_LINE
, 
i_cou¡
, 
fmt_cou¡
, 
fmt_löes
;

1475 
md_addr_t
 
fmt_addr
, 
i_addr
;

1476 
md_addr_t
 
addr
 = 0;

1477 
byã
;

1478 
buf
[512];

1479 *
îr°r
;

1481 i‡(
«rgs
 < 0 ||Çargs > 2)

1484 i‡(
«rgs
 == 1)

1487 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1491 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1493 i‡(
«rgs
 == 2)

1496 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1500 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1503 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1506 i‡(
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
) > 1024)

1510 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1515 
fmt_addr
 = 
addr
 & ~(
BYTES_PER_LINE
 - 1);

1516 
fmt_cou¡
 = (
cou¡
 + (
BYTES_PER_LINE
 - 1)) & ~(BYTES_PER_LINE - 1);

1517 
fmt_löes
 = 
fmt_cou¡
 / 
BYTES_PER_LINE
;

1519 i‡(
fmt_löes
 < 1)

1520 
	`∑nic
("no outputÜines");

1523 i‡(
fmt_löes
 == 1)

1526 
i_addr
 = 
fmt_addr
;

1527 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1528 
i
=0; i < 
cou¡
; i++)

1530 
îr°r
 =

1531 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1532 
i_addr
, (*)&
byã
, 1);

1533 i‡(
îr°r
)

1534  
îr°r
;

1535 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1536 i‡(
	`i•röt
(
byã
))

1537 
buf
[
i
] = 
byã
;

1539 
buf
[
i
] = '.';

1540 
i_addr
++;

1541 
addr
++;

1543 
buf
[
i
] = '\0';

1546 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1550 
i_cou¡
 = 0;

1551 
i_addr
 = 
fmt_addr
;

1552 
i
=0; i < 
fmt_löes
; i++)

1554 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1557 
j
=0; j < 
BYTES_PER_LINE
; j++)

1559 i‡(
i_addr
 >
addr
 && 
i_cou¡
 <
cou¡
)

1561 
îr°r
 =

1562 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1563 
i_addr
, (*)&
byã
, 1);

1564 i‡(
îr°r
)

1565  
îr°r
;

1566 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1567 i‡(
	`i•röt
(
byã
))

1568 
buf
[
j
] = 
byã
;

1570 
buf
[
j
] = '.';

1571 
i_cou¡
++;

1572 
addr
++;

1576 
	`Ârötf
(
°dout
, " ");

1577 
buf
[
j
] = ' ';

1579 
i_addr
++;

1581 
buf
[
j
] = '\0';

1584 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1589  
NULL
;

1590 
	}
}

1593 
	#INSTS_PER_SCREEN
 16

	)

1597 
	$dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1598 
ªgs_t
 *
ªgs
,

1599 
mem_t
 *
mem
)

1601 
i
;

1602 
cou¡
 = 
INSTS_PER_SCREEN
;

1603 
md_addr_t
 
addr
 = 0;

1604 
md_ö°_t
 
ö°
;

1605 *
îr°r
;

1607 i‡(
«rgs
 < 0 ||Çargs > 2)

1610 i‡(
«rgs
 == 1)

1613 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1617 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1619 i‡(
«rgs
 == 2)

1622 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1626 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1629 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1633 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1635 i‡(
cou¡
 < 0 || count > 1024)

1640 i‡((
addr
 % (
md_ö°_t
)) != 0)

1644 
i
=0; i<
cou¡
; i++)

1647 
	`myÂrötf
(
°dout
, " 0x%08p: ", 
addr
);

1648 
îr°r
 =

1649 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1650 
addr
, (*)&
ö°
, (inst));

1651 
ö°
 = 
	`MD_SWAPI
(inst);

1652 i‡(
îr°r
)

1653  
îr°r
;

1654 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
°dout
);

1655 
	`Ârötf
(
°dout
, "\n");

1658 
addr
 +(
md_ö°_t
);

1662  
NULL
;

1663 
	}
}

1666 
	sdlôe_bªak_t
 {

1667 
dlôe_bªak_t
 *
	m√xt
;

1668 
	mid
;

1669 
	m˛ass
;

1670 
ønge_ønge_t
 
	mønge
;

1674 
dlôe_bªak_t
 *
	gdlôe_bps
 = 
NULL
;

1677 
	gbªak_id
 = 1;

1681 
	$bp_˛ass_°r
(
˛ass
)

1683 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
))

1685 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
))

1687 i‡(
˛ass
 =(
ACCESS_WRITE
|
ACCESS_EXEC
))

1689 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_EXEC
))

1691 i‡(
˛ass
 =
ACCESS_READ
)

1693 i‡(
˛ass
 =
ACCESS_WRITE
)

1695 i‡(
˛ass
 =
ACCESS_EXEC
)

1698 
	`∑nic
("bogusáccess class");

1699 
	}
}

1703 
	$£t_bªak
(
˛ass
,

1704 
ønge_ønge_t
 *
ønge
)

1706 
dlôe_bªak_t
 *
bp
;

1709 
bp
 = 
	`ˇŒoc
(1, (
dlôe_bªak_t
));

1710 i‡(!
bp
)

1711 
	`Áèl
("out of virtual memory");

1713 
bp
->
id
 = 
bªak_id
++;

1714 
bp
->
ønge
 = *range;

1715 
bp
->
˛ass
 = class;

1717 
bp
->
√xt
 = 
dlôe_bps
;

1718 
dlôe_bps
 = 
bp
;

1720 
	`Ârötf
(
°dout
, "bªakpoöà#%d së @ ", 
bp
->
id
);

1721 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1722 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
˛ass
));

1725 
dlôe_check
 = 
TRUE
;

1728  
NULL
;

1729 
	}
}

1733 
	$dñëe_bªak
(
id
)

1735 
dlôe_bªak_t
 *
bp
, *
¥ev
;

1737 i‡(!
dlôe_bps
)

1740 
bp
=
dlôe_bps
,
¥ev
=
NULL
; b∞!NULL;Öªv=bp,bp=bp->
√xt
)

1742 i‡(
bp
->
id
 == id)

1745 i‡(!
bp
)

1748 i‡(!
¥ev
)

1751 
dlôe_bps
 = 
bp
->
√xt
;

1756 
¥ev
->
√xt
 = 
bp
->next;

1759 
	`Ârötf
(
°dout
, "bªakpoöà#%d dñëed @ ", 
bp
->
id
);

1760 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1761 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
bp
->
˛ass
));

1763 
bp
->
√xt
 = 
NULL
;

1764 
	`‰ì
(
bp
);

1766 i‡(!
dlôe_bps
)

1769 
dlôe_check
 = 
FALSE
;

1774 
dlôe_check
 = 
TRUE
;

1778  
NULL
;

1779 
	}
}

1782 
	gbªak_ac˚ss
 = 0;

1786 
	$__check_bªak
(
md_addr_t
 
√xt_PC
,

1787 
ac˚ss
,

1788 
md_addr_t
 
addr
,

1789 
cou¡î_t
 
icou¡
,

1790 
cou¡î_t
 
cy˛e
)

1792 
dlôe_bªak_t
 *
bp
;

1794 i‡(
dlôe_a˘ive
)

1797 
bªak_ac˚ss
 = 0;

1798  
TRUE
;

1802 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

1804 
bp
->
ønge
.
°¨t
.
±y≥
)

1806 
±_addr
:

1807 i‡((
bp
->
˛ass
 & 
ACCESS_EXEC
)

1808 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
√xt_PC
))

1811 
	`myÂrötf
(
°dout
,

1813 
bp
->
id
, 
√xt_PC
);

1814 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1815  
TRUE
;

1817 i‡((
bp
->
˛ass
 & 
ACCESS_READ
)

1818 && ((
ac˚ss
 & 
ACCESS_READ
)

1819 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

1822 
	`myÂrötf
(
°dout
,

1824 
bp
->
id
, 
addr
);

1825 
bªak_ac˚ss
 = 
ACCESS_READ
;

1826  
TRUE
;

1828 i‡((
bp
->
˛ass
 & 
ACCESS_WRITE
)

1829 && ((
ac˚ss
 & 
ACCESS_WRITE
)

1830 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

1833 
	`myÂrötf
(
°dout
,

1835 
bp
->
id
, 
addr
);

1836 
bªak_ac˚ss
 = 
ACCESS_WRITE
;

1837  
TRUE
;

1841 
±_ö°
:

1842 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
icou¡
))

1845 
	`Ârötf
(
°dout
,

1847 
bp
->
id
, ()
icou¡
);

1848 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1849  
TRUE
;

1853 
±_cy˛e
:

1854 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
cy˛e
))

1857 
	`Ârötf
(
°dout
,

1859 
bp
->
id
, ()
cy˛e
);

1860 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1861  
TRUE
;

1866 
	`∑nic
("bogusÑangeÅype");

1873 
bªak_ac˚ss
 = 0;

1874  
FALSE
;

1875 
	}
}

1879 
	$dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1880 
ªgs_t
 *
ªgs
,

1881 
mem_t
 *
mem
)

1883 
md_addr_t
 
addr
;

1884 
ønge_ønge_t
 
ønge
;

1886 i‡(
«rgs
 != 1)

1890 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1894 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1897 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

1898 
ønge
.
°¨t
.
pos
 = 
addr
;

1899 
ønge
.
íd
.
±y≥
 = 
±_addr
;

1900 #ifde‡
TARGET_ALPHA


1903 
ønge
.
íd
.
pos
 = 
addr
 + 9;

1905 
ønge
.
íd
.
pos
 = 
addr
 + 1;

1909  
	`£t_bªak
(
ACCESS_EXEC
, &
ønge
);

1910 
	}
}

1914 
	$dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1915 
ªgs_t
 *
ªgs
,

1916 
mem_t
 *
mem
)

1918 
ac˚ss
;

1919 
md_addr_t
 
addr
;

1920 
ønge_ønge_t
 
ønge
;

1922 i‡(
«rgs
 != 1 &&Çargs != 2)

1925 i‡(
«rgs
 == 1)

1928 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1932 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1935 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
;

1937 i‡(
«rgs
 == 2)

1940 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1944 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1947 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

1951 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

1952 
ønge
.
°¨t
.
pos
 = 
addr
;

1953 
ønge
.
íd
.
±y≥
 = 
±_addr
;

1954 
ønge
.
íd
.
pos
 = 
addr
 + 1;

1957  
	`£t_bªak
(
ac˚ss
, &
ønge
);

1958 
	}
}

1962 
	$dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1963 
ªgs_t
 *
ªgs
,

1964 
mem_t
 *
mem
)

1966 
ac˚ss
;

1967 *
îr°r
;

1968 
ønge_ønge_t
 
ønge
;

1970 i‡(
«rgs
 != 1 &&Çargs != 2)

1973 i‡(
«rgs
 == 2)

1976 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

1981 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
;

1985 
îr°r
 = 
	`ønge_∑r£_ønge
(
¨gs
[0].
as_°r
, &
ønge
);

1986 i‡(
îr°r
)

1987  
îr°r
;

1990 i‡(
ønge
.
°¨t
.
±y≥
 !ønge.
íd
.ptype)

1992 i‡(
ønge
.
°¨t
.
pos
 >Ñ™ge.
íd
.pos)

1996  
	`£t_bªak
(
ac˚ss
, &
ønge
);

1997 
	}
}

2001 
	$dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2002 
ªgs_t
 *
ªgs
,

2003 
mem_t
 *
mem
)

2005 
dlôe_bªak_t
 *
bp
;

2007 i‡(!
dlôe_bps
)

2009 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2012  
NULL
;

2015 
	`Ârötf
(
°dout
, "Active breakpoints:\n");

2016 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

2018 
	`Ârötf
(
°dout
, " bªakpoöà#%d @ ", 
bp
->
id
);

2019 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

2020 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
bp
->
˛ass
));

2024  
NULL
;

2025 
	}
}

2029 
	$dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2030 
ªgs_t
 *
ªgs
,

2031 
mem_t
 *
mem
)

2033 
id
;

2035 i‡(
«rgs
 != 1)

2039 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

2042 
id
 = 
	`evÆ_as_uöt
(
¨gs
[0].
as_vÆue
);

2043  
	`dñëe_bªak
(
id
);

2044 
	}
}

2048 
	$dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2049 
ªgs_t
 *
ªgs
,

2050 
mem_t
 *
mem
)

2052 i‡(!
dlôe_bps
)

2054 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2057  
NULL
;

2060 
dlôe_bps
 !
NULL
)

2063 
	`dñëe_bªak
(
dlôe_bps
->
id
);

2065 
	`Ârötf
(
°dout
, "All breakpoints cleared.\n");

2068  
NULL
;

2069 
	}
}

2073 
	$dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2074 
ªgs_t
 *
ªgs
,

2075 
mem_t
 *
mem
)

2077 
i
;

2079 i‡(
«rgs
 != 0)

2083 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2086 
i
=0; i<
sym_nsyms
; i++)

2087 
	`sym_dumpsym
(
sym_syms
[
i
], 
°dout
);

2090  
NULL
;

2091 
	}
}

2095 
	$dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2096 
ªgs_t
 *
ªgs
,

2097 
mem_t
 *
mem
)

2099 
i
;

2101 i‡(
«rgs
 != 0)

2105 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2108 
i
=0; i<
sym_¡extsyms
; i++)

2109 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
°dout
);

2112  
NULL
;

2113 
	}
}

2117 
	$dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2118 
ªgs_t
 *
ªgs
,

2119 
mem_t
 *
mem
)

2121 
i
;

2123 i‡(
«rgs
 != 0)

2127 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2130 
i
=0; i<
sym_nd©asyms
; i++)

2131 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
°dout
);

2134  
NULL
;

2135 
	}
}

2139 
	$dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2140 
ªgs_t
 *
ªgs
,

2141 
mem_t
 *
mem
)

2143 
ödex
;

2144 
sym_sym_t
 *
sym
;

2146 i‡(
«rgs
 != 1)

2150 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2153 
sym
 = 
	`sym_böd_«me
(
¨gs
[0].
as_°r
, &
ödex
, 
sdb_™y
);

2154 i‡(!
sym
)

2158 
	`sym_dumpsym
(
sym_syms_by_«me
[
ödex
], 
°dout
);

2161  
NULL
;

2162 
	}
}

2166 
	$dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

2167 
dlôe_mem_obj_t
 
mem_obj
,

2168 
dlôe_m°©e_obj_t
 
m°©e_obj
)

2171 
f_dlôe_ªg_obj
 = 
ªg_obj
;

2172 
f_dlôe_mem_obj
 = 
mem_obj
;

2173 
f_dlôe_m°©e_obj
 = 
m°©e_obj
;

2176 
dlôe_evÆu©‹
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
NULL
);

2177 
	}
}

2181 
	$dlôe_°©us
(
md_addr_t
 
ªgs_PC
,

2182 
md_addr_t
 
√xt_PC
,

2183 
cou¡î_t
 
cy˛e
,

2184 
dbªak
,

2185 
ªgs_t
 *
ªgs
,

2186 
mem_t
 *
mem
)

2188 
md_ö°_t
 
ö°
;

2189 *
îr°r
;

2191 i‡(
dbªak
)

2193 
	`Ârötf
(
°dout
, "\n");

2194 
	`Ârötf
(
°dout
, "Instruction (now finished)Åhat caused data break:\n");

2195 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
ªgs_PC
);

2196 
îr°r
 =

2197 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2198 
ªgs_PC
, (*)&
ö°
, (inst));

2199 
ö°
 = 
	`MD_SWAPI
(inst);

2200 i‡(
îr°r
)

2201 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2203 
	`md_¥öt_ö¢
(
ö°
, 
ªgs_PC
, 
°dout
);

2204 
	`Ârötf
(
°dout
, "\n");

2205 
	`Ârötf
(
°dout
, "\n");

2209 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
√xt_PC
);

2210 
îr°r
 =

2211 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2212 
√xt_PC
, (*)&
ö°
, (inst));

2213 
ö°
 = 
	`MD_SWAPI
(inst);

2214 i‡(
îr°r
)

2215 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2217 
	`md_¥öt_ö¢
(
ö°
, 
√xt_PC
, 
°dout
);

2218 
	`Ârötf
(
°dout
, "\n");

2219 
	}
}

2222 
	#DLITE_PROMPT
 "DLôe! > "

	)

2226 
	$dlôe_maö
(
md_addr_t
 
ªgs_PC
,

2227 
md_addr_t
 
√xt_PC
,

2228 
cou¡î_t
 
cy˛e
,

2229 
ªgs_t
 *
ªgs
,

2230 
mem_t
 *
mem
)

2232 
buf
[512], *
îr_°r
;

2233 
dbªak
 = (
bªak_ac˚ss
 & (
ACCESS_READ
|
ACCESS_WRITE
)) != 0;

2234 
cmd
[512] = "";

2236 
dlôe_a˘ive
 = 
TRUE
;

2237 
dlôe_ªtu∫
 = 
FALSE
;

2238 
	`dlôe_°©us
(
ªgs_PC
, 
√xt_PC
, 
cy˛e
, 
dbªak
, 
ªgs
, 
mem
);

2240 
dlôe_a˘ive
 && !
dlôe_ªtu∫
)

2242 
	`Ârötf
(
°dout
, 
DLITE_PROMPT
);

2243 
	`fÊush
(
°dout
);

2244 
	`fgës
(
buf
, 512, 
°dö
);

2247 i‡(
buf
[
	`°æí
(buf)-1] == '\n')

2248 
buf
[
	`°æí
(buf)-1] = '\0';

2250 i‡(
buf
[0] != '\0')

2253 
	`°r˝y
(
cmd
, 
buf
);

2257 
îr_°r
 = 
	`dlôe_exec
(
cmd
, 
ªgs
, 
mem
);

2258 i‡(
îr_°r
)

2259 
	`Ârötf
(
°dout
, "Dlôe:Éº‹: %s\n", 
îr_°r
);

2261 
	}
}

	@dlite.h

109 #i‚de‡
DLITE_H


110 
	#DLITE_H


	)

112 
	~<°dio.h
>

114 
	~"ho°.h
"

115 
	~"misc.h
"

116 
	~"machöe.h
"

117 
	~"ªgs.h
"

118 
	~"mem‹y.h
"

119 
	~"evÆ.h
"

124 (*
	tdlôe_ªg_obj_t
)(
	tªgs_t
 *
	tªgs
,

125 
	tis_wrôe
,

126 
	tmd_ªg_ty≥
 
	tπ
,

127 
	tªg
,

128 
	tevÆ_vÆue_t
 *
	tvÆ
);

133 (*
	tdlôe_mem_obj_t
)(
	tmem_t
 *
	tmem
,

134 
	tis_wrôe
,

135 
	tmd_addr_t
 
	taddr
,

136 *
	tp
,

137 
	tnbyãs
);

142 (*
	tdlôe_m°©e_obj_t
)(
	tFILE
 *
	t°ªam
,

143 *
	tcmd
,

144 
	tªgs_t
 *
	tªgs
,

145 
	tmem_t
 *
	tmem
);

149 
dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

150 
dlôe_mem_obj_t
 
mem_obj
,

151 
dlôe_m°©e_obj_t
 
m°©e_obj
);

159 
dlôe_mem_obj
(
mem_t
 *
mem
,

160 
is_wrôe
,

161 
md_addr_t
 
addr
,

162 *
p
,

163 
nbyãs
);

167 
dlôe_m°©e_obj
(
FILE
 *
°ªam
,

168 *
cmd
,

169 
ªgs_t
 *
ªgs
,

170 
mem_t
 *
mem
);

173 
	#ACCESS_READ
 0x01

	)

174 
	#ACCESS_WRITE
 0x02

	)

175 
	#ACCESS_EXEC
 0x04

	)

178 
md_addr_t
 
dlôe_Á°bªak
 ;

181 
dlôe_a˘ive
 ;

184 
dlôe_check
 ;

188 
__check_bªak
(
md_addr_t
 
√xt_PC
,

189 
ac˚ss
,

190 
md_addr_t
 
addr
,

191 
cou¡î_t
 
icou¡
,

192 
cou¡î_t
 
cy˛e
);

195 
	#dlôe_check_bªak
(
NPC
, 
ACCESS
, 
ADDR
, 
ICNT
, 
CYCLE
) \

196 ((
dlôe_check
 || 
dlôe_a˘ive
) \

197 ? 
	`__check_bªak
((
NPC
), (
ACCESS
), (
ADDR
), (
ICNT
), (
CYCLE
)) \

198 : 
FALSE
)

	)

202 
dlôe_maö
(
md_addr_t
 
ªgs_PC
,

203 
md_addr_t
 
√xt_PC
,

204 
cou¡î_t
 
cy˛e
,

205 
ªgs_t
 *
ªgs
,

206 
mem_t
 *
mem
);

	@eio.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #ifde‡
_MSC_VER


55 
	~<io.h
>

57 
	~<uni°d.h
>

60 
	~"ho°.h
"

61 
	~"misc.h
"

62 
	~"machöe.h
"

63 
	~"ªgs.h
"

64 
	~"mem‹y.h
"

65 
	~"lﬂdî.h
"

66 
	~"libexo/libexo.h
"

67 
	~"sysˇŒ.h
"

68 
	~"sim.h
"

69 
	~"ídün.h
"

70 
	~"eio.h
"

72 #ifde‡
_MSC_VER


73 
	#wrôe
 
_wrôe


	)

76 
	#EIO_FILE_HEADER
 \

77 "/* Thi†i†®Sim∂eSˇœ∏EIO fûê- DO NOT MOVE OR EDIT THIS LINE! */\n"

	)

94 
cou¡î_t
 
	geio_å™s_i˙t
 = -1;

96 
FILE
 *

97 
	$eio_¸óã
(*
‚ame
)

99 
FILE
 *
fd
;

100 
exo_ãrm_t
 *
exo
;

101 
èrgë_big_ídün
;

103 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

105 
fd
 = 
	`gz›í
(
‚ame
, "w");

106 i‡(!
fd
)

107 
	`Áèl
("u«bÀÅÿ¸óã EIO fûê`%s'", 
‚ame
);

110 
	`Ârötf
(
fd
, "%s\n", 
EIO_FILE_HEADER
);

111 
	`Ârötf
(
fd
, "/* file_format: %d, file_version: %d, big_endian: %d */\n",

112 
MD_EIO_FILE_FORMAT
, 
EIO_FILE_VERSION
, 
ld_èrgë_big_ídün
);

113 
exo
 = 
	`exo_√w
(
ec_li°
,

114 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
MD_EIO_FILE_FORMAT
),

115 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
EIO_FILE_VERSION
),

116 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
èrgë_big_ídün
),

117 
NULL
);

118 
	`exo_¥öt
(
exo
, 
fd
);

119 
	`exo_dñëe
(
exo
);

120 
	`Ârötf
(
fd
, "\n\n");

122  
fd
;

123 
	}
}

125 
FILE
 *

126 
	$eio_›í
(*
‚ame
)

128 
FILE
 *
fd
;

129 
exo_ãrm_t
 *
exo
;

130 
fûe_f‹m©
, 
fûe_vîsi⁄
, 
big_ídün
, 
èrgë_big_ídün
;

132 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

134 
fd
 = 
	`gz›í
(
‚ame
, "r");

135 i‡(!
fd
)

136 
	`Áèl
("u«bÀÅÿ›í EIO fûê`%s'", 
‚ame
);

139 
exo
 = 
	`exo_ªad
(
fd
);

140 i‡(!
exo


141 || 
exo
->
ec
 !
ec_li°


142 || !
exo
->
as_li°
.
hód


143 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


144 || !
exo
->
as_li°
.
hód
->
√xt


145 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


146 || !
exo
->
as_li°
.
hód
->
√xt
->next

147 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_öãgî


148 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

149 
	`Áèl
("couldÇotÑead EIO file header");

151 
fûe_f‹m©
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

152 
fûe_vîsi⁄
 = 
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

153 
big_ídün
 = 
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
;

154 
	`exo_dñëe
(
exo
);

156 i‡(
fûe_f‹m©
 !
MD_EIO_FILE_FORMAT
)

157 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ f‹m©", 
‚ame
);

159 i‡(
fûe_vîsi⁄
 !
EIO_FILE_VERSION
)

160 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ vîsi⁄", 
‚ame
);

162 i‡(!!
big_ídün
 !!!
èrgë_big_ídün
)

164 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

165 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

166 
	`w¨n
("****************************************");

167 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

168 
	`w¨n
("****************************************");

171  
fd
;

172 
	}
}

176 
	$eio_vÆid
(*
‚ame
)

178 
FILE
 *
fd
;

179 
buf
[512];

182 
fd
 = 
	`gz›í
(
‚ame
, "r");

183 i‡(!
fd
)

184  
FALSE
;

187 
	`fgës
(
buf
, 512, 
fd
);

190 i‡(
	`°rcmp
(
buf
, 
EIO_FILE_HEADER
))

191  
FALSE
;

194 
	`gz˛o£
(
fd
);

197  
TRUE
;

198 
	}
}

201 
	$eio_˛o£
(
FILE
 *
fd
)

203 
	`gz˛o£
(
fd
);

204 
	}
}

208 
cou¡î_t


209 
	$eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

210 
mem_t
 *
mem
,

211 
FILE
 *
fd
)

213 
i
;

214 
exo_ãrm_t
 *
exo
;

215 
mem_±e_t
 *
±e
;

217 
	`myÂrötf
(
fd
, "/* ** sèπ checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

219 
	`myÂrötf
(
fd
, "/* EIO fûêpoöãr: %n... */\n", 
eio_å™s_i˙t
);

220 
exo
 = 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
eio_å™s_i˙t
);

221 
	`exo_¥öt
(
exo
, 
fd
);

222 
	`Ârötf
(
fd
, "\n\n");

223 
	`exo_dñëe
(
exo
);

226 
	`Ârötf
(
fd
, "/* miscÑegs icnt, PC, NPC,Étc... */\n");

227 
exo
 = 
	`MD_MISC_REGS_TO_EXO
(
ªgs
);

228 
	`exo_¥öt
(
exo
, 
fd
);

229 
	`Ârötf
(
fd
, "\n\n");

230 
	`exo_dñëe
(
exo
);

233 
	`Ârötf
(
fd
, "/* integerÑegs */\n");

234 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

235 
i
=0; i < 
MD_NUM_IREGS
; i++)

236 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

237 
	`exo_¥öt
(
exo
, 
fd
);

238 
	`Ârötf
(
fd
, "\n\n");

239 
	`exo_dñëe
(
exo
);

242 
	`Ârötf
(
fd
, "/* FPÑegs (integer format) */\n");

243 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

244 
i
=0; i < 
MD_NUM_FREGS
; i++)

245 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_FREG_TO_EXO
(
ªgs
, 
i
));

246 
	`exo_¥öt
(
exo
, 
fd
);

247 
	`Ârötf
(
fd
, "\n\n");

248 
	`exo_dñëe
(
exo
);

250 
	`Ârötf
(
fd
, "/* wrôög `%d' mem‹yÖages... */\n", ()
mem
->
∑ge_cou¡
);

251 
exo
 = 
	`exo_√w
(
ec_li°
,

252 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
mem
->
∑ge_cou¡
),

253 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
),

254 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_mö
),

255 
NULL
);

256 
	`exo_¥öt
(
exo
, 
fd
);

257 
	`Ârötf
(
fd
, "\n\n");

258 
	`exo_dñëe
(
exo
);

260 
	`Ârötf
(
fd
, "/*Åext segment specifiers (base & size) */\n");

261 
exo
 = 
	`exo_√w
(
ec_li°
,

262 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_ãxt_ba£
),

263 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_ãxt_size
),

264 
NULL
);

265 
	`exo_¥öt
(
exo
, 
fd
);

266 
	`Ârötf
(
fd
, "\n\n");

267 
	`exo_dñëe
(
exo
);

269 
	`Ârötf
(
fd
, "/* data segment specifiers (base & size) */\n");

270 
exo
 = 
	`exo_√w
(
ec_li°
,

271 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_d©a_ba£
),

272 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_d©a_size
),

273 
NULL
);

274 
	`exo_¥öt
(
exo
, 
fd
);

275 
	`Ârötf
(
fd
, "\n\n");

276 
	`exo_dñëe
(
exo
);

278 
	`Ârötf
(
fd
, "/* stack segment specifiers (base & size) */\n");

279 
exo
 = 
	`exo_√w
(
ec_li°
,

280 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_ba£
),

281 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_°ack_size
),

282 
NULL
);

283 
	`exo_¥öt
(
exo
, 
fd
);

284 
	`Ârötf
(
fd
, "\n\n");

285 
	`exo_dñëe
(
exo
);

288 
	`MEM_FORALL
(
mem
, 
i
, 
±e
)

291 
exo
 = 
	`exo_√w
(
ec_li°
,

292 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
	`MEM_PTE_ADDR
(
±e
, 
i
)),

293 
	`exo_√w
(
ec_blob
, 
MD_PAGE_SIZE
, 
±e
->
∑ge
),

294 
NULL
);

295 
	`exo_¥öt
(
exo
, 
fd
);

296 
	`Ârötf
(
fd
, "\n\n");

297 
	`exo_dñëe
(
exo
);

300 
	`myÂrötf
(
fd
, "/* **Énd checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

302  
eio_å™s_i˙t
;

303 
	}
}

307 
cou¡î_t


308 
	$eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

309 
mem_t
 *
mem
,

310 
FILE
 *
fd
)

312 
i
, 
∑ge_cou¡
;

313 
cou¡î_t
 
å™s_i˙t
;

314 
exo_ãrm_t
 *
exo
, *
ñt
;

317 
exo
 = 
	`exo_ªad
(
fd
);

318 i‡(!
exo


319 || 
exo
->
ec
 !
ec_öãgî
)

320 
	`Áèl
("couldÇotÑead EIO fileÖointer");

321 
å™s_i˙t
 = 
exo
->
as_öãgî
.
vÆ
;

322 
	`exo_dñëe
(
exo
);

325 
exo
 = 
	`exo_ªad
(
fd
);

326 
	`MD_EXO_TO_MISC_REGS
(
exo
, 
sim_num_ö¢
, 
ªgs
);

327 
	`exo_dñëe
(
exo
);

330 
exo
 = 
	`exo_ªad
(
fd
);

331 i‡(!
exo


332 || 
exo
->
ec
 !
ec_li°
)

333 
	`Áèl
("couldÇotÑead EIO integerÑegs");

334 
ñt
 = 
exo
->
as_li°
.
hód
;

335 
i
=0; i < 
MD_NUM_IREGS
; i++)

337 i‡(!
ñt
)

338 
	`Áèl
("couldÇotÑead EIO integerÑegs (too few)");

340 i‡(
ñt
->
ec
 !
ec_addªss
)

341 
	`Áèl
("couldÇotÑead EIO integerÑegs (bad value)");

343 
	`MD_EXO_TO_IREG
(
ñt
, 
ªgs
, 
i
);

344 
ñt
 =É…->
√xt
;

346 i‡(
ñt
 !
NULL
)

347 
	`Áèl
("couldÇotÑead EIO integerÑegs (too many)");

348 
	`exo_dñëe
(
exo
);

351 
exo
 = 
	`exo_ªad
(
fd
);

352 i‡(!
exo


353 || 
exo
->
ec
 !
ec_li°
)

354 
	`Áèl
("couldÇotÑead EIO FPÑegs");

355 
ñt
 = 
exo
->
as_li°
.
hód
;

356 
i
=0; i < 
MD_NUM_FREGS
; i++)

358 i‡(!
ñt
)

359 
	`Áèl
("couldÇotÑead EIO FPÑegs (too few)");

361 i‡(
ñt
->
ec
 !
ec_addªss
)

362 
	`Áèl
("couldÇotÑead EIO FPÑegs (bad value)");

364 
	`MD_EXO_TO_FREG
(
ñt
, 
ªgs
, 
i
);

365 
ñt
 =É…->
√xt
;

367 i‡(
ñt
 !
NULL
)

368 
	`Áèl
("couldÇotÑead EIO FPÑegs (too many)");

369 
	`exo_dñëe
(
exo
);

372 
exo
 = 
	`exo_ªad
(
fd
);

373 i‡(!
exo


374 || 
exo
->
ec
 !
ec_li°


375 || !
exo
->
as_li°
.
hód


376 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


377 || !
exo
->
as_li°
.
hód
->
√xt


378 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss


379 || !
exo
->
as_li°
.
hód
->
√xt
->next

380 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss


381 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

382 
	`Áèl
("couldÇotÑead EIO memoryÖage count");

383 
∑ge_cou¡
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

384 
ld_brk_poöt
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
;

385 
ld_°ack_mö
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
;

386 
	`exo_dñëe
(
exo
);

389 
exo
 = 
	`exo_ªad
(
fd
);

390 i‡(!
exo


391 || 
exo
->
ec
 !
ec_li°


392 || !
exo
->
as_li°
.
hód


393 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


394 || !
exo
->
as_li°
.
hód
->
√xt


395 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


396 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

397 
	`Áèl
("countÇotÑead EIOÅext segment specifiers");

398 
ld_ãxt_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

399 
ld_ãxt_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

400 
	`exo_dñëe
(
exo
);

403 
exo
 = 
	`exo_ªad
(
fd
);

404 i‡(!
exo


405 || 
exo
->
ec
 !
ec_li°


406 || !
exo
->
as_li°
.
hód


407 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


408 || !
exo
->
as_li°
.
hód
->
√xt


409 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


410 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

411 
	`Áèl
("countÇotÑead EIO data segment specifiers");

412 
ld_d©a_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

413 
ld_d©a_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

414 
	`exo_dñëe
(
exo
);

417 
exo
 = 
	`exo_ªad
(
fd
);

418 i‡(!
exo


419 || 
exo
->
ec
 !
ec_li°


420 || !
exo
->
as_li°
.
hód


421 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


422 || !
exo
->
as_li°
.
hód
->
√xt


423 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


424 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

425 
	`Áèl
("countÇotÑead EIO stack segment specifiers");

426 
ld_°ack_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

427 
ld_°ack_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

428 
	`exo_dñëe
(
exo
);

430 
i
=0; i < 
∑ge_cou¡
; i++)

432 
j
;

433 
md_addr_t
 
∑ge_addr
;

434 
exo_ãrm_t
 *
blob
;

437 
exo
 = 
	`exo_ªad
(
fd
);

438 i‡(!
exo


439 || 
exo
->
ec
 !
ec_li°


440 || !
exo
->
as_li°
.
hód


441 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


442 || !
exo
->
as_li°
.
hód
->
√xt


443 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_blob


444 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

445 
	`Áèl
("couldÇotÑead EIO memoryÖage");

446 
∑ge_addr
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

447 
blob
 = 
exo
->
as_li°
.
hód
->
√xt
;

450 
j
=0; j < 
blob
->
as_blob
.
size
; j++)

452 
byã_t
 
vÆ
;

454 
vÆ
 = 
blob
->
as_blob
.
d©a
[
j
];

456 
	`MEM_WRITE_BYTE
(
mem
, 
∑ge_addr
, 
vÆ
);

457 
∑ge_addr
++;

459 
	`exo_dñëe
(
exo
);

462  
å™s_i˙t
;

463 
	}
}

465 
	smem_ªc_t
 {

466 
md_addr_t
 
	maddr
;

467 
	msize
, 
	mmaxsize
;

468 
exo_ãrm_t
 *
	mexo
;

469 
exo_ãrm_t
 *
	mblob
;

473 
exo_ãrm_t
 *
	göput_ªgs
;

474 
exo_ãrm_t
 *
	gouçut_ªgs
;

477 
exo_ãrm_t
 *
	göput_mem
;

478 
mem_ªc_t
 
	göput_mem_ªc
;

481 
exo_ãrm_t
 *
	gouçut_mem
;

482 
mem_ªc_t
 
	gouçut_mem_ªc
;

484 
	g£í_wrôe
;

485 
mem_ac˚ss_‚
 
	gloˇl_mem_‚
;

488 
	#BLOB_TAIL_SIZE
 256

	)

491 
md_Áu…_ty≥


492 
	$my_mem_‚
(
mem_t
 *
mem
,

493 
mem_cmd
 
cmd
,

494 
md_addr_t
 
addr
,

495 *
vp
,

496 
nbyãs
)

498 
i
;

499 *
p
 = 
vp
;

500 
mem_ªc_t
 *
mem_ªc
 = 
NULL
;

501 
exo_ãrm_t
 *
mem_li°
 = 
NULL
;

502 
md_Áu…_ty≥
 
Áu…
 = 
md_Áu…_n⁄e
;

504 i‡(
cmd
 =
Ród
 && 
£í_wrôe
)

505 
	`Áèl
("Readáfter Write inÉio_syscall()");

507 i‡(
cmd
 =
Wrôe
)

508 
£í_wrôe
 = 
TRUE
;

511 i‡(
cmd
 =
Ród
)

513 
mem_ªc
 = &
öput_mem_ªc
;

514 
mem_li°
 = 
öput_mem
;

516 i‡(
cmd
 =
Wrôe
)

518 
mem_ªc
 = &
ouçut_mem_ªc
;

519 
mem_li°
 = 
ouçut_mem
;

522 
	`∑nic
("bogus memoryáccess command");

525 i‡(
cmd
 =
Ród
 )

526 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

531 i‡(
mem_ªc
->
exo
 !
NULL


532 && (
mem_ªc
->
addr
 + mem_ªc->
size
 ==áddr)

533 && (
mem_ªc
->
size
 + 
nbyãs
 < mem_ªc->
maxsize
))

536 
i
=0; i < 
nbyãs
; i++)

537 
mem_ªc
->
blob
->
as_blob
.
d©a
[mem_ªc->
size
 + 
i
] = 
p
[i];

538 
mem_ªc
->
size
 +
nbyãs
;

539 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

544 
mem_li°
->
as_li°
.
hód
 =

545 
	`exo_chaö
(
mem_li°
->
as_li°
.
hód
,

546 (
mem_ªc
->
exo
 =

547 
	`exo_√w
(
ec_li°
,

548 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
addr
),

549 (
mem_ªc
->
blob
 =

550 
	`exo_√w
(
ec_blob
, 
nbyãs
 + 
BLOB_TAIL_SIZE
, 
NULL
)),

551 
NULL
)));

552 
i
=0; i < 
nbyãs
; i++)

553 
mem_ªc
->
blob
->
as_blob
.
d©a
[
i
] = 
p
[i];

554 
mem_ªc
->
addr
 =áddr;

555 
mem_ªc
->
size
 = 
nbyãs
;

556 
mem_ªc
->
maxsize
 = 
nbyãs
 + 
BLOB_TAIL_SIZE
;

557 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

561 i‡(
cmd
 =
Wrôe
 )

562 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

564  
Áu…
;

565 
	}
}

571 
	$eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

572 
cou¡î_t
 
i˙t
,

573 
ªgs_t
 *
ªgs
,

574 
mem_ac˚ss_‚
 
mem_‚
,

575 
mem_t
 *
mem
,

576 
md_ö°_t
 
ö°
)

578 
i
;

579 
exo_ãrm_t
 *
exo
;

582 
öput_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

583 
i
=
MD_FIRST_IN_REG
; i <
MD_LAST_IN_REG
; i++)

585 
öput_ªgs
->
as_li°
.
hód
 =

586 
	`exo_chaö
(
öput_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

590 
öput_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
öput_mem_ªc
.
exo
 = NULL;

591 
ouçut_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
ouçut_mem_ªc
.
exo
 = NULL;

594 
£í_wrôe
 = 
FALSE
;

595 
loˇl_mem_‚
 = 
mem_‚
;

597 i‡(
sim_eio_fd
 !
NULL
)

598 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
i˙t
, 
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
);

601 
	`sys_sysˇŒ
(
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
, 
FALSE
);

605 
ouçut_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

606 
ouçut_ªgs
->
as_li°
.
hód
 =

607 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
,

608 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
));

609 
i
=
MD_FIRST_OUT_REG
; i <
MD_LAST_OUT_REG
; i++)

611 
ouçut_ªgs
->
as_li°
.
hód
 =

612 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

616 
exo
 = 
	`exo_√w
(
ec_li°
,

617  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
i˙t
),

618  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ªgs
->
ªgs_PC
),

619 
öput_ªgs
, 
öput_mem
,

620 
ouçut_ªgs
, 
ouçut_mem
,

621 
NULL
);

622 
	`exo_¥öt
(
exo
, 
eio_fd
);

623 
	`Ârötf
(
eio_fd
, "\n\n");

626 
	`exo_dñëe
(
exo
);

629 
eio_å™s_i˙t
 = 
i˙t
;

630 
	}
}

636 
	$eio_ªad_åa˚
(
FILE
 *
eio_fd
,

637 
cou¡î_t
 
i˙t
,

638 
ªgs_t
 *
ªgs
,

639 
mem_ac˚ss_‚
 
mem_‚
,

640 
mem_t
 *
mem
,

641 
md_ö°_t
 
ö°
)

643 
i
;

644 
exo_ãrm_t
 *
exo
, *
exo_i˙t
, *
exo_pc
;

645 
exo_ãrm_t
 *
exo_öªgs
, *
exo_ömem
, *
exo_ouåegs
, *
exo_outmem
;

646 
exo_ãrm_t
 *
brkªc
, *
ªgªc
, *
memªc
;

649 i‡(
	`MD_EXIT_SYSCALL
(
ªgs
))

651 
	`sys_sysˇŒ
(
ªgs
, 
mem_‚
, 
mem
, 
ö°
, 
FALSE
);

652 
	`∑nic
("returned fromÉxit() system call");

656 
exo
 = 
	`exo_ªad
(
eio_fd
);

659 
eio_å™s_i˙t
 = 
i˙t
;

662 i‡(!
exo


663 || 
exo
->
ec
 !
ec_li°


664 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

665 || 
exo_i˙t
->
ec
 !
ec_öãgî


666 || !(
exo_pc
 = 
exo_i˙t
->
√xt
)

667 || 
exo_pc
->
ec
 !
ec_addªss


668 || !(
exo_öªgs
 = 
exo_pc
->
√xt
)

669 || 
exo_öªgs
->
ec
 !
ec_li°


670 || !(
exo_ömem
 = 
exo_öªgs
->
√xt
)

671 || 
exo_ömem
->
ec
 !
ec_li°


672 || !(
exo_ouåegs
 = 
exo_ömem
->
√xt
)

673 || 
exo_ouåegs
->
ec
 !
ec_li°


674 || !(
exo_outmem
 = 
exo_ouåegs
->
√xt
)

675 || 
exo_outmem
->
ec
 !
ec_li°


676 || 
exo_outmem
->
√xt
 !
NULL
)

677 
	`Áèl
("cannotÑead EIOÅransaction");

684 i‡(
i˙t
 !(
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
)

685 
	`Áèl
("EIOÅrace inconsistency: ICNT mismatch");

688 i‡(
ªgs
->
ªgs_PC
 !(
md_addr_t
)
exo_pc
->
as_öãgî
.
vÆ
)

689 
	`Áèl
("EIOÅrace inconsistency: PC mismatch");

692 
i
=
MD_FIRST_IN_REG
, 
ªgªc
=
exo_öªgs
->
as_li°
.
hód
;

693 
i
 <
MD_LAST_IN_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

695 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

696 
	`Áèl
("EIOÅrace inconsistency: missing inputÑeg");

698 i‡(
	`MD_EXO_CMP_IREG
(
ªgªc
, 
ªgs
, 
i
))

699 
	`Áèl
("EIOÅø˚ inc⁄si°ícy: R[%d] i≈uàmism©ch", 
i
);

700 #ifde‡
VERBOSE


701 
	`Ârötf
(
°dîr
, "** R[%d] check†out...\n", 
i
);

704 i‡(
ªgªc
 !
NULL
)

705 
	`Áèl
("EIOÅrace inconsistency:Åoo many inputÑegs");

708 
memªc
=
exo_ömem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

710 
md_addr_t
 
loc
;

711 
exo_ãrm_t
 *
addr
, *
blob
;

714 i‡(!
memªc


715 || 
memªc
->
ec
 !
ec_li°


716 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

717 || 
addr
->
ec
 !
ec_addªss


718 || !(
blob
 = 
addr
->
√xt
)

719 || 
blob
->
ec
 !
ec_blob


720 || 
blob
->
√xt
 !
NULL
)

721 
	`Áèl
("EIOÅrace inconsistency: bad memoryÅransaction");

723 
loc
=
addr
->
as_öãgî
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

725 
vÆ
;

728 (*
mem_‚
)(
mem
, 
Ród
, 
loc
, &
vÆ
, ());

730 i‡(
vÆ
 !
blob
->
as_blob
.
d©a
[
i
])

731 
	`Áèl
("EIOÅø˚ inc⁄si°ícy:ádd∏0x%08∞öpuàmism©ch", 
loc
);

733 #ifde‡
VERBOSE


734 
	`myÂrötf
(
°dîr
, "** 0x%08∞check†out...\n", 
loc
);

739 i‡(
	`MD_OUTPUT_SYSCALL
(
ªgs
))

741 i‡(
sim_¥ogfd
)

744 
	`fwrôe
(
blob
->
as_blob
.
d©a
, 1, blob->as_blob.
size
, 
sim_¥ogfd
);

749 
	`wrôe
(
	`MD_STREAM_FILENO
(
ªgs
),

750 
blob
->
as_blob
.
d©a
, blob->as_blob.
size
);

760 
brkªc
 = 
exo_ouåegs
->
as_li°
.
hód
;

761 i‡(!
brkªc
 || brkªc->
ec
 !
ec_addªss
)

762 
	`Áèl
("EIOÅrace inconsistency: missing memory breakpoint");

763 
ld_brk_poöt
 = (
md_addr_t
)
brkªc
->
as_öãgî
.
vÆ
;

766 
i
=
MD_FIRST_OUT_REG
, 
ªgªc
=
exo_ouåegs
->
as_li°
.
hód
->
√xt
;

767 
i
 <
MD_LAST_OUT_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

769 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

770 
	`Áèl
("EIOÅrace inconsistency: missing outputÑeg");

772 
	`MD_EXO_TO_IREG
(
ªgªc
, 
ªgs
, 
i
);

774 #ifde‡
VERBOSE


775 
	`Ârötf
(
°dîr
, "** R[%d] wrôãn...\n", 
i
);

778 i‡(
ªgªc
 !
NULL
)

779 
	`Áèl
("EIOÅrace inconsistency:Åoo many outputÑegs");

782 
memªc
=
exo_outmem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

784 
md_addr_t
 
loc
;

785 
exo_ãrm_t
 *
addr
, *
blob
;

788 i‡(!
memªc


789 || 
memªc
->
ec
 !
ec_li°


790 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

791 || 
addr
->
ec
 !
ec_addªss


792 || !(
blob
 = 
addr
->
√xt
)

793 || 
blob
->
ec
 !
ec_blob


794 || 
blob
->
√xt
 !
NULL
)

795 
	`Áèl
("EIOÅrace icnonsistency: bad memoryÅransaction");

797 
loc
=
addr
->
as_öãgî
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

800 (*
mem_‚
)(
mem
, 
Wrôe
,

801 
loc
, &
blob
->
as_blob
.
d©a
[
i
], ());

803 #ifde‡
VERBOSE


804 
	`Ârötf
(
°dîr
, "** 0x%08∞wrôãn...\n", 
loc
);

810 
	`exo_dñëe
(
exo
);

811 
	}
}

815 
	$eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
)

817 
exo_ãrm_t
 *
exo
, *
exo_i˙t
;

822 
exo
 = 
	`exo_ªad
(
eio_fd
);

824 i‡(!
exo
)

825 
	`Áèl
("couldÇot fast forwardÅo EIO checkpoint");

828 
eio_å™s_i˙t
 = 
i˙t
;

831 i‡(!
exo


832 || 
exo
->
ec
 !
ec_li°


833 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

834 || 
exo_i˙t
->
ec
 !
ec_öãgî
)

835 
	`Áèl
("cannotÑead EIOÅransaction (during fast forward)");

837 (
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
 !
i˙t
);

840 
	}
}

	@eio.h

52 #i‚de‡
EIO_H


53 
	#EIO_H


	)

55 
	~<°dio.h
>

58 
	#EIO_PISA_FORMAT
 1

	)

59 
	#EIO_ALPHA_FORMAT
 2

	)

62 
	#EIO_FILE_VERSION
 3

	)

64 
FILE
 *
eio_¸óã
(*
‚ame
);

66 
FILE
 *
eio_›í
(*
‚ame
);

69 
eio_vÆid
(*
‚ame
);

71 
eio_˛o£
(
FILE
 *
fd
);

75 
cou¡î_t


76 
eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

77 
mem_t
 *
mem
,

78 
FILE
 *
fd
);

82 
cou¡î_t


83 
eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

84 
mem_t
 *
mem
,

85 
FILE
 *
fd
);

91 
eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

92 
cou¡î_t
 
i˙t
,

93 
ªgs_t
 *
ªgs
,

94 
mem_ac˚ss_‚
 
mem_‚
,

95 
mem_t
 *
mem
,

96 
md_ö°_t
 
ö°
);

102 
eio_ªad_åa˚
(
FILE
 *
eio_fd
,

103 
cou¡î_t
 
i˙t
,

104 
ªgs_t
 *
ªgs
,

105 
mem_ac˚ss_‚
 
mem_‚
,

106 
mem_t
 *
mem
,

107 
md_ö°_t
 
ö°
);

110 
eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
);

	@endian.c

52 
	~"ídün.h
"

53 #i‚de‡
HOST_ONLY


54 
	~"lﬂdî.h
"

58 
ídün_t


59 
	$ídün_ho°_byã_‹dî
()

61 
i
 = 1, *
p
;

63 
p
 = &
i
;

64 i‡(*((*)
p
) == 1)

65  
ídün_lôée
;

66 i‡(*((*)
p
) == 0)

67  
ídün_big
;

69  
ídün_unknown
;

70 
	}
}

73 
ídün_t


74 
	$ídün_ho°_w‹d_‹dî
()

76 *
p
;

77 
x
 = 1.0;

80 
p
 = (*)&
x
;

81 i‡(*
p
 == 0)

82  
ídün_lôée
;

83 i‡(*
p
 == 0x3ff00000)

84  
ídün_big
;

86  
ídün_unknown
;

87 
	}
}

89 #i‚de‡
HOST_ONLY


93 
ídün_t


94 
	$ídün_èrgë_byã_‹dî
()

96  
ld_èrgë_big_ídün
 ? 
ídün_big
 : 
ídün_lôée
;

97 
	}
}

101 
ídün_t


102 
	$ídün_èrgë_w‹d_‹dî
()

105  
	`ídün_èrgë_byã_‹dî
();

106 
	}
}

	@endian.h

52 #i‚de‡
ENDIAN_H


53 
	#ENDIAN_H


	)

56 
	#SWAP_HALF
(
X
) \

57 (((((
hÆf_t
)(
X
)Ë& 0xffË<< 8Ë| ((((hÆf_t)(X)Ë& 0xff00Ë>> 8))

	)

58 
	#SWAP_WORD
(
X
Ë(((
w‹d_t
)(X) << 24) | \

59 (((
w‹d_t
)(
X
) << 8) & 0x00ff0000) | \

60 (((
w‹d_t
)(
X
) >> 8) & 0x0000ff00) | \

61 (((
w‹d_t
)(
X
Ë>> 24Ë& 0x000000ff))

	)

62 
	#SWAP_QWORD
(
X
Ë(((
qw‹d_t
)(X) << 56) | \

63 (((
qw‹d_t
)(
X
Ë<< 40Ë& 
	`ULL
(0x00ff000000000000)) |\

64 (((
qw‹d_t
)(
X
Ë<< 24Ë& 
	`ULL
(0x0000ff0000000000)) |\

65 (((
qw‹d_t
)(
X
Ë<< 8Ë& 
	`ULL
(0x000000ff00000000)) |\

66 (((
qw‹d_t
)(
X
Ë>> 8Ë& 
	`ULL
(0x00000000ff000000)) |\

67 (((
qw‹d_t
)(
X
Ë>> 24Ë& 
	`ULL
(0x0000000000ff0000)) |\

68 (((
qw‹d_t
)(
X
Ë>> 40Ë& 
	`ULL
(0x000000000000ff00)) |\

69 (((
qw‹d_t
)(
X
Ë>> 56Ë& 
	`ULL
(0x00000000000000ff)))

	)

72 
	eídün_t
 { 
	mídün_big
, 
	mídün_lôée
, 
	mídün_unknown
};

74 
ídün_t


75 
ídün_ho°_byã_‹dî
();

78 
ídün_t


79 
ídün_ho°_w‹d_‹dî
();

81 #i‚de‡
HOST_ONLY


85 
ídün_t


86 
ídün_èrgë_byã_‹dî
();

90 
ídün_t


91 
ídün_èrgë_w‹d_‹dî
();

	@eval.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<˘y≥.h
>

55 
	~<î∫o.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"evÆ.h
"

61 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

62 
	#°πoul
 
°πﬁ


	)

66 
evÆ_îr_t
 
	gevÆ_îr‹
 = 
ERR_NOERR
;

69 *
	gevÆ_îr_°r
[
ERR_NUM
] = {

81 
evÆ_tokí_t
 
	gtok_m≠
[256];

82 
	gtok_m≠_öôülized
 = 
FALSE
;

86 
	$öô_tok_m≠
()

88 
i
;

90 
i
=0; i<256; i++)

91 
tok_m≠
[
i
] = 
tok_övÆid
;

94 
i
='a'; i<='z'; i++)

95 
tok_m≠
[
i
] = 
tok_idít
;

96 
i
='A'; i<='Z'; i++)

97 
tok_m≠
[
i
] = 
tok_idít
;

98 
tok_m≠
[()'_'] = 
tok_idít
;

99 
tok_m≠
[()'$'] = 
tok_idít
;

102 
i
='0'; i<='9'; i++)

103 
tok_m≠
[
i
] = 
tok_c⁄°
;

104 
tok_m≠
[()'.'] = 
tok_c⁄°
;

107 
tok_m≠
[()'+'] = 
tok_∂us
;

108 
tok_m≠
[()'-'] = 
tok_möus
;

109 
tok_m≠
[()'*'] = 
tok_mu…
;

110 
tok_m≠
[()'/'] = 
tok_div
;

111 
tok_m≠
[()'('] = 
tok_›¨í
;

112 
tok_m≠
[()')'] = 
tok_˝¨í
;

115 
tok_m≠
[()' '] = 
tok_whôe•a˚
;

116 
tok_m≠
[()'\t'] = 
tok_whôe•a˚
;

117 
	}
}

120 
evÆ_tokí_t


121 
	$gë_√xt_tokí
(
evÆ_°©e_t
 *
es
)

123 
Ælow_hex
;

124 
evÆ_tokí_t
 
tok
;

125 *
±ok_buf
, 
œ°_ch¨
;

128 i‡(!
tok_m≠_öôülized
)

130 
	`öô_tok_m≠
();

131 
tok_m≠_öôülized
 = 
TRUE
;

135 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

137 
tok
 = 
es
->
≥ek_tok
;

138 
es
->
≥ek_tok
 = 
tok_övÆid
;

139  
tok
;

143 
±ok_buf
 = 
es
->
tok_buf
;

144 *
±ok_buf
 = '\0';

147 *
es
->
p
 && 
tok_m≠
[()*es->p] =
tok_whôe•a˚
)

148 
es
->
p
++;

151 i‡(*
es
->
p
 == '\0')

152  
tok_eof
;

154 *
±ok_buf
++ = *
es
->
p
;

155 
tok
 = 
tok_m≠
[()*
es
->
p
++];

156 
tok
)

158 
tok_idít
:

160 *
es
->
p


161 && (
tok_m≠
[()*
es
->
p
] =
tok_idít


162 || 
tok_m≠
[()*
es
->
p
] =
tok_c⁄°
))

164 *
±ok_buf
++ = *
es
->
p
++;

167 
tok_c⁄°
:

169 
œ°_ch¨
 = '\0';

170 
Ælow_hex
 = 
FALSE
;

171 *
es
->
p
 &&

172 (
tok_m≠
[()*
es
->
p
] =
tok_c⁄°


173 || (*
es
->
p
 ='-' && 
œ°_ch¨
 == 'e')

174 || (*
es
->
p
 ='+' && 
œ°_ch¨
 == 'e')

175 || 
	`tﬁowî
(*
es
->
p
) == 'e'

176 || 
	`tﬁowî
(*
es
->
p
) == 'x'

177 || (
	`tﬁowî
(*
es
->
p
Ë='a' && 
Ælow_hex
)

178 || (
	`tﬁowî
(*
es
->
p
Ë='b' && 
Ælow_hex
)

179 || (
	`tﬁowî
(*
es
->
p
Ë='c' && 
Ælow_hex
)

180 || (
	`tﬁowî
(*
es
->
p
Ë='d' && 
Ælow_hex
)

181 || (
	`tﬁowî
(*
es
->
p
Ë='e' && 
Ælow_hex
)

182 || (
	`tﬁowî
(*
es
->
p
Ë='f' && 
Ælow_hex
)))

184 
œ°_ch¨
 = 
	`tﬁowî
(*
es
->
p
);

185 i‡(*
es
->
p
 == 'x' || *es->p == 'X')

186 
Ælow_hex
 = 
TRUE
;

187 *
±ok_buf
++ = *
es
->
p
++;

190 
tok_∂us
:

191 
tok_möus
:

192 
tok_mu…
:

193 
tok_div
:

194 
tok_›¨í
:

195 
tok_˝¨í
:

199 
tok
 = 
tok_övÆid
;

204 *
±ok_buf
 = '\0';

206  
tok
;

207 
	}
}

211 
evÆ_tokí_t


212 
	$≥ek_√xt_tokí
(
evÆ_°©e_t
 *
es
)

215 i‡(
es
->
≥ek_tok
 =
tok_övÆid
)

217 
es
->
œ°p
 =És->
p
;

218 
es
->
≥ek_tok
 = 
	`gë_√xt_tokí
(es);

222  
es
->
≥ek_tok
;

223 
	}
}

226 
evÆ_vÆue_t
 
ex¥
(
evÆ_°©e_t
 *
es
);

229 
evÆ_vÆue_t
 
	gîr_vÆue
 = { 
ë_öt
, { 0 } };

232 *
	gevÆ_ty≥_°r
[
ë_NUM
] = {

236 #ifde‡
HOST_HAS_QWORD


246 
evÆ_ty≥_t


247 
	$ªsu…_ty≥
(
evÆ_ty≥_t
 
t1
,

248 
evÆ_ty≥_t
 
t2
)

251 i‡(
t1
 =
ë_symbﬁ
 || 
t2
 ==Ét_symbol)

252 
	`∑nic
("symbol used inÉxpression");

255 i‡(
t1
 =
ë_doubÀ
 || 
t2
 ==Ét_double)

256  
ë_doubÀ
;

257 i‡(
t1
 =
ë_Êﬂt
 || 
t2
 ==Ét_float)

258  
ë_Êﬂt
;

259 #ifde‡
HOST_HAS_QWORD


260 i‡(
t1
 =
ë_qw‹d
 || 
t2
 ==Ét_qword)

261  
ë_qw‹d
;

262 i‡(
t1
 =
ë_sqw‹d
 || 
t2
 ==Ét_sqword)

263  
ë_sqw‹d
;

265 i‡(
t1
 =
ë_addr
 || 
t2
 ==Ét_addr)

266  
ë_addr
;

267 i‡(
t1
 =
ë_uöt
 || 
t2
 ==Ét_uint)

268  
ë_uöt
;

270  
ë_öt
;

271 
	}
}

279 
	$evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
)

281 
vÆ
.
ty≥
)

283 
ë_doubÀ
:

284  
vÆ
.
vÆue
.
as_doubÀ
;

285 
ë_Êﬂt
:

286  ()
vÆ
.
vÆue
.
as_Êﬂt
;

287 #ifde‡
HOST_HAS_QWORD


288 
ë_qw‹d
:

289 #ifde‡
_MSC_VER


290  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

292  ()
vÆ
.
vÆue
.
as_qw‹d
;

294 
ë_sqw‹d
:

295  ()
vÆ
.
vÆue
.
as_sqw‹d
;

297 
ë_addr
:

298 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

300  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

302  ()
vÆ
.
vÆue
.
as_addr
;

304 
ë_uöt
:

305  ()
vÆ
.
vÆue
.
as_uöt
;

306 
ë_öt
:

307  ()
vÆ
.
vÆue
.
as_öt
;

308 
ë_symbﬁ
:

309 
	`∑nic
("symbol used inÉxpression");

311 
	`∑nic
("illegalárithmeticÉxpression conversion");

313 
	}
}

317 
	$evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
)

319 
vÆ
.
ty≥
)

321 
ë_doubÀ
:

322  ()
vÆ
.
vÆue
.
as_doubÀ
;

323 
ë_Êﬂt
:

324  
vÆ
.
vÆue
.
as_Êﬂt
;

325 #ifde‡
HOST_HAS_QWORD


326 
ë_qw‹d
:

327 #ifde‡
_MSC_VER


328  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

330  ()
vÆ
.
vÆue
.
as_qw‹d
;

332 
ë_sqw‹d
:

333  ()
vÆ
.
vÆue
.
as_sqw‹d
;

335 
ë_addr
:

336 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

338  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

340  ()
vÆ
.
vÆue
.
as_addr
;

342 
ë_uöt
:

343  ()
vÆ
.
vÆue
.
as_uöt
;

344 
ë_öt
:

345  ()
vÆ
.
vÆue
.
as_öt
;

346 
ë_symbﬁ
:

347 
	`∑nic
("symbol used inÉxpression");

349 
	`∑nic
("illegalárithmeticÉxpression conversion");

351 
	}
}

353 #ifde‡
HOST_HAS_QWORD


355 
qw‹d_t


356 
	$evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
)

358 
vÆ
.
ty≥
)

360 
ë_doubÀ
:

361  (
qw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

362 
ë_Êﬂt
:

363  (
qw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

364 
ë_qw‹d
:

365  
vÆ
.
vÆue
.
as_qw‹d
;

366 
ë_sqw‹d
:

367  (
qw‹d_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

368 
ë_addr
:

369  (
qw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

370 
ë_uöt
:

371  (
qw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

372 
ë_öt
:

373  (
qw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

374 
ë_symbﬁ
:

375 
	`∑nic
("symbol used inÉxpression");

377 
	`∑nic
("illegalárithmeticÉxpression conversion");

379 
	}
}

382 
sqw‹d_t


383 
	$evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
)

385 
vÆ
.
ty≥
)

387 
ë_doubÀ
:

388  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

389 
ë_Êﬂt
:

390  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

391 
ë_qw‹d
:

392  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

393 
ë_sqw‹d
:

394  
vÆ
.
vÆue
.
as_sqw‹d
;

395 
ë_addr
:

396  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

397 
ë_uöt
:

398  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

399 
ë_öt
:

400  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

401 
ë_symbﬁ
:

402 
	`∑nic
("symbol used inÉxpression");

404 
	`∑nic
("illegalárithmeticÉxpression conversion");

406 
	}
}

410 
md_addr_t


411 
	$evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
)

413 
vÆ
.
ty≥
)

415 
ë_doubÀ
:

416  (
md_addr_t
)
vÆ
.
vÆue
.
as_doubÀ
;

417 
ë_Êﬂt
:

418  (
md_addr_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

419 #ifde‡
HOST_HAS_QWORD


420 
ë_qw‹d
:

421  (
md_addr_t
)
vÆ
.
vÆue
.
as_qw‹d
;

422 
ë_sqw‹d
:

423  (
md_addr_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

425 
ë_addr
:

426  
vÆ
.
vÆue
.
as_addr
;

427 
ë_uöt
:

428  (
md_addr_t
)
vÆ
.
vÆue
.
as_uöt
;

429 
ë_öt
:

430  (
md_addr_t
)
vÆ
.
vÆue
.
as_öt
;

431 
ë_symbﬁ
:

432 
	`∑nic
("symbol used inÉxpression");

434 
	`∑nic
("illegalárithmeticÉxpression conversion");

436 
	}
}

440 
	$evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
)

442 
vÆ
.
ty≥
)

444 
ë_doubÀ
:

445  ()
vÆ
.
vÆue
.
as_doubÀ
;

446 
ë_Êﬂt
:

447  ()
vÆ
.
vÆue
.
as_Êﬂt
;

448 #ifde‡
HOST_HAS_QWORD


449 
ë_qw‹d
:

450  ()
vÆ
.
vÆue
.
as_qw‹d
;

451 
ë_sqw‹d
:

452  ()
vÆ
.
vÆue
.
as_sqw‹d
;

454 
ë_addr
:

455  ()
vÆ
.
vÆue
.
as_addr
;

456 
ë_uöt
:

457  
vÆ
.
vÆue
.
as_uöt
;

458 
ë_öt
:

459  ()
vÆ
.
vÆue
.
as_öt
;

460 
ë_symbﬁ
:

461 
	`∑nic
("symbol used inÉxpression");

463 
	`∑nic
("illegalárithmeticÉxpression conversion");

465 
	}
}

469 
	$evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
)

471 
vÆ
.
ty≥
)

473 
ë_doubÀ
:

474  ()
vÆ
.
vÆue
.
as_doubÀ
;

475 
ë_Êﬂt
:

476  ()
vÆ
.
vÆue
.
as_Êﬂt
;

477 #ifde‡
HOST_HAS_QWORD


478 
ë_qw‹d
:

479  ()
vÆ
.
vÆue
.
as_qw‹d
;

480 
ë_sqw‹d
:

481  ()
vÆ
.
vÆue
.
as_sqw‹d
;

483 
ë_addr
:

484  ()
vÆ
.
vÆue
.
as_addr
;

485 
ë_uöt
:

486  ()
vÆ
.
vÆue
.
as_uöt
;

487 
ë_öt
:

488  
vÆ
.
vÆue
.
as_öt
;

489 
ë_symbﬁ
:

490 
	`∑nic
("symbol used inÉxpression");

492 
	`∑nic
("illegalárithmeticÉxpression conversion");

494 
	}
}

501 
evÆ_vÆue_t


502 
	$f_add
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

504 
evÆ_ty≥_t
 
ë
;

505 
evÆ_vÆue_t
 
vÆ
;

508 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

510 
evÆ_îr‹
 = 
ERR_BADEXPR
;

511  
îr_vÆue
;

515 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

516 
ë
)

518 
ë_doubÀ
:

519 
vÆ
.
ty≥
 = 
ë_doubÀ
;

520 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë+ÉvÆ_as_doubÀ(
vÆ2
);

522 
ë_Êﬂt
:

523 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

524 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë+ÉvÆ_as_Êﬂt(
vÆ2
);

526 #ifde‡
HOST_HAS_QWORD


527 
ë_qw‹d
:

528 
vÆ
.
ty≥
 = 
ë_qw‹d
;

529 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë+ÉvÆ_as_qw‹d(
vÆ2
);

531 
ë_sqw‹d
:

532 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

533 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë+ÉvÆ_as_sqw‹d(
vÆ2
);

536 
ë_addr
:

537 
vÆ
.
ty≥
 = 
ë_addr
;

538 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë+ÉvÆ_as_addr(
vÆ2
);

540 
ë_uöt
:

541 
vÆ
.
ty≥
 = 
ë_uöt
;

542 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë+ÉvÆ_as_uöt(
vÆ2
);

544 
ë_öt
:

545 
vÆ
.
ty≥
 = 
ë_öt
;

546 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë+ÉvÆ_as_öt(
vÆ2
);

549 
	`∑nic
("bogusÉxpressionÅype");

552  
vÆ
;

553 
	}
}

556 
evÆ_vÆue_t


557 
	$f_sub
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

559 
evÆ_ty≥_t
 
ë
;

560 
evÆ_vÆue_t
 
vÆ
;

563 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

565 
evÆ_îr‹
 = 
ERR_BADEXPR
;

566  
îr_vÆue
;

570 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

571 
ë
)

573 
ë_doubÀ
:

574 
vÆ
.
ty≥
 = 
ë_doubÀ
;

575 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë-ÉvÆ_as_doubÀ(
vÆ2
);

577 
ë_Êﬂt
:

578 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

579 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë-ÉvÆ_as_Êﬂt(
vÆ2
);

581 #ifde‡
HOST_HAS_QWORD


582 
ë_qw‹d
:

583 
vÆ
.
ty≥
 = 
ë_qw‹d
;

584 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë-ÉvÆ_as_qw‹d(
vÆ2
);

586 
ë_sqw‹d
:

587 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

588 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë-ÉvÆ_as_sqw‹d(
vÆ2
);

591 
ë_addr
:

592 
vÆ
.
ty≥
 = 
ë_addr
;

593 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë-ÉvÆ_as_addr(
vÆ2
);

595 
ë_uöt
:

596 
vÆ
.
ty≥
 = 
ë_uöt
;

597 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë-ÉvÆ_as_uöt(
vÆ2
);

599 
ë_öt
:

600 
vÆ
.
ty≥
 = 
ë_öt
;

601 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë-ÉvÆ_as_öt(
vÆ2
);

604 
	`∑nic
("bogusÉxpressionÅype");

607  
vÆ
;

608 
	}
}

611 
evÆ_vÆue_t


612 
	$f_mu…
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

614 
evÆ_ty≥_t
 
ë
;

615 
evÆ_vÆue_t
 
vÆ
;

618 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

620 
evÆ_îr‹
 = 
ERR_BADEXPR
;

621  
îr_vÆue
;

625 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

626 
ë
)

628 
ë_doubÀ
:

629 
vÆ
.
ty≥
 = 
ë_doubÀ
;

630 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë*ÉvÆ_as_doubÀ(
vÆ2
);

632 
ë_Êﬂt
:

633 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

634 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë*ÉvÆ_as_Êﬂt(
vÆ2
);

636 #ifde‡
HOST_HAS_QWORD


637 
ë_qw‹d
:

638 
vÆ
.
ty≥
 = 
ë_qw‹d
;

639 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë*ÉvÆ_as_qw‹d(
vÆ2
);

641 
ë_sqw‹d
:

642 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

643 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë*ÉvÆ_as_sqw‹d(
vÆ2
);

646 
ë_addr
:

647 
vÆ
.
ty≥
 = 
ë_addr
;

648 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë*ÉvÆ_as_addr(
vÆ2
);

650 
ë_uöt
:

651 
vÆ
.
ty≥
 = 
ë_uöt
;

652 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë*ÉvÆ_as_uöt(
vÆ2
);

654 
ë_öt
:

655 
vÆ
.
ty≥
 = 
ë_öt
;

656 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë*ÉvÆ_as_öt(
vÆ2
);

659 
	`∑nic
("bogusÉxpressionÅype");

662  
vÆ
;

663 
	}
}

666 
evÆ_vÆue_t


667 
	$f_div
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

669 
evÆ_ty≥_t
 
ë
;

670 
evÆ_vÆue_t
 
vÆ
;

673 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

675 
evÆ_îr‹
 = 
ERR_BADEXPR
;

676  
îr_vÆue
;

680 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

681 
ë
)

683 
ë_doubÀ
:

684 
vÆ
.
ty≥
 = 
ë_doubÀ
;

685 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë/ÉvÆ_as_doubÀ(
vÆ2
);

687 
ë_Êﬂt
:

688 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

689 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë/ÉvÆ_as_Êﬂt(
vÆ2
);

691 #ifde‡
HOST_HAS_QWORD


692 
ë_qw‹d
:

693 
vÆ
.
ty≥
 = 
ë_qw‹d
;

694 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë/ÉvÆ_as_qw‹d(
vÆ2
);

696 
ë_sqw‹d
:

697 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

698 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë/ÉvÆ_as_sqw‹d(
vÆ2
);

701 
ë_addr
:

702 
vÆ
.
ty≥
 = 
ë_addr
;

703 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë/ÉvÆ_as_addr(
vÆ2
);

705 
ë_uöt
:

706 
vÆ
.
ty≥
 = 
ë_uöt
;

707 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë/ÉvÆ_as_uöt(
vÆ2
);

709 
ë_öt
:

710 
vÆ
.
ty≥
 = 
ë_öt
;

711 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë/ÉvÆ_as_öt(
vÆ2
);

714 
	`∑nic
("bogusÉxpressionÅype");

717  
vÆ
;

718 
	}
}

721 
evÆ_vÆue_t


722 
	$f_√g
(
evÆ_vÆue_t
 
vÆ1
)

724 
evÆ_vÆue_t
 
vÆ
;

727 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

729 
evÆ_îr‹
 = 
ERR_BADEXPR
;

730  
îr_vÆue
;

734 
vÆ1
.
ty≥
)

736 
ë_doubÀ
:

737 
vÆ
.
ty≥
 = 
ë_doubÀ
;

738 
vÆ
.
vÆue
.
as_doubÀ
 = - 
vÆ1
.value.as_double;

740 
ë_Êﬂt
:

741 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

742 
vÆ
.
vÆue
.
as_Êﬂt
 = - 
vÆ1
.value.as_float;

744 #ifde‡
HOST_HAS_QWORD


745 
ë_qw‹d
:

746 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

747 
vÆ
.
vÆue
.
as_qw‹d
 = - (
sqw‹d_t
)
vÆ1
.value.as_qword;

749 
ë_sqw‹d
:

750 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

751 
vÆ
.
vÆue
.
as_sqw‹d
 = - 
vÆ1
.value.as_sqword;

754 
ë_addr
:

755 
vÆ
.
ty≥
 = 
ë_addr
;

756 
vÆ
.
vÆue
.
as_addr
 = - 
vÆ1
.value.as_addr;

758 
ë_uöt
:

759 i‡(()
vÆ1
.
vÆue
.
as_uöt
 > 2147483648U)

762 #ifde‡
HOST_HAS_QWORD


763 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

764 
vÆ
.
vÆue
.
as_sqw‹d
 = - ((
sqw‹d_t
)
vÆ1
.vÆue.
as_uöt
);

766 
vÆ
.
ty≥
 = 
ë_doubÀ
;

767 
vÆ
.
vÆue
.
as_doubÀ
 = - (()
vÆ1
.vÆue.
as_uöt
);

773 
vÆ
.
ty≥
 = 
ë_öt
;

774 
vÆ
.
vÆue
.
as_öt
 = - (()
vÆ1
.vÆue.
as_uöt
);

777 
ë_öt
:

778 i‡(()
vÆ1
.
vÆue
.
as_öt
 == 0x80000000U)

781 
vÆ
.
ty≥
 = 
ë_uöt
;

782 
vÆ
.
vÆue
.
as_uöt
 = 2147483648U;

787 
vÆ
.
ty≥
 = 
ë_öt
;

788 
vÆ
.
vÆue
.
as_öt
 = - 
vÆ1
.value.as_int;

792 
	`∑nic
("bogusÉxpressionÅype");

795  
vÆ
;

796 
	}
}

800 
	$f_eq_zîo
(
evÆ_vÆue_t
 
vÆ1
)

802 
vÆ
;

805 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

807 
evÆ_îr‹
 = 
ERR_BADEXPR
;

808  
FALSE
;

811 
vÆ1
.
ty≥
)

813 
ë_doubÀ
:

814 
vÆ
 = 
vÆ1
.
vÆue
.
as_doubÀ
 == 0.0;

816 
ë_Êﬂt
:

817 
vÆ
 = 
vÆ1
.
vÆue
.
as_Êﬂt
 == 0.0;

819 #ifde‡
HOST_HAS_QWORD


820 
ë_qw‹d
:

821 
vÆ
 = 
vÆ1
.
vÆue
.
as_qw‹d
 == 0;

823 
ë_sqw‹d
:

824 
vÆ
 = 
vÆ1
.
vÆue
.
as_sqw‹d
 == 0;

827 
ë_addr
:

828 
vÆ
 = 
vÆ1
.
vÆue
.
as_addr
 == 0;

830 
ë_uöt
:

831 
vÆ
 = 
vÆ1
.
vÆue
.
as_uöt
 == 0;

833 
ë_öt
:

834 
vÆ
 = 
vÆ1
.
vÆue
.
as_öt
 == 0;

837 
	`∑nic
("bogusÉxpressionÅype");

840  
vÆ
;

841 
	}
}

846 
evÆ_vÆue_t


847 
	$c⁄°™t
(
evÆ_°©e_t
 *
es
)

849 
evÆ_vÆue_t
 
vÆ
;

850 
öt_vÆ
;

851 
uöt_vÆ
;

852 
doubÀ_vÆ
;

853 *
ídp
;

854 #ifde‡
HOST_HAS_QWORD


855 
sqw‹d_t
 
sqw‹d_vÆ
;

856 
qw‹d_t
 
qw‹d_vÆ
;

860 #i‡
	`deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

861 
	`°πﬁ
(*, **, );

862 
	`°πod
(*, **);

872 
î∫o
 = 0;

873 
öt_vÆ
 = 
	`°πﬁ
(
es
->
tok_buf
, &
ídp
, 0);

874 i‡(!
î∫o
 && !*
ídp
)

877 
vÆ
.
ty≥
 = 
ë_öt
;

878 
vÆ
.
vÆue
.
as_öt
 = 
öt_vÆ
;

879  
vÆ
;

883 
î∫o
 = 0;

884 
uöt_vÆ
 = 
	`°πoul
(
es
->
tok_buf
, &
ídp
, 0);

885 i‡(!
î∫o
 && !*
ídp
)

888 
vÆ
.
ty≥
 = 
ë_uöt
;

889 
vÆ
.
vÆue
.
as_uöt
 = 
uöt_vÆ
;

890  
vÆ
;

893 #ifde‡
HOST_HAS_QWORD


895 
î∫o
 = 0;

896 
sqw‹d_vÆ
 = 
	`my©osq
(
es
->
tok_buf
, &
ídp
, 0);

897 i‡(!
î∫o
 && !*
ídp
)

900 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

901 
vÆ
.
vÆue
.
as_sqw‹d
 = 
sqw‹d_vÆ
;

902  
vÆ
;

906 
î∫o
 = 0;

907 
qw‹d_vÆ
 = 
	`my©oq
(
es
->
tok_buf
, &
ídp
, 0);

908 i‡(!
î∫o
 && !*
ídp
)

911 
vÆ
.
ty≥
 = 
ë_qw‹d
;

912 
vÆ
.
vÆue
.
as_qw‹d
 = 
qw‹d_vÆ
;

913  
vÆ
;

919 
î∫o
 = 0;

920 
doubÀ_vÆ
 = 
	`°πod
(
es
->
tok_buf
, &
ídp
);

921 i‡(!
î∫o
 && !*
ídp
)

924 
vÆ
.
ty≥
 = 
ë_doubÀ
;

925 
vÆ
.
vÆue
.
as_doubÀ
 = 
doubÀ_vÆ
;

926  
vÆ
;

931 
evÆ_îr‹
 = 
ERR_BADCONST
;

932  
îr_vÆue
;

933 
	}
}

937 
evÆ_vÆue_t


938 
	$Á˘‹
(
evÆ_°©e_t
 *
es
)

940 
evÆ_tokí_t
 
tok
;

941 
evÆ_vÆue_t
 
vÆ
;

943 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

944 
tok
)

946 
tok_›¨í
:

947 ()
	`gë_√xt_tokí
(
es
);

948 
vÆ
 = 
	`ex¥
(
es
);

949 i‡(
evÆ_îr‹
)

950  
îr_vÆue
;

952 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

953 i‡(
tok
 !
tok_˝¨í
)

955 
evÆ_îr‹
 = 
ERR_UPAREN
;

956  
îr_vÆue
;

958 ()
	`gë_√xt_tokí
(
es
);

961 
tok_möus
:

963 ()
	`gë_√xt_tokí
(
es
);

964 
vÆ
 = 
	`Á˘‹
(
es
);

965 i‡(
evÆ_îr‹
)

966  
îr_vÆue
;

967 
vÆ
 = 
	`f_√g
(val);

970 
tok_idít
:

971 ()
	`gë_√xt_tokí
(
es
);

973 
vÆ
 = 
es
->
	`f_evÆ_idít
(es);

974 i‡(
evÆ_îr‹
)

975  
îr_vÆue
;

978 
tok_c⁄°
:

979 ()
	`gë_√xt_tokí
(
es
);

980 
vÆ
 = 
	`c⁄°™t
(
es
);

981 i‡(
evÆ_îr‹
)

982  
îr_vÆue
;

986 
evÆ_îr‹
 = 
ERR_NOTERM
;

987  
îr_vÆue
;

990  
vÆ
;

991 
	}
}

995 
evÆ_vÆue_t


996 
	$ãrm
(
evÆ_°©e_t
 *
es
)

998 
evÆ_tokí_t
 
tok
;

999 
evÆ_vÆue_t
 
vÆ
, 
vÆ1
;

1001 
vÆ
 = 
	`Á˘‹
(
es
);

1002 i‡(
evÆ_îr‹
)

1003  
îr_vÆue
;

1005 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1006 
tok
)

1008 
tok_mu…
:

1009 ()
	`gë_√xt_tokí
(
es
);

1010 
vÆ
 = 
	`f_mu…
(vÆ, 
	`ãrm
(
es
));

1011 i‡(
evÆ_îr‹
)

1012  
îr_vÆue
;

1015 
tok_div
:

1016 ()
	`gë_√xt_tokí
(
es
);

1017 
vÆ1
 = 
	`ãrm
(
es
);

1018 i‡(
evÆ_îr‹
)

1019  
îr_vÆue
;

1020 i‡(
	`f_eq_zîo
(
vÆ1
))

1022 
evÆ_îr‹
 = 
ERR_DIV0
;

1023  
îr_vÆue
;

1025 
vÆ
 = 
	`f_div
(vÆ, 
vÆ1
);

1031  
vÆ
;

1032 
	}
}

1036 
evÆ_vÆue_t


1037 
	$ex¥
(
evÆ_°©e_t
 *
es
)

1039 
evÆ_tokí_t
 
tok
;

1040 
evÆ_vÆue_t
 
vÆ
;

1042 
vÆ
 = 
	`ãrm
(
es
);

1043 i‡(
evÆ_îr‹
)

1044  
îr_vÆue
;

1046 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1047 
tok
)

1049 
tok_∂us
:

1050 ()
	`gë_√xt_tokí
(
es
);

1051 
vÆ
 = 
	`f_add
(vÆ, 
	`ex¥
(
es
));

1052 i‡(
evÆ_îr‹
)

1053  
îr_vÆue
;

1056 
tok_möus
:

1057 ()
	`gë_√xt_tokí
(
es
);

1058 
vÆ
 = 
	`f_sub
(vÆ, 
	`ex¥
(
es
));

1059 i‡(
evÆ_îr‹
)

1060  
îr_vÆue
;

1066  
vÆ
;

1067 
	}
}

1070 
evÆ_°©e_t
 *

1071 
	$evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

1072 *
u£r_±r
)

1074 
evÆ_°©e_t
 *
es
;

1076 
es
 = 
	`ˇŒoc
(1, (
evÆ_°©e_t
));

1077 i‡(!
es
)

1078 
	`Áèl
("out of virtual memory");

1080 
es
->
f_evÆ_idít
 = f_eval_ident;

1081 
es
->
u£r_±r
 = user_ptr;

1083  
es
;

1084 
	}
}

1088 
	$evÆ_dñëe
(
evÆ_°©e_t
 *
es
)

1090 
	`‰ì
(
es
);

1091 
	}
}

1095 
evÆ_vÆue_t


1096 
	$evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

1097 *
p
,

1098 **
ídp
)

1100 
evÆ_vÆue_t
 
vÆ
;

1103 
evÆ_îr‹
 = 
ERR_NOERR
;

1104 
es
->
p
 =Ö;

1105 *
es
->
tok_buf
 = '\0';

1106 
es
->
≥ek_tok
 = 
tok_övÆid
;

1109 
vÆ
 = 
	`ex¥
(
es
);

1112 i‡(
ídp
)

1114 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

1117 *
ídp
 = 
es
->
œ°p
;

1120 *
ídp
 = 
es
->
p
;

1123  
vÆ
;

1124 
	}
}

1128 
	$evÆ_¥öt
(
FILE
 *
°ªam
,

1129 
evÆ_vÆue_t
 
vÆ
)

1131 
vÆ
.
ty≥
)

1133 
ë_doubÀ
:

1134 
	`Ârötf
(
°ªam
, "%‡[doubÀ]", 
vÆ
.
vÆue
.
as_doubÀ
);

1136 
ë_Êﬂt
:

1137 
	`Ârötf
(
°ªam
, "%‡[Êﬂt]", ()
vÆ
.
vÆue
.
as_Êﬂt
);

1139 #ifde‡
HOST_HAS_QWORD


1140 
ë_qw‹d
:

1141 
	`myÂrötf
(
°ªam
, "%lu [qw‹d_t]", 
vÆ
.
vÆue
.
as_qw‹d
);

1143 
ë_sqw‹d
:

1144 
	`myÂrötf
(
°ªam
, "%ld [sqw‹d_t]", 
vÆ
.
vÆue
.
as_sqw‹d
);

1147 
ë_addr
:

1148 
	`myÂrötf
(
°ªam
, "0x%∞[md_addr_t]", 
vÆ
.
vÆue
.
as_addr
);

1150 
ë_uöt
:

1151 
	`Ârötf
(
°ªam
, "%u [uöt]", 
vÆ
.
vÆue
.
as_uöt
);

1153 
ë_öt
:

1154 
	`Ârötf
(
°ªam
, "%d [öt]", 
vÆ
.
vÆue
.
as_öt
);

1156 
ë_symbﬁ
:

1157 
	`Ârötf
(
°ªam
, "\"%s\" [symbﬁ]", 
vÆ
.
vÆue
.
as_symbﬁ
);

1160 
	`∑nic
("bogusÉxpressionÅype");

1162 
	}
}

1165 #ifde‡
TEST


1167 
evÆ_vÆue_t
 
	g™_öt
;

1168 
evÆ_vÆue_t
 
	ga_uöt
;

1169 
evÆ_vÆue_t
 
	ga_Êﬂt
;

1170 
evÆ_vÆue_t
 
	ga_doubÀ
;

1171 
evÆ_vÆue_t
 
	ga_symbﬁ
;

1173 
	ssym_m≠_t
 {

1174 *
	msymbﬁ
;

1175 
evÆ_vÆue_t
 *
	mvÆue
;

1178 
sym_m≠_t
 
	gsym_m≠
[] = {

1179 { "™_öt", &
™_öt
 },

1180 { "a_uöt", &
a_uöt
 },

1181 { "a_Êﬂt", &
a_Êﬂt
 },

1182 { "a_doubÀ", &
a_doubÀ
 },

1183 { "a_symbﬁ", &
a_symbﬁ
 },

1184 { 
NULL
, NULL },

1187 
evÆ_vÆue_t


1188 
	$my_evÆ_idít
(
evÆ_°©e_t
 *
es
)

1190 
sym_m≠_t
 *
sym
;

1192 
sym
=
sym_m≠
; sym->
symbﬁ
 !
NULL
; sym++)

1194 i‡(!
	`°rcmp
(
sym
->
symbﬁ
, 
es
->
tok_buf
))

1195  *
sym
->
vÆue
;

1198 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

1199  
îr_vÆue
;

1200 
	}
}

1203 
	$maö
()

1205 
evÆ_°©e_t
 *
es
;

1208 
™_öt
.
ty≥
 = 
ë_öt
;án_öt.
vÆue
.
as_öt
 = 1;

1209 
a_uöt
.
ty≥
 = 
ë_uöt
;á_uöt.
vÆue
.
as_uöt
 = 2;

1210 
a_Êﬂt
.
ty≥
 = 
ë_Êﬂt
;á_Êﬂt.
vÆue
.
as_Êﬂt
 = 3.0f;

1211 
a_doubÀ
.
ty≥
 = 
ë_doubÀ
;á_doubÀ.
vÆue
.
as_doubÀ
 = 4.0;

1212 
a_symbﬁ
.
ty≥
 = 
ë_symbﬁ
;á_symbﬁ.
vÆue
.
as_symbﬁ
 = "testing 1 2 3...";

1215 
es
 = 
	`evÆ_√w
(
my_evÆ_idít
, 
NULL
);

1219 
evÆ_vÆue_t
 
vÆ
;

1220 
ex¥_buf
[1024];

1222 
	`fgës
(
ex¥_buf
, 1024, 
°dö
);

1225 i‡(
ex¥_buf
[
	`°æí
(expr_buf)-1] == '\n')

1226 
ex¥_buf
[
	`°æí
(expr_buf)-1] = '\0';

1228 i‡(
ex¥_buf
[0] == '\0')

1229 
	`exô
(0);

1231 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
ex¥_buf
, 
NULL
);

1232 i‡(
evÆ_îr‹
)

1233 
	`Ârötf
(
°dout
, "evÆÉº‹: %s\n", 
evÆ_îr_°r
[
evÆ_îr‹
]);

1236 
	`Ârötf
(
°dout
, "%†=", 
ex¥_buf
);

1237 
	`evÆ_¥öt
(
°dout
, 
vÆ
);

1238 
	`Ârötf
(
°dout
, "\n");

1241 
	}
}

	@eval.h

52 #i‚de‡
EVAL_H


53 
	#EVAL_H


	)

55 
	~<°dio.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

61 
	gevÆ_°©e_t
;

62 
	gevÆ_vÆue_t
;

67 
	gevÆ_vÆue_t


68 (*
	tevÆ_idít_t
)(
	tevÆ_°©e_t
 *
	tes
);

71 
	eevÆ_tokí_t
 {

72 
	mtok_idít
,

73 
	mtok_c⁄°
,

74 
	mtok_∂us
,

75 
	mtok_möus
,

76 
	mtok_mu…
,

77 
	mtok_div
,

78 
	mtok_›¨í
,

79 
	mtok_˝¨í
,

80 
	mtok_eof
,

81 
	mtok_whôe•a˚
,

82 
	mtok_övÆid


86 
	sevÆ_°©e_t
 {

87 *
	mp
;

88 *
	mœ°p
;

89 
evÆ_idít_t
 
	mf_evÆ_idít
;

90 *
	mu£r_±r
;

91 
	mtok_buf
[512];

92 
evÆ_tokí_t
 
	m≥ek_tok
;

96 
	eevÆ_îr_t
 {

97 
	mERR_NOERR
,

98 
	mERR_UPAREN
,

99 
	mERR_NOTERM
,

100 
	mERR_DIV0
,

101 
	mERR_BADCONST
,

102 
	mERR_BADEXPR
,

103 
	mERR_UNDEFVAR
,

104 
	mERR_EXTRA
,

105 
	mERR_NUM


109 
evÆ_îr_t
 
evÆ_îr‹
 ;

112 *
evÆ_îr_°r
[
ERR_NUM
];

115 
	eevÆ_ty≥_t
 {

116 
	më_öt
,

117 
	më_uöt
,

118 
	më_addr
,

119 #ifde‡
HOST_HAS_QWORD


120 
	më_qw‹d
,

121 
	më_sqw‹d
,

123 
	më_Êﬂt
,

124 
	më_doubÀ
,

125 
	më_symbﬁ
,

126 
	më_NUM


130 #ifde‡
HOST_HAS_QWORD


131 
	#EVAL_INTEGRAL
(
TYPE
) \

132 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
 \

133 || (
TYPE
Ë=
ë_qw‹d
 || (TYPEË=
ë_sqw‹d
)

	)

135 
	#EVAL_INTEGRAL
(
TYPE
) \

136 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
)

	)

140 *
evÆ_ty≥_°r
[
ë_NUM
];

143 
	sevÆ_vÆue_t
 {

144 
evÆ_ty≥_t
 
	mty≥
;

146 
	mas_öt
;

147 
	mas_uöt
;

148 
md_addr_t
 
	mas_addr
;

149 #ifde‡
HOST_HAS_QWORD


150 
qw‹d_t
 
	mas_qw‹d
;

151 
sqw‹d_t
 
	mas_sqw‹d
;

153 
	mas_Êﬂt
;

154 
	mas_doubÀ
;

155 *
	mas_symbﬁ
;

156 } 
	mvÆue
;

164 
evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
);

167 
evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
);

169 #ifde‡
HOST_HAS_QWORD


171 
qw‹d_t
 
evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
);

174 
sqw‹d_t
 
evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
);

178 
md_addr_t
 
evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
);

181 
evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
);

184 
evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
);

187 
evÆ_°©e_t
 *

188 
evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

189 *
u£r_±r
);

193 
evÆ_dñëe
(
evÆ_°©e_t
 *
es
);

197 
evÆ_vÆue_t


198 
evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

199 *
p
,

200 **
ídp
);

204 
evÆ_¥öt
(
FILE
 *
°ªam
,

205 
evÆ_vÆue_t
 
vÆ
);

	@eventq.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evítq.h
"

60 
	gevítq_max_evíts
;

61 
	gevítq_evít_cou¡
;

62 
evítq_desc
 *
	gevítq_≥ndög
;

63 
evítq_desc
 *
	gevítq_‰ì
;

65 
EVENTQ_ID_TYPE
 
	g√xt_ID
 = 1;

68 
	$evítq_öô
(
max_evíts
)

70 
evítq_max_evíts
 = 
max_evíts
;

71 
evítq_evít_cou¡
 = 0;

72 
evítq_≥ndög
 = 
NULL
;

73 
evítq_‰ì
 = 
NULL
;

74 
	}
}

76 
	#__QUEUE_EVENT
(
WHEN
, 
ID
, 
ACTION
) \

77 
evítq_desc
 *
¥ev
, *
ev
, *
√w
; \

79 i‡(!
evítq_‰ì
) \

81 i‡(
evítq_max_evíts
 && 
evítq_evít_cou¡
 >=Éventq_max_events) \

82 
	`∑nic
("too manyÉvents"); \

83 
evítq_‰ì
 = 
	`ˇŒoc
(1, (
evítq_desc
)); \

85 
√w
 = 
evítq_‰ì
; \

86 
evítq_‰ì
 =Évítq_‰ì->
√xt
; \

88 
√w
->
whí
 = (
WHEN
); (
ID
Ë√w->
id
 = 
√xt_ID
++; 
ACTION
; \

90 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
; \

91 
ev
 &&Év->
whí
 < when; \

92 
¥ev
=
ev
,ÉvÛv->
√xt
); \

94 i‡(
¥ev
) \

97 
√w
->
√xt
 = 
¥ev
->next; \

98 
¥ev
->
√xt
 = 
√w
; \

103 
√w
->
√xt
 = 
evítq_≥ndög
; \

104 
evítq_≥ndög
 = 
√w
; \

105 }

	)

107 
EVENTQ_ID_TYPE


108 
	$evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

109 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

111 
EVENTQ_ID_TYPE
 
id
;

112 
	`__QUEUE_EVENT
(
whí
, 
id
, \

113 
√w
->
a˘i⁄
 = 
EvítSëBô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

114 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

115  
id
;

116 
	}
}

118 
EVENTQ_ID_TYPE


119 
	$evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
,

120 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

122 
EVENTQ_ID_TYPE
 
id
;

123 
	`__QUEUE_EVENT
(
whí
, 
id
, \

124 
√w
->
a˘i⁄
 = 
EvítCÀ¨Bô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

125 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

126  
id
;

127 
	}
}

129 
EVENTQ_ID_TYPE


130 
	$evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
, *
pÊag
, 
vÆue
)

132 
EVENTQ_ID_TYPE
 
id
;

133 
	`__QUEUE_EVENT
(
whí
, 
id
, \

134 
√w
->
a˘i⁄
 = 
EvítSëFœg
; \

135 
√w
->
d©a
.
Êag
.
pÊag
 =ÖÊag;Çew->d©a.Êag.
vÆue
 = value);

136  
id
;

137 
	}
}

139 
EVENTQ_ID_TYPE


140 
	$evítq_queue_add›
(
SS_TIME_TYPE
 
whí
, *
summ™d
, 
addíd
)

142 
EVENTQ_ID_TYPE
 
id
;

143 
	`__QUEUE_EVENT
(
whí
, 
id
, \

144 
√w
->
a˘i⁄
 = 
EvítAddOp
; \

145 
√w
->
d©a
.
add›
.
summ™d
 = summand; \

146 
√w
->
d©a
.
add›
.
addíd
 =áddend);

147  
id
;

148 
	}
}

150 
EVENTQ_ID_TYPE


151 
evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

152 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
), arg)

154 
EVENTQ_ID_TYPE
 
id
;

155 
	`__QUEUE_EVENT
(
whí
, 
id
, \

156 
√w
->
a˘i⁄
 = 
EvítCÆlback
;Çew->
d©a
.
ˇŒback
.
‚
 = fn;\

157 
√w
->
d©a
.
ˇŒback
.
¨g
 =árg);

158  
id
;

159 
	}
}

161 
	#EXECUTE_ACTION
(
ev
, 
now
) \

163 
ev
->
a˘i⁄
) { \

164 
EvítSëBô
: \

165 
	`BITMAP_SET
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

167 
EvítCÀ¨Bô
: \

168 
	`BITMAP_CLEAR
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

170 
EvítSëFœg
: \

171 *
ev
->
d©a
.
Êag
.
pÊag
 =Év->d©a.Êag.
vÆue
; \

173 
EvítAddOp
: \

174 *
ev
->
d©a
.
add›
.
summ™d
 +ev->d©a.add›.
addíd
; \

176 
EvítCÆlback
: \

177 (*
ev
->
d©a
.
ˇŒback
.
‚
)(
now
,Év->d©a.ˇŒback.
¨g
); \

180 
	`∑nic
("bogusÉventáction"); \

181 }

	)

186 
	$evítq_execuã
(
EVENTQ_ID_TYPE
 
id
)

188 
evítq_desc
 *
¥ev
, *
ev
;

190 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

192 i‡(
ev
->
id
 == id)

194 i‡(
¥ev
)

197 
¥ev
->
√xt
 = 
ev
->next;

202 
evítq_≥ndög
 = 
ev
->
√xt
;

206 
	`EXECUTE_ACTION
(
ev
, 0);

209 
ev
->
√xt
 = 
evítq_‰ì
;

210 
evítq_‰ì
 = 
ev
;

213  
TRUE
;

217  
FALSE
;

218 
	}
}

223 
	$evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
)

225 
evítq_desc
 *
¥ev
, *
ev
;

227 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

229 i‡(
ev
->
id
 == id)

231 i‡(
¥ev
)

234 
¥ev
->
√xt
 = 
ev
->next;

239 
evítq_≥ndög
 = 
ev
->
√xt
;

243 
ev
->
√xt
 = 
evítq_‰ì
;

244 
evítq_‰ì
 = 
ev
;

247  
TRUE
;

251  
FALSE
;

252 
	}
}

255 
	$evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
)

257 
evítq_≥ndög
 &&Évítq_≥ndög->
whí
 <
now
)

259 
evítq_desc
 *
ev
 = 
evítq_≥ndög
;

262 
	`EXECUTE_ACTION
(
ev
, 
now
);

265 
evítq_≥ndög
 = 
ev
->
√xt
;

266 
ev
->
√xt
 = 
evítq_‰ì
;

267 
evítq_‰ì
 = 
ev
;

269 
	}
}

272 
	$evítq_dump
(
FILE
 *
°ªam
)

274 
evítq_desc
 *
ev
;

276 i‡(!
°ªam
)

277 
°ªam
 = 
°dîr
;

279 
	`Ârötf
(
°ªam
, "Pending Events: ");

280 
ev
=
evítq_≥ndög
;Év;ÉvÛv->
√xt
)

282 
	`Ârötf
(
°ªam
, "@ %.0f:%s:",

283 ()
ev
->
whí
,

284 
ev
->
a˘i⁄
 =
EvítSëBô
 ? "set bit"

285 : 
ev
->
a˘i⁄
 =
EvítCÀ¨Bô
 ? "clear bit"

286 : 
ev
->
a˘i⁄
 =
EvítSëFœg
 ? "set flag"

287 : 
ev
->
a˘i⁄
 =
EvítAddOp
 ? "add operation"

288 : 
ev
->
a˘i⁄
 =
EvítCÆlback
 ? "call back"

289 : (
	`ab‹t
(), ""));

290 
ev
->
a˘i⁄
) {

291 
EvítSëBô
:

292 
EvítCÀ¨Bô
:

293 
	`Ârötf
(
°ªam
, "0x%p, %d, %d",

294 
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);

296 
EvítSëFœg
:

297 
	`Ârötf
(
°ªam
, "0x%p, %d", 
ev
->
d©a
.
Êag
.
pÊag
,Év->d©a.Êag.
vÆue
);

299 
EvítAddOp
:

300 
	`Ârötf
(
°ªam
, "0x%p, %d",

301 
ev
->
d©a
.
add›
.
summ™d
,Év->d©a.add›.
addíd
);

303 
EvítCÆlback
:

304 
	`Ârötf
(
°ªam
, "0x%p, %d",

305 
ev
->
d©a
.
ˇŒback
.
‚
,Év->d©a.ˇŒback.
¨g
);

308 
	`∑nic
("bogusÉventáction");

310 
	`Ârötf
(
°ªam
, " ");

312 
	}
}

	@eventq.h

52 #i‚de‡
EVENTQ_H


53 
	#EVENTQ_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"bôm≠.h
"

66 
	eevítq_a˘i⁄
 {

67 
	mEvítSëBô
,

68 
	mEvítCÀ¨Bô
,

69 
	mEvítSëFœg
,

70 
	mEvítAddOp
,

71 
	mEvítCÆlback
,

75 
	tEVENTQ_ID_TYPE
;

78 
	sevítq_desc
 {

79 
evítq_desc
 *
	m√xt
;

80 
SS_TIME_TYPE
 
	mwhí
;

81 
EVENTQ_ID_TYPE
 
	mid
;

82 
evítq_a˘i⁄
 
	ma˘i⁄
;

83 
	uevítq_d©a
 {

85 
BITMAP_ENT_TYPE
 *
	mbm≠
;

86 
	msz
;

87 
	mbônum
;

88 } 
	mbô
;

90 *
	mpÊag
;

91 
	mvÆue
;

92 } 
	mÊag
;

94 *
	msumm™d
;

95 
	maddíd
;

96 } 
	madd›
;

98 (*
	m‚
)(
SS_TIME_TYPE
 
	mtime
, 
	m¨g
);

99 
	m¨g
;

100 } 
	mˇŒback
;

101 } 
	md©a
;

106 
evítq_öô
(
max_evíts
);

110 
EVENTQ_ID_TYPE
 
evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

111 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
);

112 
EVENTQ_ID_TYPE
 
evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
, 
BITMAP_ENT_TYPE
 *
bm≠
,

113 
sz
, 
bônum
);

114 
EVENTQ_ID_TYPE
 
evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
,

115 *
pÊag
, 
vÆue
);

116 
EVENTQ_ID_TYPE
 
evítq_queue_add›
(
SS_TIME_TYPE
 
whí
,

117 *
summ™d
, 
addíd
);

118 
EVENTQ_ID_TYPE
 
evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

119 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
),

120 
¨g
);

124 
	`evítq_execuã
(
EVENTQ_ID_TYPE
 
id
);

128 
	`evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
);

131 
	`evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
);

133 
	`evítq_dump
(
FILE
 *
°ªam
);

	@host.h

52 #i‚de‡
HOST_H


53 
	#HOST_H


	)

56 #i‚de‡
__STDC__


57 #îr‹ 
The
 
Sim∂eSˇœr
 
simuœt‹s
 
mu°
 
be
 
compûed
 
wôh
 
™
 
ANSI
 
C
 
compûî
.

61 #unde‡
INLINE


62 #i‡
deföed
(
__GNUC__
)

63 
	#INLINE
 
ölöe


	)

65 
	#INLINE


	)

69 #ifde‡
__GNUC__


71 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

72 
	#ANSI_SYMCAT


	)

74 #ifde‡
OLD_SYMCAT


75 
	#SYMCAT
(
X
,
Y
ËX 
	)
Y

77 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

78 
	#ANSI_SYMCAT


	)

83 
	tboﬁ_t
;

84 
	tbyã_t
;

85 sig√d 
	tsbyã_t
;

86 
	thÆf_t
;

87 sig√d 
	tshÆf_t
;

88 
	tw‹d_t
;

89 sig√d 
	tsw‹d_t
;

90 
	tsÊﬂt_t
;

91 
	tdÊﬂt_t
;

94 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__SUNPRO_C
Ë|| deföed(
__CC_C89
Ë|| deföed(
__CC_XLC
)

95 
	#HOST_HAS_QWORD


	)

96 
	tqw‹d_t
;

97 sig√d 
	tsqw‹d_t
;

98 #ifde‡
ANSI_SYMCAT


99 
	#ULL
(
N
ËN##
ULL


	)

100 
	#LL
(
N
ËN##
LL


	)

102 
	#ULL
(
N
ËN 
ULL


	)

103 
	#LL
(
N
ËN 
LL


	)

105 #ñi‡
deföed
(
__Æpha
)

106 
	#HOST_HAS_QWORD


	)

107 
	tqw‹d_t
;

108 sig√d 
	tsqw‹d_t
;

109 #ifde‡
ANSI_SYMCAT


110 
	#ULL
(
N
ËN##
UL


	)

111 
	#LL
(
N
ËN##
L


	)

113 
	#ULL
(
N
ËN 
UL


	)

114 
	#LL
(
N
ËN 
L


	)

116 #ñi‡
deföed
(
_MSC_VER
)

117 
	#HOST_HAS_QWORD


	)

118 
	t__öt64
 
	tqw‹d_t
;

119 sig√d 
	t__öt64
 
	tsqw‹d_t
;

120 
	#ULL
(
N
Ë((
qw‹d_t
)(N))

	)

121 
	#LL
(
N
Ë((
sqw‹d_t
)(N))

	)

123 #unde‡
HOST_HAS_QWORD


127 #ifde‡
HOST_HAS_QWORD


128 
sqw‹d_t
 
	tcou¡î_t
;

129 
sqw‹d_t
 
	ttick_t
;

131 
dÊﬂt_t
 
	tcou¡î_t
;

132 
dÊﬂt_t
 
	ttick_t
;

135 #ifde‡
__svr4__


136 
	#£tjmp
 
_£tjmp


	)

137 
	#l⁄gjmp
 
_l⁄gjmp


	)

	@libexo/exo-test.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~"misc.h
"

55 
	~"›ti⁄s.h
"

56 
	~"libexo.h
"

59 
›t_odb_t
 *
	godb
;

62 
	ghñp_me
;

65 
	gmake_defs
;

68 *
	glﬂd_fûe
;

71 *
	gßve_fûe
;

74 
	g¥öt_db
;

77 
exo_ãrm_t
 *
	gexo_db
 = 
NULL
;

80 
	$ußge
(
FILE
 *
°ªam
, 
¨gc
, **
¨gv
)

82 
	`Ârötf
(
°ªam
, "Ußge: %†{-›ti⁄s}\n", 
¨gv
[0]);

83 
	`›t_¥öt_hñp
(
odb
, 
°ªam
);

84 
	}
}

87 
	$maö
(
¨gc
, **
¨gv
)

90 
odb
 = 
	`›t_√w
–
NULL
);

91 
	`›t_ªg_Êag
(
odb
, "-h", "print help message",

92 &
hñp_me
, 
FALSE
, FALSE, 
NULL
);

93 
	`›t_ªg_Êag
(
odb
, "-defs", "make internal defs",

94 &
make_defs
, 
FALSE
, 
TRUE
, 
NULL
);

95 
	`›t_ªg_°rög
(
odb
, "-load", "loadán EXO file",

96 &
lﬂd_fûe
, 
NULL
,

97  
TRUE
, 
NULL
);

98 
	`›t_ªg_°rög
(
odb
, "-save", "saveán EXO file",

99 &
ßve_fûe
, 
NULL
,

100  
TRUE
, 
NULL
);

101 
	`›t_ªg_Êag
(
odb
, "-print", "printÅhe EXO DBÅo stdout",

102 &
¥öt_db
, 
FALSE
,

103  
TRUE
, 
NULL
);

106 
	`›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
, 
¨gv
);

108 i‡(
hñp_me
)

111 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

112 
	`exô
(1);

116 
	`›t_¥öt_›ti⁄s
(
odb
, 
°dîr
, 
TRUE
, TRUE);

118 i‡(
lﬂd_fûe
)

120 
ZFILE
 *
exo_°ªam
;

121 
exo_ãrm_t
 *
exo
;

123 
exo_°ªam
 = 
	`myzf›í
(
lﬂd_fûe
, "r");

124 i‡(!
exo_°ªam
)

125 
	`Áèl
("couldÇŸ o≥¿EXO fûê`%s'", 
lﬂd_fûe
);

127 (
exo
 = 
	`exo_ªad
(
exo_°ªam
->
fd
)Ë!
NULL
)

128 
exo_db
 = 
	`exo_chaö
”xo_db, 
exo
);

130 
	`myzf˛o£
(
exo_°ªam
);

133 i‡(
make_defs
)

135 
exo_ãrm_t
 *
li°
, *
¨øy
, *
a
, *
b
, *
c
, *
d
, *
e
, *
f
, *
g
, *
h
, *
i
;

136 *
d©a
 = "This isáÅestÅo see if blobsÑeally work...";

137 *
d©a1
 = "This isáÅestÅo see if blobsÑeally work..."

145 
d©a2
[16] =

148 
exo_db
 =

149 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_°rög
, "** basicÅypesÅests **"));

150 
exo_db
 = 
	`exo_chaö
”xo_db, 
a
 = 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)42));

151 
exo_db
 = 
	`exo_chaö
(
b
 = 
	`exo_√w
(
ec_Êﬂt
, (
exo_Êﬂt_t
)42.0),Éxo_db);

152 
exo_db
 = 
	`exo_chaö
”xo_db, 
c
 = 
	`exo_√w
(
ec_ch¨
, ()'x'));

153 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\n'));

154 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\b'));

155 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\x02'));

156 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\xab'));

157 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "this isáÅest..."));

158 
exo_db
 =

159 
	`exo_chaö
(
exo_db
, 
d
 = 
	`exo_√w
(
ec_°rög
, "this is\naÅest...\n"));

160 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "aÅest... <<\\\b>>\n"));

162 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "** deep copyÅests **"));

163 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
d
));

164 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
c
));

165 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
b
));

166 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
a
));

168 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**ÜistÅests **"));

169 
exo_db
 =

170 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_li°
,

171 
	`exo_dìpc›y
(
d
),Éxo_dìpc›y(
c
),

172 
	`exo_dìpc›y
(
b
),Éxo_dìpc›y(
a
), 
NULL
));

173 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_li°
, 
NULL
));

174 
exo_db
 =

175 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_li°
,

176 
	`exo_√w
(
ec_li°
, 
NULL
),

177 
	`exo_√w
(
ec_li°
, 
NULL
),

178 
	`exo_√w
(
ec_li°
, 
	`exo_dìpc›y
(
a
), 
NULL
),

179 
NULL
));

180 
li°
 = 
	`exo_dìpc›y
(
a
);

181 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
b
));

182 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
a
));

183 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
b
));

184 
li°
 = 
	`exo_chaö
(
	`exo_dìpc›y
(
c
),Üist);

185 
exo_db
 = 
	`exo_chaö
”xo_db, 
e
 = 
	`exo_√w
(
ec_li°
, 
li°
, 
NULL
));

186 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_li°
,

187 
	`exo_dìpc›y
(
e
),

188 
	`exo_√w
(
ec_li°
, 
NULL
),

189 
	`exo_dìpc›y
(
e
),

190 
	`exo_dìpc›y
(
a
), 
NULL
));

192 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**árrayÅests **"));

193 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_¨øy
, 16, 
NULL
));

194 
f
 = 
¨øy
 = 
	`exo_√w
(
ec_¨øy
, 16, 
NULL
);

195 
	`EXO_ARR
(
¨øy
, 2Ë
	`exo_dìpc›y
(
e
);

196 
	`EXO_ARR
(
¨øy
, 3Ë
	`exo_dìpc›y
(
a
);

197 
	`EXO_ARR
(
¨øy
, 4Ë
	`exo_dìpc›y
(
c
);

198 
	`EXO_ARR
(
¨øy
, 6Ë
	`exo_dìpc›y
(EXO_ARR(array, 2));

199 
	`EXO_ARR
(
¨øy
, 7Ë
	`exo_dìpc›y
(EXO_ARR(array, 1));

200 
exo_db
 = 
	`exo_chaö
”xo_db, 
¨øy
);

201 
exo_db
 =

202 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_¨øy
, 4,

203 
	`exo_dìpc›y
(
a
),

204 
	`exo_dìpc›y
(
e
),

205 
	`exo_dìpc›y
(
c
),

206 
	`exo_dìpc›y
(
f
),

207 
NULL
));

209 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**ÅokenÅests **"));

210 
	#SYM1
 1

	)

211 
	#SYM2
 2

	)

212 
	`exo_öã∫_as
("sym1", 
SYM1
);

213 
	`exo_öã∫_as
("sym2", 
SYM2
);

214 
g
 = 
	`exo_√w
(
ec_tokí
, "sym1"),

215 
exo_db
 = 
	`exo_chaö
(exo_db,

216 
	`exo_√w
(
ec_li°
,

217 
g
,

218 
	`exo_√w
(
ec_öãgî
,

219 (
exo_öãgî_t
)

220 
g
->
as_tokí
.
ít
->
tokí
),

221 
NULL
));

222 
h
 = 
	`exo_√w
(
ec_tokí
, "sym2"),

223 
exo_db
 = 
	`exo_chaö
(exo_db,

224 
	`exo_√w
(
ec_li°
,

225 
h
,

226 
	`exo_√w
(
ec_öãgî
,

227 (
exo_öãgî_t
)

228 
h
->
as_tokí
.
ít
->
tokí
),

229 
NULL
));

230 
i
 = 
	`exo_√w
(
ec_tokí
, "sym3"),

231 
exo_db
 = 
	`exo_chaö
(exo_db,

232 
	`exo_√w
(
ec_li°
,

233 
i
,

234 
	`exo_√w
(
ec_öãgî
,

235 (
exo_öãgî_t
)

236 
i
->
as_tokí
.
ít
->
tokí
),

237 
NULL
));

240 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, 
	`°æí
(
d©a
), data));

241 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, 
	`°æí
(
d©a1
), data1));

242 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, (
d©a2
), data2));

245 i‡(
¥öt_db
)

247 
exo_ãrm_t
 *
exo
;

250 
	`Ârötf
(
°dout
, "\n/* EXO DB */\n\n");

251 
	`Ârötf
(
°dout
,

253 
EXO_FMT_MAJOR
, 
EXO_FMT_MINOR
);

256 
exo
=
exo_db
;Éxÿ!
NULL
;ÉxoÛxo->
√xt
)

258 
	`exo_¥öt
(
exo
, 
°dout
);

259 
	`Ârötf
(
°dout
, "\n\n");

263 i‡(
ßve_fûe
)

265 
ZFILE
 *
exo_°ªam
;

266 
exo_ãrm_t
 *
exo
;

268 
exo_°ªam
 = 
	`myzf›í
(
ßve_fûe
, "w");

269 i‡(!
exo_°ªam
)

270 
	`Áèl
("couldÇŸ o≥¿EXO fûê`%s'", 
ßve_fûe
);

273 
	`Ârötf
(
exo_°ªam
->
fd
,

275 
EXO_FMT_MAJOR
, 
EXO_FMT_MINOR
);

278 
exo
=
exo_db
;Éxÿ!
NULL
;ÉxoÛxo->
√xt
)

280 
	`exo_¥öt
(
exo
, 
exo_°ªam
->
fd
);

281 
	`Ârötf
(
exo_°ªam
->
fd
, "\n\n");

283 
	`myzf˛o£
(
exo_°ªam
);

285 
	}
}

	@libexo/exolex.c

7 
	#FLEX_SCANNER


	)

8 
	#YY_FLEX_MAJOR_VERSION
 2

	)

9 
	#YY_FLEX_MINOR_VERSION
 5

	)

11 
	~<°dio.h
>

12 
	~<uni°d.h
>

16 #ifde‡
c_∂u•lus


17 #i‚de‡
__˝lu•lus


18 
	#__˝lu•lus


	)

23 #ifde‡
__˝lu•lus


25 
	~<°dlib.h
>

28 
	#YY_USE_PROTOS


	)

31 
	#YY_USE_CONST


	)

35 #i‡
__STDC__


37 
	#YY_USE_PROTOS


	)

38 
	#YY_USE_CONST


	)

43 #ifde‡
__TURBOC__


44 #¥agm®
w¨n
 -
rch


45 #¥agm®
w¨n
 -
u£


46 
	~<io.h
>

47 
	~<°dlib.h
>

48 
	#YY_USE_CONST


	)

49 
	#YY_USE_PROTOS


	)

52 #ifde‡
YY_USE_CONST


53 
	#yyc⁄°
 c⁄°

	)

55 
	#yyc⁄°


	)

59 #ifde‡
YY_USE_PROTOS


60 
	#YY_PROTO
(
¥Ÿo
Ë
	)
proto

62 
	#YY_PROTO
(
¥Ÿo
Ë()

	)

66 
	#YY_NULL
 0

	)

73 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

79 
	#BEGIN
 
yy_°¨t
 = 1 + 2 *

	)

85 
	#YY_START
 ((
yy_°¨t
 - 1Ë/ 2)

	)

86 
	#YYSTATE
 
YY_START


	)

89 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

92 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

94 
	#YY_END_OF_BUFFER_CHAR
 0

	)

97 
	#YY_BUF_SIZE
 16384

	)

99 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

101 
yyÀng
;

102 
FILE
 *
yyö
, *
yyout
;

104 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

105 
	#EOB_ACT_END_OF_FILE
 1

	)

106 
	#EOB_ACT_LAST_MATCH
 2

	)

124 
	#yyÀss
(
n
) \

128 *
yy_˝
 = 
yy_hﬁd_ch¨
; \

129 
YY_RESTORE_YY_MORE_OFFSET
 \

130 
yy_c_buf_p
 = 
yy_˝
 = 
yy_bp
 + 
n
 - 
YY_MORE_ADJ
; \

131 
YY_DO_BEFORE_ACTION
; \

133  0 )

	)

135 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, 
yyãxt_±r
 )

	)

141 
	tyy_size_t
;

144 
	syy_buf„r_°©e


146 
FILE
 *
	myy_öput_fûe
;

148 *
	myy_ch_buf
;

149 *
	myy_buf_pos
;

154 
yy_size_t
 
	myy_buf_size
;

159 
	myy_n_ch¨s
;

165 
	myy_is_our_buf„r
;

172 
	myy_is_öãø˘ive
;

178 
	myy_©_bﬁ
;

183 
	myy_fûl_buf„r
;

185 
	myy_buf„r_°©us
;

186 
	#YY_BUFFER_NEW
 0

	)

187 
	#YY_BUFFER_NORMAL
 1

	)

198 
	#YY_BUFFER_EOF_PENDING
 2

	)

201 
YY_BUFFER_STATE
 
	gyy_cuºít_buf„r
 = 0;

207 
	#YY_CURRENT_BUFFER
 
yy_cuºít_buf„r


	)

211 
	gyy_hﬁd_ch¨
;

213 
	gyy_n_ch¨s
;

216 
	gyyÀng
;

219 *
	gyy_c_buf_p
 = (*) 0;

220 
	gyy_öô
 = 1;

221 
	gyy_°¨t
 = 0;

226 
	gyy_did_buf„r_swôch_⁄_eof
;

228 
yyª°¨t
 
YY_PROTO
(–
FILE
 *
öput_fûe
 ));

230 
yy_swôch_to_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
√w_buf„r
 ));

231 
yy_lﬂd_buf„r_°©e
 
YY_PROTO
(( ));

232 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 
YY_PROTO
(–
FILE
 *
fûe
, 
size
 ));

233 
yy_dñëe_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
 ));

234 
yy_öô_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 ));

235 
yy_Êush_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
 ));

236 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
yy_cuºít_buf„r
 )

	)

238 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 
YY_PROTO
(–*
ba£
, 
yy_size_t
 
size
 ));

239 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 
YY_PROTO
(–
yyc⁄°
 *
yy_°r
 ));

240 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 
YY_PROTO
(–
yyc⁄°
 *
byãs
, 
Àn
 ));

242 *
yy_Êex_Æloc
 
YY_PROTO
(–
yy_size_t
 ));

243 *
yy_Êex_ªÆloc
 
YY_PROTO
(–*, 
yy_size_t
 ));

244 
yy_Êex_‰ì
 
YY_PROTO
(( * ));

246 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

248 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

250 i‡–! 
yy_cuºít_buf„r
 ) \

251 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

252 
yy_cuºít_buf„r
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

253 }

	)

255 
	#yy_£t_bﬁ
(
©_bﬁ
) \

257 i‡–! 
yy_cuºít_buf„r
 ) \

258 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

259 
yy_cuºít_buf„r
->
yy_©_bﬁ
 = 
©_bﬁ
; \

260 }

	)

262 
	#YY_AT_BOL
(Ë(
yy_cuºít_buf„r
->
yy_©_bﬁ
)

	)

264 
	tYY_CHAR
;

265 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

266 
	tyy_°©e_ty≥
;

267 *
yyãxt
;

268 
	#yyãxt_±r
 
yyãxt


	)

270 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 
YY_PROTO
(( ));

271 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 
YY_PROTO
(–yy_°©e_ty≥ 
cuºít_°©e
 ));

272 
yy_gë_√xt_buf„r
 
YY_PROTO
(( ));

273 
yy_Áèl_îr‹
 
YY_PROTO
(–
yyc⁄°
 
msg
[] ));

278 
	#YY_DO_BEFORE_ACTION
 \

279 
yyãxt_±r
 = 
yy_bp
; \

280 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

281 
yy_hﬁd_ch¨
 = *
yy_˝
; \

282 *
yy_˝
 = '\0'; \

283 
yy_c_buf_p
 = 
yy_˝
;

	)

285 
	#YY_NUM_RULES
 25

	)

286 
	#YY_END_OF_BUFFER
 26

	)

287 
yyc⁄°
 
	gyy_ac˚±
[60] =

297 
yyc⁄°
 
	gyy_ec
[256] =

329 
yyc⁄°
 
	gyy_mëa
[37] =

337 
yyc⁄°
 
	gyy_ba£
[64] =

348 
yyc⁄°
 
	gyy_def
[64] =

359 
yyc⁄°
 
	gyy_nxt
[215] =

387 
yyc⁄°
 
	gyy_chk
[215] =

415 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

416 *
	gyy_œ°_ac˚±ög_˝os
;

421 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

422 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

423 
	#YY_MORE_ADJ
 0

	)

424 
	#YY_RESTORE_YY_MORE_OFFSET


	)

425 *
	gyyãxt
;

427 
	#INITIAL
 0

	)

479 
	~<°dio.h
>

480 
	~<°dlib.h
>

482 
	~"../ho°.h
"

483 
	~"../misc.h
"

484 
	~"libexo.h
"

487 #unde‡
YYLMAX


488 
	#YYLMAX
 (16*1024)

	)

491 
	#YY_NEVER_INTERACTIVE
 1

	)

493 
	glöe
 = 1;

495 
yywøp
();

496 
Àx_ót_commít
();

498 
	#BLOB_MODE
 1

	)

506 #i‚de‡
YY_SKIP_YYWRAP


507 #ifde‡
__˝lu•lus


508 "C" 
yywøp
 
YY_PROTO
(( ));

510 
yywøp
 
YY_PROTO
(( ));

514 #i‚de‡
YY_NO_UNPUT


515 
yyu≈ut
 
YY_PROTO
(–
c
, *
buf_±r
 ));

518 #i‚de‡
yyãxt_±r


519 
yy_Êex_°∫˝y
 
YY_PROTO
(–*, 
yyc⁄°
 *, ));

522 #ifde‡
YY_NEED_STRLEN


523 
yy_Êex_°æí
 
YY_PROTO
(–
yyc⁄°
 * ));

526 #i‚de‡
YY_NO_INPUT


527 #ifde‡
__˝lu•lus


528 
yyöput
 
YY_PROTO
(( ));

530 
öput
 
YY_PROTO
(( ));

534 #i‡
YY_STACK_USED


535 
	gyy_°¨t_°ack_±r
 = 0;

536 
	gyy_°¨t_°ack_dïth
 = 0;

537 *
	gyy_°¨t_°ack
 = 0;

538 #i‚de‡
YY_NO_PUSH_STATE


539 
yy_push_°©e
 
YY_PROTO
(–
√w_°©e
 ));

541 #i‚de‡
YY_NO_POP_STATE


542 
yy_p›_°©e
 
YY_PROTO
(( ));

544 #i‚de‡
YY_NO_TOP_STATE


545 
yy_t›_°©e
 
YY_PROTO
(( ));

549 
	#YY_NO_PUSH_STATE
 1

	)

550 
	#YY_NO_POP_STATE
 1

	)

551 
	#YY_NO_TOP_STATE
 1

	)

554 #ifde‡
YY_MALLOC_DECL


555 
	gYY_MALLOC_DECL


557 #i‡
__STDC__


558 #i‚de‡
__˝lu•lus


559 
	~<°dlib.h
>

570 #i‚de‡
YY_READ_BUF_SIZE


571 
	#YY_READ_BUF_SIZE
 8192

	)

576 #i‚de‡
ECHO


580 
	#ECHO
 (Ë
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )

	)

586 #i‚de‡
YY_INPUT


587 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

588 i‡–
yy_cuºít_buf„r
->
yy_is_öãø˘ive
 ) \

590 
c
 = '*', 
n
; \

591  
n
 = 0;Ç < 
max_size
 && \

592 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

593 
buf
[
n
] = (Ë
c
; \

594 i‡–
c
 == '\n' ) \

595 
buf
[
n
++] = (Ë
c
; \

596 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

597 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

598 
ªsu…
 = 
n
; \

600 i‡–((
ªsu…
 = 
	`‰ód
–
buf
, 1, 
max_size
, 
yyö
 )) == 0) \

601 && 
	`„º‹
–
yyö
 ) ) \

602 
	`YY_FATAL_ERROR
–"öpuàö fÀx sˇ¬î faûed" );

	)

609 #i‚de‡
yyãrmö©e


610 
	#yyãrmö©e
(Ë 
YY_NULL


	)

614 #i‚de‡
YY_START_STACK_INCR


615 
	#YY_START_STACK_INCR
 25

	)

619 #i‚de‡
YY_FATAL_ERROR


620 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

626 #i‚de‡
YY_DECL


627 
	#YY_DECL
 
yyÀx
 
	`YY_PROTO
(–))

	)

633 #i‚de‡
YY_USER_ACTION


634 
	#YY_USER_ACTION


	)

638 #i‚de‡
YY_BREAK


639 
	#YY_BREAK
 ;

	)

642 
	#YY_RULE_SETUP
 \

643 
YY_USER_ACTION


	)

645 
	gYY_DECL


647 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

648 *
	gyy_˝
 = 
NULL
, *
	gyy_bp
 = NULL;

649 
	gyy_a˘
;

656 i‡–
	gyy_öô
 )

658 
	gyy_öô
 = 0;

660 #ifde‡
YY_USER_INIT


661 
	gYY_USER_INIT
;

664 i‡–! 
	gyy_°¨t
 )

665 
	gyy_°¨t
 = 1;

667 i‡–! 
	gyyö
 )

668 
	gyyö
 = 
°dö
;

670 i‡–! 
	gyyout
 )

671 
	gyyout
 = 
°dout
;

673 i‡–! 
	gyy_cuºít_buf„r
 )

674 
	gyy_cuºít_buf„r
 =

675 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

677 
yy_lﬂd_buf„r_°©e
();

682 
	gyy_˝
 = 
yy_c_buf_p
;

685 *
	gyy_˝
 = 
yy_hﬁd_ch¨
;

690 
	gyy_bp
 = 
yy_˝
;

692 
	gyy_cuºít_°©e
 = 
yy_°¨t
;

693 
	gyy_m©ch
:

696 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

697 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

699 
	gyy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

700 
	gyy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

702  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

704 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

705 i‡–
	gyy_cuºít_°©e
 >= 60 )

706 
yy_c
 = 
yy_mëa
[() yy_c];

708 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

709 ++
	gyy_˝
;

711  
	gyy_ba£
[
yy_cuºít_°©e
] != 178 );

713 
	gyy_föd_a˘i⁄
:

714 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

715 i‡–
	gyy_a˘
 == 0 )

717 
yy_˝
 = 
yy_œ°_ac˚±ög_˝os
;

718 
	gyy_cuºít_°©e
 = 
yy_œ°_ac˚±ög_°©e
;

719 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

722 
	gYY_DO_BEFORE_ACTION
;

725 
	gdo_a˘i⁄
:

728  
yy_a˘
 )

732 *
yy_˝
 = 
yy_hﬁd_ch¨
;

733 
	gyy_˝
 = 
yy_œ°_ac˚±ög_˝os
;

734 
	gyy_cuºít_°©e
 = 
yy_œ°_ac˚±ög_°©e
;

735 
	gyy_föd_a˘i⁄
;

738 
YY_RULE_SETUP


740 {  
Àx_byã
; }

741 
YY_BREAK


743 
YY_RULE_SETUP


745 { 
Àx_ót_commít
(); }

746 
YY_BREAK


748 
YY_RULE_SETUP


750 {  
Àx_addªss
; }

751 
YY_BREAK


753 
YY_RULE_SETUP


755 {  
Àx_öãgî
; }

756 
YY_BREAK


758 
YY_RULE_SETUP


760 {  
Àx_öãgî
; }

761 
YY_BREAK


763 
YY_RULE_SETUP


765 {  
Àx_Êﬂt
; }

766 
YY_BREAK


768 
YY_RULE_SETUP


770 {  
Àx_Êﬂt
; }

771 
YY_BREAK


773 
YY_RULE_SETUP


775 {  
Àx_Êﬂt
; }

776 
YY_BREAK


778 
YY_RULE_SETUP


780 {  
Àx_ch¨
; }

781 
YY_BREAK


783 
YY_RULE_SETUP


785  {  
Àx_°rög
; }

786 
YY_BREAK


788 
YY_RULE_SETUP


790 {  
Àx_tokí
; }

791 
YY_BREAK


793 
YY_RULE_SETUP


795 {  
Àx_tokí
; }

796 
YY_BREAK


798 
YY_RULE_SETUP


801 
YY_BREAK


803 
YY_RULE_SETUP


806 
YY_BREAK


808 
YY_RULE_SETUP


811 
YY_BREAK


813 
YY_RULE_SETUP


816 
YY_BREAK


818 
YY_RULE_SETUP


821 
YY_BREAK


823 
YY_RULE_SETUP


826 
YY_BREAK


828 
YY_RULE_SETUP


831 
YY_BREAK


833 
YY_RULE_SETUP


835 { 
BEGIN
(
BLOB_MODE
);  '<'; }

836 
YY_BREAK


838 
YY_RULE_SETUP


840 { 
BEGIN
(
INITIAL
);  '>'; }

841 
YY_BREAK


843 
YY_RULE_SETUP


846 
YY_BREAK


848 
YY_RULE_SETUP


850 { 
löe
++; }

851 
YY_BREAK


852 
YY_STATE_EOF
(
INITIAL
):

853 
YY_STATE_EOF
(
BLOB_MODE
):

855 {  
Àx_eof
; }

856 
YY_BREAK


858 
YY_RULE_SETUP


861 
Áèl
("bogus character in input"); }

862 
YY_BREAK


864 
YY_RULE_SETUP


866 
ECHO
;

867 
	gYY_BREAK


870 
	gYY_END_OF_BUFFER
:

873 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - 
yyãxt_±r
) - 1;

876 *
	gyy_˝
 = 
yy_hﬁd_ch¨
;

877 
YY_RESTORE_YY_MORE_OFFSET


879 i‡–
	gyy_cuºít_buf„r
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

890 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->yy_n_chars;

891 
	gyy_cuºít_buf„r
->
	gyy_öput_fûe
 = 
yyö
;

892 
	gyy_cuºít_buf„r
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

902 i‡–
	gyy_c_buf_p
 <&
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] )

904 
yy_°©e_ty≥
 
yy_√xt_°©e
;

906 
	gyy_c_buf_p
 = 
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

908 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

919 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

921 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

923 i‡–
	gyy_√xt_°©e
 )

926 
	gyy_˝
 = ++
yy_c_buf_p
;

927 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

928 
	gyy_m©ch
;

933 
	gyy_˝
 = 
yy_c_buf_p
;

934 
	gyy_föd_a˘i⁄
;

938  
yy_gë_√xt_buf„r
() )

940 
	gEOB_ACT_END_OF_FILE
:

942 
yy_did_buf„r_swôch_⁄_eof
 = 0;

944 i‡–
yywøp
() )

955 
	gyy_c_buf_p
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

957 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

958 
	gdo_a˘i⁄
;

963 i‡–! 
	gyy_did_buf„r_swôch_⁄_eof
 )

964 
	gYY_NEW_FILE
;

969 
	gEOB_ACT_CONTINUE_SCAN
:

970 
yy_c_buf_p
 =

971 
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

973 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

975 
	gyy_˝
 = 
yy_c_buf_p
;

976 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

977 
	gyy_m©ch
;

979 
	gEOB_ACT_LAST_MATCH
:

980 
yy_c_buf_p
 =

981 &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
];

983 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

985 
	gyy_˝
 = 
yy_c_buf_p
;

986 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

987 
	gyy_föd_a˘i⁄
;

993 
YY_FATAL_ERROR
(

1008 
	$yy_gë_√xt_buf„r
()

1010 *
de°
 = 
yy_cuºít_buf„r
->
yy_ch_buf
;

1011 *
sour˚
 = 
yyãxt_±r
;

1012 
numbî_to_move
, 
i
;

1013 
ªt_vÆ
;

1015 i‡–
yy_c_buf_p
 > &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
 + 1] )

1016 
	`YY_FATAL_ERROR
(

1019 i‡–
yy_cuºít_buf„r
->
yy_fûl_buf„r
 == 0 )

1021 i‡–
yy_c_buf_p
 - 
yyãxt_±r
 - 
YY_MORE_ADJ
 == 1 )

1026  
EOB_ACT_END_OF_FILE
;

1034  
EOB_ACT_LAST_MATCH
;

1041 
numbî_to_move
 = (Ë(
yy_c_buf_p
 - 
yyãxt_±r
) - 1;

1043  
i
 = 0; i < 
numbî_to_move
; ++i )

1044 *(
de°
++Ë*(
sour˚
++);

1046 i‡–
yy_cuºít_buf„r
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1050 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars = 0;

1054 
num_to_ªad
 =

1055 
yy_cuºít_buf„r
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1057  
num_to_ªad
 <= 0 )

1059 #ifde‡
YY_USES_REJECT


1060 
	`YY_FATAL_ERROR
(

1065 
YY_BUFFER_STATE
 
b
 = 
yy_cuºít_buf„r
;

1067 
yy_c_buf_p_off£t
 =

1068 (Ë(
yy_c_buf_p
 - 
b
->
yy_ch_buf
);

1070 i‡–
b
->
yy_is_our_buf„r
 )

1072 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1074 i‡–
√w_size
 <= 0 )

1075 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1077 
b
->
yy_buf_size
 *= 2;

1079 
b
->
yy_ch_buf
 = (*)

1081 
	`yy_Êex_ªÆloc
–(*Ë
b
->
yy_ch_buf
,

1082 
b
->
yy_buf_size
 + 2 );

1086 
b
->
yy_ch_buf
 = 0;

1088 i‡–! 
b
->
yy_ch_buf
 )

1089 
	`YY_FATAL_ERROR
(

1092 
yy_c_buf_p
 = &
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1094 
num_to_ªad
 = 
yy_cuºít_buf„r
->
yy_buf_size
 -

1095 
numbî_to_move
 - 1;

1099 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1100 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1103 
	`YY_INPUT
–(&
yy_cuºít_buf„r
->
yy_ch_buf
[
numbî_to_move
]),

1104 
yy_n_ch¨s
, 
num_to_ªad
 );

1106 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars;

1109 i‡–
yy_n_ch¨s
 == 0 )

1111 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1113 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1114 
	`yyª°¨t
–
yyö
 );

1119 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1120 
yy_cuºít_buf„r
->
yy_buf„r_°©us
 =

1121 
YY_BUFFER_EOF_PENDING
;

1126 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1128 
yy_n_ch¨s
 +
numbî_to_move
;

1129 
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] = 
YY_END_OF_BUFFER_CHAR
;

1130 
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
 + 1] = 
YY_END_OF_BUFFER_CHAR
;

1132 
yyãxt_±r
 = &
yy_cuºít_buf„r
->
yy_ch_buf
[0];

1134  
ªt_vÆ
;

1135 
	}
}

1140 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
()

1142 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1143 *
yy_˝
;

1145 
yy_cuºít_°©e
 = 
yy_°¨t
;

1147  
yy_˝
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
; yy_˝ < 
yy_c_buf_p
; ++yy_cp )

1149 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1150 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1152 
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1153 
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1155  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1157 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1158 i‡–
yy_cuºít_°©e
 >= 60 )

1159 
yy_c
 = 
yy_mëa
[() yy_c];

1161 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1164  
yy_cuºít_°©e
;

1165 
	}
}

1174 #ifde‡
YY_USE_PROTOS


1175 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
–
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1177 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
–
yy_cuºít_°©e
 )

1178 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1181 
yy_is_jam
;

1182 *
yy_˝
 = 
yy_c_buf_p
;

1184 
YY_CHAR
 
yy_c
 = 1;

1185 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1187 
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1188 
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1190  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1192 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1193 i‡–
yy_cuºít_°©e
 >= 60 )

1194 
yy_c
 = 
yy_mëa
[() yy_c];

1196 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1197 
yy_is_jam
 = (
yy_cuºít_°©e
 == 59);

1199  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1200 
	}
}

1203 #i‚de‡
YY_NO_UNPUT


1204 #ifde‡
YY_USE_PROTOS


1205 
	$yyu≈ut
–
c
, *
yy_bp
 )

1207 
	$yyu≈ut
–
c
, 
yy_bp
 )

1208 
c
;

1209 *
yy_bp
;

1212 *
yy_˝
 = 
yy_c_buf_p
;

1215 *
yy_˝
 = 
yy_hﬁd_ch¨
;

1217 i‡–
yy_˝
 < 
yy_cuºít_buf„r
->
yy_ch_buf
 + 2 )

1220 
numbî_to_move
 = 
yy_n_ch¨s
 + 2;

1221 *
de°
 = &
yy_cuºít_buf„r
->
yy_ch_buf
[

1222 
yy_cuºít_buf„r
->
yy_buf_size
 + 2];

1223 *
sour˚
 =

1224 &
yy_cuºít_buf„r
->
yy_ch_buf
[
numbî_to_move
];

1226  
sour˚
 > 
yy_cuºít_buf„r
->
yy_ch_buf
 )

1227 *--
de°
 = *--
sour˚
;

1229 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1230 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1231 
yy_cuºít_buf„r
->
yy_n_ch¨s
 =

1232 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->
yy_buf_size
;

1234 i‡–
yy_˝
 < 
yy_cuºít_buf„r
->
yy_ch_buf
 + 2 )

1235 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1238 *--
yy_˝
 = (Ë
c
;

1241 
yyãxt_±r
 = 
yy_bp
;

1242 
yy_hﬁd_ch¨
 = *
yy_˝
;

1243 
yy_c_buf_p
 = 
yy_˝
;

1244 
	}
}

1248 #i‚de‡
YY_NO_INPUT


1249 #ifde‡
__˝lu•lus


1250 
	$yyöput
()

1252 
	$öput
()

1255 
c
;

1257 *
yy_c_buf_p
 = 
yy_hﬁd_ch¨
;

1259 i‡–*
yy_c_buf_p
 =
YY_END_OF_BUFFER_CHAR
 )

1265 i‡–
yy_c_buf_p
 < &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] )

1267 *
yy_c_buf_p
 = '\0';

1271 
off£t
 = 
yy_c_buf_p
 - 
yyãxt_±r
;

1272 ++
yy_c_buf_p
;

1274  
	`yy_gë_√xt_buf„r
() )

1276 
EOB_ACT_LAST_MATCH
:

1288 
	`yyª°¨t
–
yyö
 );

1292 
EOB_ACT_END_OF_FILE
:

1294 i‡–
	`yywøp
() )

1295  
EOF
;

1297 i‡–! 
yy_did_buf„r_swôch_⁄_eof
 )

1298 
YY_NEW_FILE
;

1299 #ifde‡
__˝lu•lus


1300  
	`yyöput
();

1302  
	`öput
();

1306 
EOB_ACT_CONTINUE_SCAN
:

1307 
yy_c_buf_p
 = 
yyãxt_±r
 + 
off£t
;

1313 
c
 = *(*Ë
yy_c_buf_p
;

1314 *
yy_c_buf_p
 = '\0';

1315 
yy_hﬁd_ch¨
 = *++
yy_c_buf_p
;

1318  
c
;

1319 
	}
}

1322 #ifde‡
YY_USE_PROTOS


1323 
	$yyª°¨t
–
FILE
 *
öput_fûe
 )

1325 
	$yyª°¨t
–
öput_fûe
 )

1326 
FILE
 *
öput_fûe
;

1329 i‡–! 
yy_cuºít_buf„r
 )

1330 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

1332 
	`yy_öô_buf„r
–
yy_cuºít_buf„r
, 
öput_fûe
 );

1333 
	`yy_lﬂd_buf„r_°©e
();

1334 
	}
}

1337 #ifde‡
YY_USE_PROTOS


1338 
	$yy_swôch_to_buf„r
–
YY_BUFFER_STATE
 
√w_buf„r
 )

1340 
	$yy_swôch_to_buf„r
–
√w_buf„r
 )

1341 
YY_BUFFER_STATE
 
√w_buf„r
;

1344 i‡–
yy_cuºít_buf„r
 =
√w_buf„r
 )

1347 i‡–
yy_cuºít_buf„r
 )

1350 *
yy_c_buf_p
 = 
yy_hﬁd_ch¨
;

1351 
yy_cuºít_buf„r
->
yy_buf_pos
 = 
yy_c_buf_p
;

1352 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars;

1355 
yy_cuºít_buf„r
 = 
√w_buf„r
;

1356 
	`yy_lﬂd_buf„r_°©e
();

1363 
yy_did_buf„r_swôch_⁄_eof
 = 1;

1364 
	}
}

1367 #ifde‡
YY_USE_PROTOS


1368 
	$yy_lﬂd_buf„r_°©e
( )

1370 
	$yy_lﬂd_buf„r_°©e
()

1373 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->yy_n_chars;

1374 
yyãxt_±r
 = 
yy_c_buf_p
 = 
yy_cuºít_buf„r
->
yy_buf_pos
;

1375 
yyö
 = 
yy_cuºít_buf„r
->
yy_öput_fûe
;

1376 
yy_hﬁd_ch¨
 = *
yy_c_buf_p
;

1377 
	}
}

1380 #ifde‡
YY_USE_PROTOS


1381 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
–
FILE
 *
fûe
, 
size
 )

1383 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
–
fûe
, 
size
 )

1384 
FILE
 *
fûe
;

1385 
size
;

1388 
YY_BUFFER_STATE
 
b
;

1390 
b
 = (
YY_BUFFER_STATE
Ë
	`yy_Êex_Æloc
––
yy_buf„r_°©e
 ) );

1391 i‡–! 
b
 )

1392 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1394 
b
->
yy_buf_size
 = 
size
;

1399 
b
->
yy_ch_buf
 = (*Ë
	`yy_Êex_Æloc
–b->
yy_buf_size
 + 2 );

1400 i‡–! 
b
->
yy_ch_buf
 )

1401 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1403 
b
->
yy_is_our_buf„r
 = 1;

1405 
	`yy_öô_buf„r
–
b
, 
fûe
 );

1407  
b
;

1408 
	}
}

1411 #ifde‡
YY_USE_PROTOS


1412 
	$yy_dñëe_buf„r
–
YY_BUFFER_STATE
 
b
 )

1414 
	$yy_dñëe_buf„r
–
b
 )

1415 
YY_BUFFER_STATE
 
b
;

1418 i‡–! 
b
 )

1421 i‡–
b
 =
yy_cuºít_buf„r
 )

1422 
yy_cuºít_buf„r
 = (
YY_BUFFER_STATE
) 0;

1424 i‡–
b
->
yy_is_our_buf„r
 )

1425 
	`yy_Êex_‰ì
–(*Ë
b
->
yy_ch_buf
 );

1427 
	`yy_Êex_‰ì
–(*Ë
b
 );

1428 
	}
}

1432 #ifde‡
YY_USE_PROTOS


1433 
	$yy_öô_buf„r
–
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 )

1435 
	$yy_öô_buf„r
–
b
, 
fûe
 )

1436 
YY_BUFFER_STATE
 
b
;

1437 
FILE
 *
fûe
;

1442 
	`yy_Êush_buf„r
–
b
 );

1444 
b
->
yy_öput_fûe
 = 
fûe
;

1445 
b
->
yy_fûl_buf„r
 = 1;

1447 #i‡
YY_ALWAYS_INTERACTIVE


1448 
b
->
yy_is_öãø˘ive
 = 1;

1450 #i‡
YY_NEVER_INTERACTIVE


1451 
b
->
yy_is_öãø˘ive
 = 0;

1453 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1456 
	}
}

1459 #ifde‡
YY_USE_PROTOS


1460 
	$yy_Êush_buf„r
–
YY_BUFFER_STATE
 
b
 )

1462 
	$yy_Êush_buf„r
–
b
 )

1463 
YY_BUFFER_STATE
 
b
;

1467 i‡–! 
b
 )

1470 
b
->
yy_n_ch¨s
 = 0;

1476 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1477 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1479 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1481 
b
->
yy_©_bﬁ
 = 1;

1482 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1484 i‡–
b
 =
yy_cuºít_buf„r
 )

1485 
	`yy_lﬂd_buf„r_°©e
();

1486 
	}
}

1489 #i‚de‡
YY_NO_SCAN_BUFFER


1490 #ifde‡
YY_USE_PROTOS


1491 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
–*
ba£
, 
yy_size_t
 
size
 )

1493 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
–
ba£
, 
size
 )

1494 *
ba£
;

1495 
yy_size_t
 
size
;

1498 
YY_BUFFER_STATE
 
b
;

1500 i‡–
size
 < 2 ||

1501 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1502 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1506 
b
 = (
YY_BUFFER_STATE
Ë
	`yy_Êex_Æloc
––
yy_buf„r_°©e
 ) );

1507 i‡–! 
b
 )

1508 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1510 
b
->
yy_buf_size
 = 
size
 - 2;

1511 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1512 
b
->
yy_is_our_buf„r
 = 0;

1513 
b
->
yy_öput_fûe
 = 0;

1514 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1515 
b
->
yy_is_öãø˘ive
 = 0;

1516 
b
->
yy_©_bﬁ
 = 1;

1517 
b
->
yy_fûl_buf„r
 = 0;

1518 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1520 
	`yy_swôch_to_buf„r
–
b
 );

1522  
b
;

1523 
	}
}

1527 #i‚de‡
YY_NO_SCAN_STRING


1528 #ifde‡
YY_USE_PROTOS


1529 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
–
yyc⁄°
 *
yy_°r
 )

1531 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
–
yy_°r
 )

1532 
yyc⁄°
 *
yy_°r
;

1535 
Àn
;

1536  
Àn
 = 0; 
yy_°r
[len]; ++len )

1539  
	`yy_sˇn_byãs
–
yy_°r
, 
Àn
 );

1540 
	}
}

1544 #i‚de‡
YY_NO_SCAN_BYTES


1545 #ifde‡
YY_USE_PROTOS


1546 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
–
yyc⁄°
 *
byãs
, 
Àn
 )

1548 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
–
byãs
, 
Àn
 )

1549 
yyc⁄°
 *
byãs
;

1550 
Àn
;

1553 
YY_BUFFER_STATE
 
b
;

1554 *
buf
;

1555 
yy_size_t
 
n
;

1556 
i
;

1559 
n
 = 
Àn
 + 2;

1560 
buf
 = (*Ë
	`yy_Êex_Æloc
–
n
 );

1561 i‡–! 
buf
 )

1562 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

1564  
i
 = 0; i < 
Àn
; ++i )

1565 
buf
[
i
] = 
byãs
[i];

1567 
buf
[
Àn
] = buf[Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1569 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

1570 i‡–! 
b
 )

1571 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

1576 
b
->
yy_is_our_buf„r
 = 1;

1578  
b
;

1579 
	}
}

1583 #i‚de‡
YY_NO_PUSH_STATE


1584 #ifde‡
YY_USE_PROTOS


1585 
	$yy_push_°©e
–
√w_°©e
 )

1587 
	$yy_push_°©e
–
√w_°©e
 )

1588 
√w_°©e
;

1591 i‡–
yy_°¨t_°ack_±r
 >
yy_°¨t_°ack_dïth
 )

1593 
yy_size_t
 
√w_size
;

1595 
yy_°¨t_°ack_dïth
 +
YY_START_STACK_INCR
;

1596 
√w_size
 = 
yy_°¨t_°ack_dïth
 * ( );

1598 i‡–! 
yy_°¨t_°ack
 )

1599 
yy_°¨t_°ack
 = (*Ë
	`yy_Êex_Æloc
–
√w_size
 );

1602 
yy_°¨t_°ack
 = (*Ë
	`yy_Êex_ªÆloc
(

1603 (*Ë
yy_°¨t_°ack
, 
√w_size
 );

1605 i‡–! 
yy_°¨t_°ack
 )

1606 
	`YY_FATAL_ERROR
(

1610 
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
++] = 
YY_START
;

1612 
	`BEGIN
(
√w_°©e
);

1613 
	}
}

1617 #i‚de‡
YY_NO_POP_STATE


1618 
	$yy_p›_°©e
()

1620 i‡–--
yy_°¨t_°ack_±r
 < 0 )

1621 
	`YY_FATAL_ERROR
( "start-condition stack underflow" );

1623 
	`BEGIN
(
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
]);

1624 
	}
}

1628 #i‚de‡
YY_NO_TOP_STATE


1629 
	$yy_t›_°©e
()

1631  
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
 - 1];

1632 
	}
}

1635 #i‚de‡
YY_EXIT_FAILURE


1636 
	#YY_EXIT_FAILURE
 2

	)

1639 #ifde‡
YY_USE_PROTOS


1640 
	$yy_Áèl_îr‹
–
yyc⁄°
 
msg
[] )

1642 
	$yy_Áèl_îr‹
–
msg
 )

1643 
msg
[];

1646 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1647 
	`exô
–
YY_EXIT_FAILURE
 );

1648 
	}
}

1654 #unde‡
yyÀss


1655 
	#yyÀss
(
n
) \

1659 
yyãxt
[
yyÀng
] = 
yy_hﬁd_ch¨
; \

1660 
yy_c_buf_p
 = 
yyãxt
 + 
n
; \

1661 
yy_hﬁd_ch¨
 = *
yy_c_buf_p
; \

1662 *
yy_c_buf_p
 = '\0'; \

1663 
yyÀng
 = 
n
; \

1665  0 )

	)

1670 #i‚de‡
yyãxt_±r


1671 #ifde‡
YY_USE_PROTOS


1672 
	$yy_Êex_°∫˝y
–*
s1
, 
yyc⁄°
 *
s2
, 
n
 )

1674 
	$yy_Êex_°∫˝y
–
s1
, 
s2
, 
n
 )

1675 *
s1
;

1676 
yyc⁄°
 *
s2
;

1677 
n
;

1680 
i
;

1681  
i
 = 0; i < 
n
; ++i )

1682 
s1
[
i
] = 
s2
[i];

1683 
	}
}

1686 #ifde‡
YY_NEED_STRLEN


1687 #ifde‡
YY_USE_PROTOS


1688 
	$yy_Êex_°æí
–
yyc⁄°
 *
s
 )

1690 
	$yy_Êex_°æí
–
s
 )

1691 
yyc⁄°
 *
s
;

1694 
n
;

1695  
n
 = 0; 
s
[n]; ++n )

1698  
n
;

1699 
	}
}

1703 #ifde‡
YY_USE_PROTOS


1704 *
	$yy_Êex_Æloc
–
yy_size_t
 
size
 )

1706 *
	$yy_Êex_Æloc
–
size
 )

1707 
yy_size_t
 
size
;

1710  (*Ë
	`mÆloc
–
size
 );

1711 
	}
}

1713 #ifde‡
YY_USE_PROTOS


1714 *
	$yy_Êex_ªÆloc
–*
±r
, 
yy_size_t
 
size
 )

1716 *
	$yy_Êex_ªÆloc
–
±r
, 
size
 )

1717 *
±r
;

1718 
yy_size_t
 
size
;

1728  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

1729 
	}
}

1731 #ifde‡
YY_USE_PROTOS


1732 
	$yy_Êex_‰ì
–*
±r
 )

1734 
	$yy_Êex_‰ì
–
±r
 )

1735 *
±r
;

1738 
	`‰ì
–
±r
 );

1739 
	}
}

1741 #i‡
YY_MAIN


1742 
	$maö
()

1744 
	`yyÀx
();

1746 
	}
}

1752 
	$yywøp
()

1755 
	}
}

1758 
	$Àx_ót_commít
()

1760 
c
, 
c1
;

1762 
lo›
:

1763 (
c
 = 
	`öput
()) != '*' && c != 0)

1765 i‡(
c
 == '\n')

1766 
löe
++;

1769 i‡((
c1
 = 
	`öput
()) != '/' && c1 != 0)

1771 
	`u≈ut
(
c1
);

1772 
lo›
;

1774 
	}
}

1777 
	$yy_√xtch¨
()

1779 
c
;

1782 
c
 = 
	`öput
();

1783 } 
c
 == ' ' || c == '\t' || c == '\v' || c == '\f' || c == '\n');

1784 
	`u≈ut
(
c
);

1786  
c
;

1787 
	}
}

1792 
	$yy_£t°ªam
(
FILE
 *
°ªam
)

1794 
i
;

1795 
	#MAX_STREAMS
 16

	)

1797 
FILE
 *
°ªam
;

1798 
YY_BUFFER_STATE
 
buf„r
;

1799 } 
°ªams
[
MAX_STREAMS
] = { {
NULL
, NULL}, };

1800 
num_°ªams
 = 0;

1801 
FILE
 *
œ°_°ªam
 = 
NULL
;

1804 i‡(
°ªam
 =
œ°_°ªam
)

1808 
i
=0; i < 
num_°ªams
; i++)

1810 i‡(
°ªams
[
i
].
°ªam
 == stream)

1812 
	`yy_swôch_to_buf„r
(
°ªams
[
i
].
buf„r
);

1818 i‡(
num_°ªams
 =
MAX_STREAMS
)

1819 
	`Áèl
("out ofÜex buffer streams, increase MAX_STREAMS");

1821 
°ªams
[
num_°ªams
].
°ªam
 = stream;

1822 
°ªams
[
num_°ªams
].
buf„r
 = 
	`yy_¸óã_buf„r
(
°ªam
, 
YY_BUF_SIZE
);

1823 
	`yy_swôch_to_buf„r
(
°ªams
[
num_°ªams
].
buf„r
);

1824 
num_°ªams
++;

1825 
	}
}

	@libexo/exolex.l

55 
	~<°dio.h
>

56 
	~<°dlib.h
>

58 
	~"../ho°.h
"

59 
	~"../misc.h
"

60 
	~"libexo.h
"

63 #unde‡
YYLMAX


64 
	#YYLMAX
 (16*1024)

	)

67 
	#YY_NEVER_INTERACTIVE
 1

	)

69 
	glöe
 = 1;

71 
yywøp
();

72 
Àx_ót_commít
();

76 %
s
 
BLOB_MODE


77 %
p
 3000

79 
D
 [0-9]

80 
L
 [
a
-
zA
-
Z_
]

81 
H
 [
a
-
fA
-
F0
-9]

82 
E
 [
Ee
][+-]?{
D
}+

83 
C1
 "/"

84 
C2
 "*"

85 
P
 (~|!|@|#|\
$
|%|\^|&|\*|-|\+|\||\/|\?)

87 %% /* 
	$yyÀx
 */

89 <
BLOB_MODE
>{
H
}{H} {  
Àx_byã
; }

91 <
INITIAL
>{
C1
}{
C2
} { 
	`Àx_ót_commít
(); }

93 <
INITIAL
>[\-]?0[
xX
]{
H
}+ {  
Àx_addªss
; }

94 <
INITIAL
>[\-]?0{
D
}+ {  
Àx_öãgî
; }

95 <
INITIAL
>[\-]?{
D
}+ {  
Àx_öãgî
; }

97 <
INITIAL
>[\-]?{
D
}+{
E
} {  
Àx_Êﬂt
; }

98 <
INITIAL
>[\-]?{
D
}*"."{D}+({
E
})? {  
Àx_Êﬂt
; }

99 <
INITIAL
>[\-]?{
D
}+"."{D}*({
E
})? {  
Àx_Êﬂt
; }

101 <
INITIAL
>'(\\.|[^\\'])+' {ÑeturnÜex_char; }

103 <
INITIAL
>\"(\\.|[^\\"])*\" /*"*/ {  
Àx_°rög
; }

105 <
INITIAL
>{
L
}({L}|{
D
})* {  
Àx_tokí
; }

107 <
INITIAL
>{
P
}+ {  
Àx_tokí
; }

109 <
INITIAL
>"{" {  '{'; }

110 <
INITIAL
>"}" {  '}'; }

111 <
INITIAL
>"," {  ','; }

112 <
INITIAL
>"(" {  '('; }

113 <
INITIAL
>")" {  ')'; }

114 <
INITIAL
>"[" {  '['; }

115 <
INITIAL
>"]" {  ']'; }

116 <
INITIAL
>"<" { 
	`BEGIN
(
BLOB_MODE
);  '<'; }

117 <
BLOB_MODE
>">" { 
	`BEGIN
(
INITIAL
);  '>'; }

119 [ \
t
\
v
\
f
] { ; }

120 [\
n
] { 
löe
++; }

121 <<
EOF
>> {  
Àx_eof
; }

123 
	`Áèl
("bogus character in input"); }

125 
	}
%%

128 
	$yywøp
()

131 
	}
}

134 
	$Àx_ót_commít
()

136 
c
, 
c1
;

138 
lo›
:

139 (
c
 = 
	`öput
()) != '*' && c != 0)

141 i‡(
c
 == '\n')

142 
löe
++;

145 i‡((
c1
 = 
	`öput
()) != '/' && c1 != 0)

147 
	`u≈ut
(
c1
);

148 
lo›
;

150 
	}
}

153 
	$yy_√xtch¨
()

155 
c
;

158 
c
 = 
	`öput
();

159 } 
c
 == ' ' || c == '\t' || c == '\v' || c == '\f' || c == '\n');

160 
	`u≈ut
(
c
);

162  
c
;

163 
	}
}

168 
	$yy_£t°ªam
(
FILE
 *
°ªam
)

170 
i
;

171 
	#MAX_STREAMS
 16

	)

173 
FILE
 *
°ªam
;

174 
YY_BUFFER_STATE
 
buf„r
;

175 } 
°ªams
[
MAX_STREAMS
] = { {
NULL
, NULL}, };

176 
num_°ªams
 = 0;

177 
FILE
 *
œ°_°ªam
 = 
NULL
;

180 i‡(
°ªam
 =
œ°_°ªam
)

184 
i
=0; i < 
num_°ªams
; i++)

186 i‡(
°ªams
[
i
].
°ªam
 == stream)

188 
	`yy_swôch_to_buf„r
(
°ªams
[
i
].
buf„r
);

194 i‡(
num_°ªams
 =
MAX_STREAMS
)

195 
	`Áèl
("out ofÜex buffer streams, increase MAX_STREAMS");

197 
°ªams
[
num_°ªams
].
°ªam
 = stream;

198 
°ªams
[
num_°ªams
].
buf„r
 = 
	`yy_¸óã_buf„r
(
°ªam
, 
YY_BUF_SIZE
);

199 
	`yy_swôch_to_buf„r
(
°ªams
[
num_°ªams
].
buf„r
);

200 
num_°ªams
++;

201 
	}
}

	@libexo/libexo.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°d¨g.h
>

55 
	~<˘y≥.h
>

56 
	~<limôs.h
>

57 
	~<î∫o.h
>

58 
	~<as£π.h
>

60 
	~"../ho°.h
"

61 
	~"../misc.h
"

62 
	~"../machöe.h
"

63 
	~"libexo.h
"

66 *
	gexo_˛ass_°r
[
ec_NUM
] = {

82 
	$öã∫_esˇ≥
(*
esc
, **
√xt
)

84 
c
, 
vÆue
, 
em±y
, 
cou¡
;

86 
c
 = *
esc
++) {

89 
vÆue
 = 0;

90 
em±y
 = 
TRUE
;

93 
c
 = *
esc
++;

94 i‡(!(
c
 >= 'a' && c <= 'f')

95 && !(
c
 >= 'A' && c <= 'F')

96 && !(
c
 >= '0' && c <= '9'))

98 
esc
--;

101 
vÆue
 *=16;

102 i‡(
c
 >= 'a' && c <= 'f')

103 
vÆue
 +
c
 - 'a' + 10;

104 i‡(
c
 >= 'A' && c <= 'F')

105 
vÆue
 +
c
 - 'A' + 10;

106 i‡(
c
 >= '0' && c <= '9')

107 
vÆue
 +
c
 - '0';

108 
em±y
 = 
FALSE
;

110 i‡(
em±y
)

111 
	`Áèl
("\\x used withÇoÅrailing hex digits");

117 
vÆue
 = 0;

118 
cou¡
 = 0;

119 (
c
 <'7'Ë&& (¯>'0'Ë&& (
cou¡
++ < 3))

121 
vÆue
 = (vÆuê* 8Ë+ (
c
 - '0');

122 
c
 = *
esc
++;

124 
esc
--;

130 
vÆue
 = 
c
;

134 
vÆue
 = '\n';

138 
vÆue
 = '\t';

142 
vÆue
 = '\r';

146 
vÆue
 = '\f';

150 
vÆue
 = '\b';

154 
vÆue
 = '\a';

158 
vÆue
 = '\v';

162 
vÆue
 = 
c
;

169 
vÆue
 = 
c
;

170 
	`w¨n
("n⁄-ANSIÉsˇ≥ sequí˚ `\\%c'", 
c
);

174 
	`Áèl
("unknow¿esˇ≥, '\\' fﬁlowed by ch¨ %x (`%c')", ()
c
, c);

177 i‡(*
√xt
)

178 *
√xt
 = 
esc
;

180  
vÆue
;

181 
	}
}

186 
	$öã∫_ch¨
(*
s
, **
√xt
)

188 
vÆue
;

190 i‡(
s
[0] !'\'' || s[
	`°æí
(s)-1] != '\'')

191 
	`∑nic
("mal-formed string constant");

193 i‡(
s
[1] != '\\')

195 
vÆue
 = ()
s
[1];

196 i‡(
s
[2] != '\'')

197 
	`∑nic
("mal-formed string constant");

198 i‡(
√xt
)

199 *
√xt
 = 
s
 + 2;

204 
vÆue
 = 
	`öã∫_esˇ≥
(
s
+2, 
√xt
);

208 
vÆue
 = (signed )(()(()(()value)));

210 i‡(
UCHAR_MAX
 < 
vÆue
)

211 
	`Áèl
("character constant out ofÑange");

213  
vÆue
;

214 
	}
}

217 
	$¥öt_ch¨
(
c
, 
FILE
 *
°ªam
)

219 
c
)

222 
	`Ârötf
(
°ªam
, "\\n");

226 
	`Ârötf
(
°ªam
, "\\\\");

230 
	`Ârötf
(
°ªam
, "\\'");

234 
	`Ârötf
(
°ªam
, "\\t");

238 
	`Ârötf
(
°ªam
, "\\r");

242 
	`Ârötf
(
°ªam
, "\\f");

246 
	`Ârötf
(
°ªam
, "\\b");

250 
	`Ârötf
(
°ªam
, "\\a");

254 
	`Ârötf
(
°ªam
, "\\v");

258 i‡(
	`i•röt
(
c
))

259 
	`Ârötf
(
°ªam
, "%c", 
c
);

261 
	`Ârötf
(
°ªam
, "\\x%02x", 
c
);

263 
	}
}

267 
	$öã∫_°rög
(*
°r
)

269 *
s
, *
i°r
;

272 
s
 = 
i°r
 = 
	`mÆloc
(
	`°æí
(
°r
)+1);

274 i‡(!
°r
 || !*str || *str != '\"')

275 
	`∑nic
("mal-formed string constant");

278 
°r
++;

280 *
°r
)

282 i‡(*
°r
 == '\\')

283 *
s
++ = 
	`öã∫_esˇ≥
(
°r
+1, &str);

287 i‡(*
°r
 == '\n')

288 
	`w¨n
("ANSI C forbidsÇewline in character constant");

290 i‡(*
°r
 == '"' && str[1] != '\0')

291 
	`∑nic
("encountered `\"'Émbedded in string constant");

293 i‡(*
°r
 != '\"')

294 *
s
++ = *
°r
;

295 
°r
++;

298 *
s
 = '\0';

299  
i°r
;

300 
	}
}

303 
	$¥öt_°rög
(*
s
, 
FILE
 *
°ªam
)

305 *
s
)

307 
	`¥öt_ch¨
(*
s
, 
°ªam
);

308 
s
++;

310 
	}
}

313 
	#TOKEN_BOGON
 0

	)

315 
	gtokí_id
 = 
TOKEN_BOGON
 + 1;

317 
	#TOKEN_HASH_SIZE
 1024

	)

318 
exo_tokí_t
 *
	gtokí_hash
[
TOKEN_HASH_SIZE
];

322 
	$hash_°r
(*
s
)

324 
h
 = 0;

325 *
s
)

326 
h
 = (h << 1Ë+ *
s
++;

327  (
h
 % 
TOKEN_HASH_SIZE
);

328 
	}
}

331 
exo_tokí_t
 *

332 
	$exo_öã∫
(*
tokí_°r
)

334 
ödex
;

335 
exo_tokí_t
 *
ít
;

337 
ödex
 = 
	`hash_°r
(
tokí_°r
);

339 
ít
=
tokí_hash
[
ödex
];É¡ !
NULL
;É¡Û¡->
√xt
)

341 i‡(!
	`°rcmp
(
tokí_°r
, 
ít
->
°r
))

344  
ít
;

349 
ít
 = (
exo_tokí_t
 *)
	`ˇŒoc
(1, (exo_token_t));

350 i‡(!
ít
)

351 
	`Áèl
("out of virtual memory");

353 
ít
->
°r
 = 
	`my°rdup
(
tokí_°r
);

354 
ít
->
tokí
 = 
tokí_id
++;

355 
ít
->
√xt
 = 
tokí_hash
[
ödex
];

356 
tokí_hash
[
ödex
] = 
ít
;

358  
ít
;

359 
	}
}

362 
exo_tokí_t
 *

363 
	$exo_öã∫_as
(*
tokí_°r
,

364 
tokí
)

366 
exo_tokí_t
 *
ít
;

369 i‡(
tokí_id
 > 
tokí
)

370 
	`Áèl
("token value isálready in use");

373 
ít
 = 
	`exo_öã∫
(
tokí_°r
);

375 
ít
->
tokí
 =Åoken;

378 i‡(
ít
->
tokí
 !=Åoken)

379 
	`Áèl
("symbﬁ `%s' wa†¥eviou¶y i¡î√d", 
tokí_°r
);

382  
ít
;

383 
	}
}

386 
exo_ãrm_t
 *

387 
	$exo_Æloc
(
exo_˛ass_t
 
ec
)

389 
exo_ãrm_t
 *
exo
;

391 
exo
 = (
exo_ãrm_t
 *)
	`ˇŒoc
(1, (exo_term_t));

392 i‡(!
exo
)

393 
	`Áèl
("out of virtual memory");

394 
exo
->
√xt
 = 
NULL
;

395 
exo
->
ec
 =Éc;

397  
exo
;

398 
	}
}

413 
exo_ãrm_t
 *

414 
	$exo_√w
(
exo_˛ass_t
 
ec
, ...)

416 
exo_ãrm_t
 *
exo
;

417 
va_li°
 
v
;

418 
	`va_°¨t
(
v
, 
ec
);

420 
exo
 = 
	`exo_Æloc
(
ec
);

421 
ec
)

423 
ec_öãgî
:

424 
exo
->
as_öãgî
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_öãgî_t
);

427 
ec_addªss
:

428 
exo
->
as_addªss
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_addªss_t
);

431 
ec_Êﬂt
:

432 
exo
->
as_Êﬂt
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_Êﬂt_t
);

435 
ec_ch¨
:

436 
exo
->
as_ch¨
.
vÆ
 = 
	`va_¨g
(
v
, );

439 
ec_°rög
:

441 *
°r
;

443 
°r
 = 
	`va_¨g
(
v
, *);

444 
exo
->
as_°rög
.
°r
 = (*)
	`my°rdup
(str);

448 
ec_li°
:

450 
exo_ãrm_t
 *
ít
;

452 
exo
->
as_li°
.
hód
 = 
NULL
;

454 
ít
 = 
	`va_¨g
(
v
, 
exo_ãrm_t
 *);

455 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
ít
);

456 } 
ít
 !
NULL
);

460 
ec_¨øy
:

462 
i
;

463 
exo_ãrm_t
 *
ít
;

465 
exo
->
as_¨øy
.
size
 = 
	`va_¨g
(
v
, );

466 
exo
->
as_¨øy
.
¨øy
 = (
exo_ãrm_t
 **)

467 
	`ˇŒoc
(
exo
->
as_¨øy
.
size
, (
exo_ãrm_t
 *));

468 i‡(!
exo
->
as_¨øy
.
¨øy
)

469 
	`Áèl
("out of virtual memory");

470 
i
 = 0;

472 
ít
 = 
	`va_¨g
(
v
, 
exo_ãrm_t
 *);

473 i‡(
ít
 !
NULL
)

475 i‡(
i
 =
exo
->
as_¨øy
.
size
)

476 
	`Áèl
("array constructor overflow");

477 
	`SET_EXO_ARR
(
exo
, 
i
, 
ít
);

479 
i
++;

480 } 
ít
 !
NULL
);

484 
ec_tokí
:

486 *
°r
;

488 
°r
 = 
	`va_¨g
(
v
, *);

489 
exo
->
as_tokí
.
ít
 = 
	`exo_öã∫
(
°r
);

493 
ec_blob
:

495 
size
;

496 *
d©a
;

498 
size
 = 
	`va_¨g
(
v
, );

499 
d©a
 = 
	`va_¨g
(
v
, *);

501 
exo
->
as_blob
.
size
 = size;

502 
exo
->
as_blob
.
d©a
 = 
	`mÆloc
(
size
);

503 i‡(
d©a
 !
NULL
)

504 
	`mem˝y
(
exo
->
as_blob
.
d©a
, d©a, 
size
);

506 
	`mem£t
(
exo
->
as_blob
.
d©a
, 0, 
size
);

510 
ec_nuŒ
:

514 
	`∑nic
("bogus EXO class");

517 
	`va_íd
(
v
);

518  
exo
;

519 
	}
}

523 
	$exo_dñëe
(
exo_ãrm_t
 *
exo
)

525 
exo
->
√xt
 = 
NULL
;

527 
exo
->
ec
)

529 
ec_öãgî
:

531 
exo
->
as_öãgî
.
vÆ
 = 0;

534 
ec_addªss
:

536 
exo
->
as_addªss
.
vÆ
 = 0;

539 
ec_Êﬂt
:

541 
exo
->
as_Êﬂt
.
vÆ
 = 0.0;

544 
ec_ch¨
:

546 
exo
->
as_ch¨
.
vÆ
 = '\0';

549 
ec_°rög
:

550 
	`‰ì
(
exo
->
as_°rög
.
°r
);

551 
exo
->
as_°rög
.
°r
 = 
NULL
;

554 
ec_li°
:

556 
exo_ãrm_t
 *
ít
, *
√xt_ít
;

558 
ít
=
exo
->
as_li°
.
hód
;É¡ !
NULL
;É¡ = 
√xt_ít
)

560 
√xt_ít
 = 
ít
->
√xt
;

561 
	`exo_dñëe
(
ít
);

563 
exo
->
as_li°
.
hód
 = 
NULL
;

567 
ec_¨øy
:

569 
i
;

571 
i
=0; i < 
exo
->
as_¨øy
.
size
; i++)

573 i‡(
exo
->
as_¨øy
.
¨øy
[
i
] !
NULL
)

574 
	`exo_dñëe
(
exo
->
as_¨øy
.
¨øy
[
i
]);

576 
	`‰ì
(
exo
->
as_¨øy
.
¨øy
);

577 
exo
->
as_¨øy
.
¨øy
 = 
NULL
;

578 
exo
->
as_¨øy
.
size
 = 0;

582 
ec_tokí
:

584 
exo
->
as_tokí
.
ít
 = 
NULL
;

587 
ec_blob
:

589 
	`‰ì
(
exo
->
as_blob
.
d©a
);

590 
exo
->
as_blob
.
d©a
 = 
NULL
;

593 
ec_nuŒ
:

598 
	`∑nic
("bogus EXO class");

600 
exo
->
ec
 = (
exo_˛ass_t
)0;

603 
	`‰ì
(
exo
);

604 
	}
}

607 
exo_ãrm_t
 *

608 
	$exo_chaö
(
exo_ãrm_t
 *
f‹e
, exo_ãrm_à*
a·
)

610 
exo_ãrm_t
 *
exo
, *
¥ev
;

612 i‡(!
f‹e
 && !
a·
)

613  
NULL
;

615 i‡(!
f‹e
)

616  
a·
;

619 
¥ev
=
NULL
,
exo
=
f‹e
;Éxÿ!NULL;ÖªvÛxo,exoÛxo->
√xt
)

621 
	`as£π
(
¥ev
);

624 
¥ev
->
√xt
 = 
a·
;

626  
f‹e
;

627 
	}
}

630 
exo_ãrm_t
 *

631 
	$exo_c›y
(
exo_ãrm_t
 *
exo
)

633 
exo_ãrm_t
 *
√w_exo
;

636 i‡(!
exo
)

637  
NULL
;

639 
√w_exo
 = 
	`exo_Æloc
(
exo
->
ec
);

640 *
√w_exo
 = *
exo
;

643 
√w_exo
->
√xt
 = 
NULL
;

645 
√w_exo
->
ec
)

647 
ec_öãgî
:

648 
ec_addªss
:

649 
ec_Êﬂt
:

650 
ec_ch¨
:

651 
ec_°rög
:

652 
ec_li°
:

653 
ec_tokí
:

657 
ec_¨øy
:

659 
i
;

662 
√w_exo
->
as_¨øy
.
¨øy
 = (
exo_ãrm_t
 **)

663 
	`ˇŒoc
(
√w_exo
->
as_¨øy
.
size
, (
exo_ãrm_t
 *));

665 
i
=0; i<
√w_exo
->
as_¨øy
.
size
; i++)

667 
	`SET_EXO_ARR
(
√w_exo
, 
i
, 
	`EXO_ARR
(
exo
, i));

672 
ec_blob
:

673 
√w_exo
->
as_blob
.
d©a
 = 
	`mÆloc
“ew_exo->
as_¨øy
.
size
);

674 
	`mem˝y
(
√w_exo
->
as_blob
.
d©a
, 
exo
->as_blob.d©a,Çew_exo->
as_¨øy
.
size
);

678 
	`∑nic
("bogus EXO class");

681  
√w_exo
;

682 
	}
}

685 
exo_ãrm_t
 *

686 
	$exo_dìpc›y
(
exo_ãrm_t
 *
exo
)

688 
exo_ãrm_t
 *
√w_exo
;

691 i‡(!
exo
)

692  
NULL
;

694 
√w_exo
 = 
	`exo_c›y
(
exo
);

695 
√w_exo
->
ec
)

697 
ec_öãgî
:

698 
ec_addªss
:

699 
ec_Êﬂt
:

700 
ec_ch¨
:

701 
ec_tokí
:

705 
ec_°rög
:

707 
√w_exo
->
as_°rög
.
°r
 =

708 (*)
	`my°rdup
((*)
exo
->
as_°rög
.
°r
);

711 
ec_li°
:

714 
exo_ãrm_t
 *
ñt
, *
√w_ñt
, *
√w_li°
;

716 
√w_li°
 = 
NULL
;

717 
ñt
=
√w_exo
->
as_li°
.
hód
;É… !
NULL
;É…Û…->
√xt
)

719 
√w_ñt
 = 
	`exo_dìpc›y
(
ñt
);

720 
√w_li°
 = 
	`exo_chaö
“ew_li°, 
√w_ñt
);

722 
√w_exo
->
as_li°
.
hód
 = 
√w_li°
;

726 
ec_¨øy
:

729 
i
;

731 
i
=0; i<
√w_exo
->
as_¨øy
.
size
; i++)

733 
	`SET_EXO_ARR
(
√w_exo
, 
i
, 
	`exo_dìpc›y
(
	`EXO_ARR
(
exo
, i)));

738 
ec_blob
:

739 
√w_exo
->
as_blob
.
d©a
 = 
	`mÆloc
“ew_exo->
as_¨øy
.
size
);

740 
	`mem˝y
(
√w_exo
->
as_blob
.
d©a
, 
exo
->as_blob.d©a,Çew_exo->
as_¨øy
.
size
);

744 
	`∑nic
("bogus EXO class");

747  
√w_exo
;

748 
	}
}

752 
	$exo_¥öt
(
exo_ãrm_t
 *
exo
, 
FILE
 *
°ªam
)

754 i‡(!
°ªam
)

755 
°ªam
 = 
°dîr
;

757 
exo
->
ec
)

759 
ec_öãgî
:

760 i‡((
exo_öãgî_t
) == 4)

761 
	`myÂrötf
(
°ªam
, "%u", 
exo
->
as_öãgî
.
vÆ
);

763 
	`myÂrötf
(
°ªam
, "%lu", 
exo
->
as_öãgî
.
vÆ
);

766 
ec_addªss
:

767 i‡((
exo_addªss_t
) == 4)

768 
	`myÂrötf
(
°ªam
, "0x%x", 
exo
->
as_öãgî
.
vÆ
);

770 
	`myÂrötf
(
°ªam
, "0x%lx", 
exo
->
as_öãgî
.
vÆ
);

773 
ec_Êﬂt
:

774 
	`Ârötf
(
°ªam
, "%f", 
exo
->
as_Êﬂt
.
vÆ
);

777 
ec_ch¨
:

778 
	`Ârötf
(
°ªam
, "'");

779 
	`¥öt_ch¨
(
exo
->
as_ch¨
.
vÆ
, 
°ªam
);

780 
	`Ârötf
(
°ªam
, "'");

783 
ec_°rög
:

784 
	`Ârötf
(
°ªam
, "\"");

785 
	`¥öt_°rög
(
exo
->
as_°rög
.
°r
, 
°ªam
);

786 
	`Ârötf
(
°ªam
, "\"");

789 
ec_li°
:

791 
exo_ãrm_t
 *
ít
;

793 
	`Ârötf
(
°ªam
, "(");

794 
ít
=
exo
->
as_li°
.
hód
;É¡ !
NULL
;É¡Û¡->
√xt
)

796 
	`exo_¥öt
(
ít
, 
°ªam
);

797 i‡(
ít
->
√xt
)

798 
	`Ârötf
(
°ªam
, ", ");

800 
	`Ârötf
(
°ªam
, ")");

804 
ec_¨øy
:

806 
i
, 
œ°
;

809 
œ°
=
exo
->
as_¨øy
.
size
-1;Üast >= 0;Üast--)

811 i‡(
	`EXO_ARR
(
exo
, 
œ°
Ë!
NULL
)

816 
	`Ârötf
(
°ªam
, "{%d}[", 
exo
->
as_¨øy
.
size
);

817 
i
=0; i<
exo
->
as_¨øy
.
size
 && i <
œ°
; i++)

819 i‡(
exo
->
as_¨øy
.
¨øy
[
i
] !
NULL
)

820 
	`exo_¥öt
(
exo
->
as_¨øy
.
¨øy
[
i
], 
°ªam
);

822 
	`Ârötf
(
°ªam
, " ");

823 i‡(
i
 !
exo
->
as_¨øy
.
size
-1 && i !
œ°
)

824 
	`Ârötf
(
°ªam
, ", ");

826 
	`Ârötf
(
°ªam
, "]");

830 
ec_tokí
:

831 
	`Ârötf
(
°ªam
, "%s", 
exo
->
as_tokí
.
ít
->
°r
);

834 
ec_blob
:

836 
i
, 
¸
;

838 
	`Ârötf
(
°ªam
, "{%d}<\n", 
exo
->
as_blob
.
size
);

839 
i
=0; i < 
exo
->
as_blob
.
size
; i++)

841 
¸
 = 
FALSE
;

842 i‡(
i
 != 0 && (i % 38) == 0)

844 
	`Ârötf
(
°ªam
, "\n");

845 
¸
 = 
TRUE
;

847 
	`Ârötf
(
°ªam
, "%02x", 
exo
->
as_blob
.
d©a
[
i
]);

849 i‡(!
¸
)

850 
	`Ârötf
(
°ªam
, "\n");

851 
	`Ârötf
(
°ªam
, ">");

856 
	`∑nic
("bogus EXO class");

858 
	}
}

861 
yyÀx
();

862 
yy_√xtch¨
();

863 *
yyãxt
;

864 
FILE
 *
yyö
;

867 
	$exo_îr
(*
îr
)

869 
löe
;

871 
	`Ârötf
(
°dîr
, "EXOÖ¨£Éº‹:Üöê%d: %s\n", 
löe
, 
îr
);

872 
	`exô
(1);

873 
	}
}

876 
exo_ãrm_t
 *

877 
	$exo_ªad
(
FILE
 *
°ªam
)

879 
tok
;

880 
tok_buf
[1024], *
ídp
;

881 
exo_ãrm_t
 *
ít
 = 
NULL
;

882 
î∫o
;

883 
	`yy_£t°ªam
(
FILE
 *);

886 i‡(!
°ªam
)

887 
°ªam
 = 
°dö
;

888 
	`yy_£t°ªam
(
°ªam
);

891 
tok
 = 
	`yyÀx
();

892 
	`°r˝y
(
tok_buf
, 
yyãxt
);

894 
tok
)

896 
Àx_öãgî
:

898 
exo_öãgî_t
 
öt_vÆ
;

901 
î∫o
 = 0;

902 #ifde‡
HOST_HAS_QWORD


903 
öt_vÆ
 = 
	`my©oq
(
tok_buf
, &
ídp
, 10);

905 
öt_vÆ
 = 
	`°πoul
(
tok_buf
, &
ídp
, 10);

907 i‡(!
î∫o
 && !*
ídp
)

910 
ít
 = 
	`exo_√w
(
ec_öãgî
, 
öt_vÆ
);

913 
	`exo_îr
("cannotÖarse integerÜiteral");

917 
Àx_addªss
:

919 
exo_addªss_t
 
addr_vÆ
;

922 
î∫o
 = 0;

923 #ifde‡
HOST_HAS_QWORD


924 
addr_vÆ
 = 
	`my©oq
(
tok_buf
, &
ídp
, 16);

926 
addr_vÆ
 = 
	`°πoul
(
tok_buf
, &
ídp
, 16);

928 i‡(!
î∫o
 && !*
ídp
)

931 
ít
 = 
	`exo_√w
(
ec_addªss
, 
addr_vÆ
);

934 
	`exo_îr
("cannotÖarseáddressÜiteral");

938 
Àx_Êﬂt
:

940 
exo_Êﬂt_t
 
Êﬂt_vÆ
;

943 
î∫o
 = 0;

944 
Êﬂt_vÆ
 = 
	`°πod
(
tok_buf
, &
ídp
);

945 i‡(!
î∫o
 && !*
ídp
)

948 
ít
 = 
	`exo_√w
(
ec_Êﬂt
, 
Êﬂt_vÆ
);

951 
	`exo_îr
("cannotÖarse floatingÖointÜiteral");

955 
Àx_ch¨
:

957 
c
;

959 
c
 = 
	`öã∫_ch¨
(
tok_buf
, &
ídp
);

960 i‡(!
ídp
)

961 
	`exo_îr
("cannot convert characterÜiteral");

962 
ít
 = 
	`exo_√w
(
ec_ch¨
, 
c
);

966 
Àx_°rög
:

968 *
s
;

970 
s
 = 
	`öã∫_°rög
(
tok_buf
);

971 
ít
 = 
	`exo_√w
(
ec_°rög
, 
s
);

972 
	`‰ì
(
s
);

976 
Àx_tokí
:

977 
ít
 = 
	`exo_√w
(
ec_tokí
, 
tok_buf
);

980 
Àx_byã
:

981 
	`exo_îr
("unexpected blob byteÉncountered");

986 
exo_ãrm_t
 *
ñt
;

988 
ít
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

990 i‡(
	`yy_√xtch¨
() != ')')

994 
ñt
 = 
	`exo_ªad
(
°ªam
);

995 i‡(!
ñt
)

996 
	`exo_îr
("unexpectedÉnd-of-file");

997 
ít
->
as_li°
.
hód
 =

998 
	`exo_chaö
(
ít
->
as_li°
.
hód
, 
ñt
);

1001 i‡(
	`yy_√xtch¨
() == ',')

1002 
	`yyÀx
();

1003 } 
	`yy_√xtch¨
() != ')');

1007 
tok
 = 
	`yyÀx
();

1008 i‡(
tok
 != ')')

1009 
	`exo_îr
("expected ')'");

1014 
	`exo_îr
("unexpected ')'Éncountered");

1018 
	`exo_îr
("unexpected '<'Éncountered");

1022 
	`exo_îr
("unexpected '>'Éncountered");

1027 
˙t
, 
size
;

1028 
exo_ãrm_t
 *
ñt
;

1031 
ñt
 = 
	`exo_ªad
(
°ªam
);

1032 i‡(!
ñt
 ||É…->
ec
 !
ec_öãgî
)

1033 
	`exo_îr
("badly formedárray size");

1036 
size
 = ()
ñt
->
as_öãgî
.
vÆ
;

1039 
	`exo_dñëe
(
ñt
);

1042 
tok
 = 
	`yyÀx
();

1043 i‡(
tok
 != '}')

1044 
	`exo_îr
("expected '}'");

1046 
tok
 = 
	`yyÀx
();

1047 
tok
)

1051 
ít
 = 
	`exo_√w
(
ec_¨øy
, 
size
, 
NULL
);

1054 i‡(
	`yy_√xtch¨
() != ']')

1057 
˙t
 = 0;

1059 i‡(
˙t
 =
ít
->
as_¨øy
.
size
)

1060 
	`exo_îr
("too many initializers forárray");

1063 i‡(
	`yy_√xtch¨
() == ',')

1065 
ñt
 = 
NULL
;

1069 
ñt
 = 
	`exo_ªad
(
°ªam
);

1070 i‡(!
ñt
)

1071 
	`exo_îr
("unexpectedÉnd-of-file");

1073 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
ñt
);

1074 
˙t
++;

1077 i‡(
	`yy_√xtch¨
() == ',')

1078 
	`yyÀx
();

1079 } 
	`yy_√xtch¨
() != ']');

1083 
tok
 = 
	`yyÀx
();

1084 i‡(
tok
 != ']')

1085 
	`exo_îr
("expected ']'");

1090 
ít
 = 
	`exo_√w
(
ec_blob
, 
size
, 
NULL
);

1093 i‡(
	`yy_√xtch¨
() != '>')

1095 
byã_vÆ
;

1098 
˙t
 = 0;

1101 
tok
 = 
	`yyÀx
();

1103 i‡(
tok
 =
Àx_byã
)

1105 i‡(
˙t
 =
ít
->
as_blob
.
size
)

1106 
	`exo_îr
("too many initializers for blob");

1109 
î∫o
 = 0;

1110 
byã_vÆ
 = 
	`°πoul
(
yyãxt
, &
ídp
, 16);

1111 i‡(
î∫o
 !0 || *
ídp
 != '\0')

1112 
	`exo_îr
("cannotÖarse blob byteÜiteral");

1113 i‡(
byã_vÆ
 > 255)

1114 
	`∑nic
("bogus byte value");

1115 
ít
->
as_blob
.
d©a
[
˙t
] = 
byã_vÆ
;

1116 
˙t
++;

1118 i‡(
tok
 == '>')

1121 
	`exo_îr
("unexpected character in blob");

1126 i‡(
˙t
 !
ít
->
as_blob
.
size
)

1127 
	`exo_îr
("notÉnough initializers for blob");

1132 
	`exo_îr
("expected '[' or '<'");

1138 
	`exo_îr
("unexpected '}'Éncountered");

1142 
	`exo_îr
("unexpected ','Éncountered");

1147 
i
, 
˙t
;

1148 
exo_ãrm_t
 *
li°
, *
ñt
, *
√xt_ñt
;

1151 
li°
 = 
NULL
;

1152 i‡(
	`yy_√xtch¨
() == ']')

1153 
	`exo_îr
("unsizedárray hasÇo initializers");

1155 
˙t
 = 0;

1158 i‡(
	`yy_√xtch¨
() == ',')

1160 
ñt
 = 
	`exo_√w
(
ec_nuŒ
);

1164 
ñt
 = 
	`exo_ªad
(
°ªam
);

1165 i‡(!
ñt
)

1166 
	`exo_îr
("unexpectedÉnd-of-file");

1168 
˙t
++;

1169 
li°
 = 
	`exo_chaö
÷i°, 
ñt
);

1172 i‡(
	`yy_√xtch¨
() == ',')

1173 
	`yyÀx
();

1174 } 
	`yy_√xtch¨
() != ']');

1177 
tok
 = 
	`yyÀx
();

1178 i‡(
tok
 != ']')

1179 
	`exo_îr
("expected ']'");

1182 
	`as£π
(
˙t
 > 0);

1183 
ít
 = 
	`exo_√w
(
ec_¨øy
, 
˙t
, 
NULL
);

1186 
i
=0,
ñt
=
li°
; i<
˙t
; i++,ñt=
√xt_ñt
)

1188 
	`as£π
(
ñt
 !
NULL
);

1189 
√xt_ñt
 = 
ñt
->
√xt
;

1190 i‡(
ñt
->
ec
 =
ec_nuŒ
)

1192 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
NULL
);

1193 
	`exo_dñëe
(
ít
);

1197 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
ñt
);

1198 
ñt
->
√xt
 = 
NULL
;

1205 
	`exo_îr
("unexpected ']'Éncountered");

1208 
Àx_eof
:

1210 
ít
 = 
NULL
;

1214 
	`∑nic
("bogusÅoken");

1217  
ít
;

1218 
	}
}

	@libexo/libexo.h

70 #i‚de‡
EXO_H


71 
	#EXO_H


	)

73 
	~"../ho°.h
"

74 
	~"../misc.h
"

75 
	~"../machöe.h
"

78 
	#EXO_FMT_MAJOR
 1

	)

79 
	#EXO_FMT_MINOR
 0

	)

82 
	eexo_˛ass_t
 {

83 
	mec_öãgî
,

84 
	mec_addªss
,

85 
	mec_Êﬂt
,

86 
	mec_ch¨
,

87 
	mec_°rög
,

88 
	mec_li°
,

89 
	mec_¨øy
,

90 
	mec_tokí
,

91 
	mec_blob
,

92 
	mec_nuŒ
,

93 
	mec_NUM


97 *
exo_˛ass_°r
[
ec_NUM
];

100 
	sexo_tokí_t
 {

101 
exo_tokí_t
 *
	m√xt
;

102 *
	m°r
;

103 
	mtokí
;

106 
	sexo_ãrm_t
 {

107 
exo_ãrm_t
 *
	m√xt
;

108 
exo_˛ass_t
 
	mec
;

110 
	sas_öãgî_t
 {

111 
exo_öãgî_t
 
	mvÆ
;

112 } 
	mas_öãgî
;

113 
	sas_addªss_t
 {

114 
exo_addªss_t
 
	mvÆ
;

115 } 
	mas_addªss
;

116 
	sas_Êﬂt_t
 {

117 
exo_Êﬂt_t
 
	mvÆ
;

118 } 
	mas_Êﬂt
;

119 
	sas_ch¨_t
 {

120 
	mvÆ
;

121 } 
	mas_ch¨
;

122 
	sas_°rög_t
 {

123 *
	m°r
;

124 } 
	mas_°rög
;

125 
	sas_li°_t
 {

126 
exo_ãrm_t
 *
	mhód
;

127 } 
	mas_li°
;

128 
	sas_¨øy_t
 {

129 
	msize
;

130 
exo_ãrm_t
 **
	m¨øy
;

131 } 
	mas_¨øy
;

132 
	sas_tokí_t
 {

133 
exo_tokí_t
 *
	mít
;

134 } 
	mas_tokí
;

135 
	sas_blob_t
 {

136 
	msize
;

137 *
	md©a
;

138 } 
	mas_blob
;

139 } 
	mv¨ü¡
;

142 
	#as_öãgî
 
v¨ü¡
.
as_öãgî


	)

143 
	#as_addªss
 
v¨ü¡
.
as_addªss


	)

144 
	#as_Êﬂt
 
v¨ü¡
.
as_Êﬂt


	)

145 
	#as_ch¨
 
v¨ü¡
.
as_ch¨


	)

146 
	#as_°rög
 
v¨ü¡
.
as_°rög


	)

147 
	#as_li°
 
v¨ü¡
.
as_li°


	)

148 
	#as_¨øy
 
v¨ü¡
.
as_¨øy


	)

149 
	#as_tokí
 
v¨ü¡
.
as_tokí


	)

150 
	#as_blob
 
v¨ü¡
.
as_blob


	)

154 
	#EXO_ARR
(
E
,
N
) \

155 ((
E
)->
ec
 !
ec_¨øy
 \

156 ? (
	`Áèl
("nŸá¿¨øy"), *(
exo_ãrm_t
 **)(
NULL
)) \

157 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

158 ? (
	`Áèl
("¨øy bound†îr‹"), *(
exo_ãrm_t
 **)(
NULL
)) \

159 : (
E
)->
as_¨øy
.
¨øy
[(
N
)]))

	)

160 
	#SET_EXO_ARR
(
E
,
N
,
V
) \

161 ((
E
)->
ec
 !
ec_¨øy
 \

162 ? ()
	`Áèl
("notánárray") \

163 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

164 ? ()
	`Áèl
("array boundsÉrror") \

165 : ()((
E
)->
as_¨øy
.
¨øy
[(
N
)] = (
V
))))

	)

168 
exo_tokí_t
 *

169 
exo_öã∫
(*
tokí_°r
);

172 
exo_tokí_t
 *

173 
exo_öã∫_as
(*
tokí_°r
,

174 
tokí
);

189 
exo_ãrm_t
 *

190 
exo_√w
(
exo_˛ass_t
 
ec
, ...);

194 
exo_dñëe
(
exo_ãrm_t
 *
exo
);

197 
exo_ãrm_t
 *

198 
exo_chaö
(
exo_ãrm_t
 *
f‹e
, exo_ãrm_à*
a·
);

201 
exo_ãrm_t
 *

202 
exo_c›y
(
exo_ãrm_t
 *
exo
);

205 
exo_ãrm_t
 *

206 
exo_dìpc›y
(
exo_ãrm_t
 *
exo
);

210 
exo_¥öt
(
exo_ãrm_t
 *
exo
, 
FILE
 *
°ªam
);

213 
exo_ãrm_t
 *

214 
exo_ªad
(
FILE
 *
°ªam
);

217 
	eÀx_t
 {

218 
	mÀx_öãgî
 = 256,

219 
	mÀx_addªss
,

220 
	mÀx_Êﬂt
,

221 
	mÀx_ch¨
,

222 
	mÀx_°rög
,

223 
	mÀx_tokí
,

224 
	mÀx_byã
,

225 
	mÀx_eof


	@loader.h

52 #i‚de‡
LOADER_H


53 
	#LOADER_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"ªgs.h
"

61 
	~"mem‹y.h
"

101 
md_addr_t
 
ld_ãxt_ba£
;

104 
ld_ãxt_size
;

107 
md_addr_t
 
ld_d©a_ba£
;

110 
ld_d©a_size
;

113 
md_addr_t
 
ld_brk_poöt
;

116 
md_addr_t
 
ld_°ack_ba£
;

119 
ld_°ack_size
;

122 
md_addr_t
 
ld_°ack_mö
;

125 *
ld_¥og_‚ame
;

128 
md_addr_t
 
ld_¥og_íåy
;

131 
md_addr_t
 
ld_ívú⁄_ba£
;

134 
ld_èrgë_big_ídün
;

138 
ld_ªg_°©s
(
°©_sdb_t
 *
sdb
);

143 
ld_lﬂd_¥og
(*
‚ame
,

144 
¨gc
, **
¨gv
,

145 **
ívp
,

146 
ªgs_t
 *
ªgs
,

147 
mem_t
 *
mem
,

148 
zîo_bss_£gs
);

	@main.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<time.h
>

56 
	~<£tjmp.h
>

57 
	~<sig«l.h
>

58 
	~<sys/ty≥s.h
>

59 #i‚de‡
_MSC_VER


60 
	~<uni°d.h
>

61 
	~<sys/time.h
>

63 #ifde‡
BFD_LOADER


64 
	~<bfd.h
>

67 
	~"ho°.h
"

68 
	~"misc.h
"

69 
	~"machöe.h
"

70 
	~"ídün.h
"

71 
	~"vîsi⁄.h
"

72 
	~"dlôe.h
"

73 
	~"›ti⁄s.h
"

74 
	~"°©s.h
"

75 
	~"lﬂdî.h
"

76 
	~"sim.h
"

80 
	$sig«l_sim_°©s
(
sigty≥
)

82 
sim_dump_°©s
 = 
TRUE
;

83 
	}
}

87 
	$sig«l_exô_now
(
sigty≥
)

89 
sim_exô_now
 = 
TRUE
;

90 
	}
}

93 
cou¡î_t
 
	gsim_num_ö¢
 = 0;

97 
	gsim_mem_ußge
 = 0;

101 
time_t
 
	gsim_°¨t_time
;

102 
time_t
 
	gsim_íd_time
;

103 
	gsim_ñ≠£d_time
;

106 
	gsim_sw≠_byãs
;

107 
	gsim_sw≠_w‹ds
;

110 
	gsim_exô_now
 = 
FALSE
;

113 
jmp_buf
 
	gsim_exô_buf
;

116 
	gsim_dump_°©s
 = 
FALSE
;

119 
›t_odb_t
 *
	gsim_odb
;

122 
°©_sdb_t
 *
	gsim_sdb
;

125 *
	gsim_eio_‚ame
 = 
NULL
;

126 *
	gsim_chk±_‚ame
 = 
NULL
;

127 
FILE
 *
	gsim_eio_fd
 = 
NULL
;

130 *
	gsim_simout
 = 
NULL
;

131 *
	gsim_¥ogout
 = 
NULL
;

132 
FILE
 *
	gsim_¥ogfd
 = 
NULL
;

135 
	gexec_ödex
 = -1;

138 
	ghñp_me
;

141 
	gønd_£ed
;

144 
	göô_quô
;

146 #i‚de‡
_MSC_VER


148 
	gni˚_¥i‹ôy
;

152 
	#NICE_DEFAULT_VALUE
 0

	)

155 
	$‹ph™_‚
(
i
, 
¨gc
, **
¨gv
)

157 
exec_ödex
 = 
i
;

158  
FALSE
;

159 
	}
}

162 
	$b™√r
(
FILE
 *
fd
, 
¨gc
, **
¨gv
)

164 *
s
;

166 
	`Ârötf
(
fd
,

174 ((
s
 = 
	`°ºchr
(
¨gv
[0], '/')) ? s+1 :árgv[0]),

175 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

176 
	}
}

179 
	$ußge
(
FILE
 *
fd
, 
¨gc
, **
¨gv
)

181 
	`Ârötf
(
fd
, "Ußge: %†{-›ti⁄s}ÉxecuèbÀ {¨gumíts}\n", 
¨gv
[0]);

182 
	`›t_¥öt_hñp
(
sim_odb
, 
fd
);

183 
	}
}

185 
	gru¬ög
 = 
FALSE
;

189 
	$sim_¥öt_°©s
(
FILE
 *
fd
)

192 
ëext
, *
	`sbrk
();

195 i‡(!
ru¬ög
)

199 
sim_íd_time
 = 
	`time
((
time_t
 *)
NULL
);

200 
sim_ñ≠£d_time
 = 
	`MAX
(
sim_íd_time
 - 
sim_°¨t_time
, 1);

204 
sim_mem_ußge
 = (
	`sbrk
(0Ë- &
ëext
) / 1024;

208 
	`Ârötf
(
fd
, "\nsim: ** simulation statistics **\n");

209 
	`°©_¥öt_°©s
(
sim_sdb
, 
fd
);

210 
	`sim_aux_°©s
(
fd
);

211 
	`Ârötf
(
fd
, "\n");

212 
	}
}

216 
	$exô_now
(
exô_code
)

219 
	`sim_¥öt_°©s
(
°dîr
);

222 
	`sim_unöô
();

225 
	`exô
(
exô_code
);

226 
	}
}

229 
	$maö
(
¨gc
, **
¨gv
, **
ívp
)

231 *
s
;

232 
i
, 
exô_code
;

234 #i‚de‡
_MSC_VER


236 
	`sig«l
(
SIGUSR1
, 
sig«l_sim_°©s
);

239 
	`sig«l
(
SIGUSR2
, 
sig«l_exô_now
);

243 
	`Áèl_hook
(
sim_¥öt_°©s
);

246 i‡((
exô_code
 = 
	`£tjmp
(
sim_exô_buf
)) != 0)

249 
	`exô_now
(
exô_code
-1);

253 
sim_odb
 = 
	`›t_√w
(
‹ph™_‚
);

254 
	`›t_ªg_Êag
(
sim_odb
, "-h", "print help message",

255 &
hñp_me
, 
FALSE
, FALSE, 
NULL
);

256 
	`›t_ªg_Êag
(
sim_odb
, "-v", "verbose operation",

257 &
vîbo£
, 
FALSE
, FALSE, 
NULL
);

258 #ifde‡
DEBUG


259 
	`›t_ªg_Êag
(
sim_odb
, "-d", "enable debug message",

260 &
debuggög
, 
FALSE
, FALSE, 
NULL
);

262 
	`›t_ªg_Êag
(
sim_odb
, "-i", "start in Dlite debugger",

263 &
dlôe_a˘ive
, 
FALSE
, FALSE, 
NULL
);

264 
	`›t_ªg_öt
(
sim_odb
, "-seed",

266 &
ønd_£ed
, 1, 
TRUE
, 
NULL
);

267 
	`›t_ªg_Êag
(
sim_odb
, "-q", "initializeándÅerminate immediately",

268 &
öô_quô
, 
FALSE
, FALSE, 
NULL
);

269 
	`›t_ªg_°rög
(
sim_odb
, "-chkpt", "restore EIOÅraceÉxecution from <fname>",

270 &
sim_chk±_‚ame
, 
NULL
, 
FALSE
, NULL);

273 
	`›t_ªg_°rög
(
sim_odb
, "-redir:sim",

275 &
sim_simout
,

276  
NULL
, 
FALSE
, NULL);

277 
	`›t_ªg_°rög
(
sim_odb
, "-redir:prog",

279 &
sim_¥ogout
, 
NULL
, 
FALSE
, NULL);

281 #i‚de‡
_MSC_VER


283 
	`›t_ªg_öt
(
sim_odb
, "-nice",

284 "simuœt‹ schedulögÖri‹ôy", &
ni˚_¥i‹ôy
,

285  
NICE_DEFAULT_VALUE
, 
TRUE
, 
NULL
);

291 
	`sim_ªg_›ti⁄s
(
sim_odb
);

294 
exec_ödex
 = -1;

295 
	`›t_¥o˚ss_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

298 i‡(
sim_simout
 !
NULL
)

301 
	`fÊush
(
°dîr
);

302 i‡(!
	`‰e›í
(
sim_simout
, "w", 
°dîr
))

303 
	`Áèl
("u«bÀÅÿªdúe˘ simuœt‹ ouçuàtÿfûê`%s'", 
sim_simout
);

306 i‡(
sim_¥ogout
 !
NULL
)

309 
sim_¥ogfd
 = 
	`f›í
(
sim_¥ogout
, "w");

310 i‡(!
sim_¥ogfd
)

311 
	`Áèl
("u«bÀÅÿªdúe˘Örogøm ouçuàtÿfûê`%s'", 
sim_¥ogout
);

315 i‡(
¨gc
 < 2)

317 
	`b™√r
(
°dîr
, 
¨gc
, 
¨gv
);

318 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

319 
	`exô
(1);

323 
	`b™√r
(
°dîr
, 
¨gc
, 
¨gv
);

325 i‡(
hñp_me
)

328 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

329 
	`exô
(1);

333 i‡(
ønd_£ed
 == 0)

336 
	`my§™d
(
	`time
((
time_t
 *)
NULL
));

341 
	`my§™d
(
ønd_£ed
);

345 i‡(
exec_ödex
 == -1)

348 
	`Ârötf
(
°dîr
, "error:ÇoÉxecutable specified\n");

349 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

350 
	`exô
(1);

355 
	`sim_check_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

357 #i‚de‡
_MSC_VER


359 i‡(
	`ni˚
(0Ë< 
ni˚_¥i‹ôy
)

361 i‡(
	`ni˚
(
ni˚_¥i‹ôy
 -Çice(0)) < 0)

362 
	`Áèl
("couldÇotÑenice simulatorÖrocess");

367 
sim_num_ö¢
 = 0;

369 #ifde‡
BFD_LOADER


371 
	`bfd_öô
();

375 
	`md_öô_decodî
();

378 
	`sim_öô
();

381 
	`sim_lﬂd_¥og
(
¨gv
[
exec_ödex
], 
¨gc
-exec_ödex,árgv+exec_ödex, 
ívp
);

384 
sim_sdb
 = 
	`°©_√w
();

385 
	`sim_ªg_°©s
(
sim_sdb
);

387 
	`°©_ªg_uöt
(
sim_sdb
, "sim_mem_usage",

389 &
sim_mem_ußge
, sim_mem_usage, "%11dk");

393 
sim_°¨t_time
 = 
	`time
((
time_t
 *)
NULL
);

396 
	`Ârötf
(
°dîr
, "sim: commandÜine: ");

397 
i
=0; i < 
¨gc
; i++)

398 
	`Ârötf
(
°dîr
, "%†", 
¨gv
[
i
]);

399 
	`Ârötf
(
°dîr
, "\n");

402 
s
 = 
	`˘ime
(&
sim_°¨t_time
);

403 i‡(
s
[
	`°æí
(s)-1] == '\n')

404 
s
[
	`°æí
(s)-1] = '\0';

405 
	`Ârötf
(
°dîr
, "\nsim: simuœti⁄ sèπed @ %s, o±i⁄†fﬁlow:\n", 
s
);

406 
	`›t_¥öt_›ti⁄s
(
sim_odb
, 
°dîr
, 
TRUE
, TRUE);

407 
	`sim_aux_c⁄fig
(
°dîr
);

408 
	`Ârötf
(
°dîr
, "\n");

411 
sim_°¨t_time
 = 
	`time
((
time_t
 *)
NULL
);

413 i‡(
öô_quô
)

414 
	`exô_now
(0);

416 
ru¬ög
 = 
TRUE
;

417 
	`sim_maö
();

420 
	`exô_now
(0);

423 
	}
}

	@memory.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"›ti⁄s.h
"

59 
	~"°©s.h
"

60 
	~"mem‹y.h
"

64 
mem_t
 *

65 
	$mem_¸óã
(*
«me
)

67 
mem_t
 *
mem
;

69 
mem
 = 
	`ˇŒoc
(1, (
mem_t
));

70 i‡(!
mem
)

71 
	`Áèl
("out of virtual memory");

73 
mem
->
«me
 = 
	`my°rdup
(name);

74  
mem
;

75 
	}
}

78 
byã_t
 *

79 
	$mem_å™¶©e
(
mem_t
 *
mem
,

80 
md_addr_t
 
addr
)

82 
mem_±e_t
 *
±e
, *
¥ev
;

85 
mem
->
±ab_mis£s
++; mem->
±ab_ac˚s£s
++;

88 
¥ev
=
NULL
, 
±e
=
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

89 
±e
 !
NULL
;

90 
¥ev
=
±e
,Öãıã->
√xt
)

92 i‡(
±e
->
èg
 =
	`MEM_PTAB_TAG
(
addr
))

95 i‡(
¥ev
)

97 
¥ev
->
√xt
 = 
±e
->next;

98 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

99 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

101  
±e
->
∑ge
;

106  
NULL
;

107 
	}
}

111 
	$mem_√w∑ge
(
mem_t
 *
mem
,

112 
md_addr_t
 
addr
)

114 
byã_t
 *
∑ge
;

115 
mem_±e_t
 *
±e
;

118 
∑ge
 = 
	`gëc‹e
(
MD_PAGE_SIZE
);

119 i‡(!
∑ge
)

120 
	`Áèl
("out of virtual memory");

123 
±e
 = 
	`ˇŒoc
(1, (
mem_±e_t
));

124 i‡(!
±e
)

125 
	`Áèl
("out of virtual memory");

126 
±e
->
èg
 = 
	`MEM_PTAB_TAG
(
addr
);

127 
±e
->
∑ge
 =Öage;

130 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

131 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

134 
mem
->
∑ge_cou¡
++;

135 
	}
}

140 
md_Áu…_ty≥


141 
	$mem_ac˚ss
(
mem_t
 *
mem
,

142 
mem_cmd
 
cmd
,

143 
md_addr_t
 
addr
,

144 *
vp
,

145 
nbyãs
)

147 
byã_t
 *
p
 = 
vp
;

150 i‡–(
nbyãs
 & (nbytes-1)) != 0

151 || 
nbyãs
 > 
MD_PAGE_SIZE
)

152  
md_Áu…_ac˚ss
;

154 i‡–(
addr
 & (
nbyãs
-1)) != 0)

155  
md_Áu…_Æignmít
;

159 i‡(
cmd
 =
Ród
)

161 
nbyãs
-- > 0)

163 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

164 
p
 +(
byã_t
);

165 
addr
 +(
byã_t
);

170 
nbyãs
-- > 0)

172 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, *((
byã_t
 *)
p
));

173 
p
 +(
byã_t
);

174 
addr
 +(
byã_t
);

180 
nbyãs
)

183 i‡(
cmd
 =
Ród
)

184 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

186 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, *((
byã_t
 *)
p
));

190 i‡(
cmd
 =
Ród
)

191 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

193 
	`MEM_WRITE_HALF
(
mem
, 
addr
, *((
hÆf_t
 *)
p
));

197 i‡(
cmd
 =
Ród
)

198 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

200 
	`MEM_WRITE_WORD
(
mem
, 
addr
, *((
w‹d_t
 *)
p
));

203 #ifde‡
HOST_HAS_QWORD


205 i‡(
cmd
 =
Ród
)

206 *((
qw‹d_t
 *)
p
Ë
	`MEM_READ_QWORD
(
mem
, 
addr
);

208 
	`MEM_WRITE_QWORD
(
mem
, 
addr
, *((
qw‹d_t
 *)
p
));

218  
md_Áu…_n⁄e
;

219 
	}
}

223 
	$mem_ªg_°©s
(
mem_t
 *
mem
,

224 
°©_sdb_t
 *
sdb
)

226 
buf
[512], 
buf1
[512];

228 
	`•rötf
(
buf
, "%s.∑ge_cou¡", 
mem
->
«me
);

229 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofÖagesállocated",

230 &
mem
->
∑ge_cou¡
, mem->∑ge_cou¡, 
NULL
);

232 
	`•rötf
(
buf
, "%s.∑ge_mem", 
mem
->
«me
);

233 
	`•rötf
(
buf1
, "%s.∑ge_cou¡ * %d / 1024", 
mem
->
«me
, 
MD_PAGE_SIZE
);

234 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "total size of memoryÖagesállocated",

235 
buf1
, "%11.0fk");

237 
	`•rötf
(
buf
, "%s.±ab_mis£s", 
mem
->
«me
);

238 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "total firstÜevelÖageÅable misses",

239 &
mem
->
±ab_mis£s
, mem->±ab_mis£s, 
NULL
);

241 
	`•rötf
(
buf
, "%s.±ab_ac˚s£s", 
mem
->
«me
);

242 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÖageÅableáccesses",

243 &
mem
->
±ab_ac˚s£s
, mem->±ab_ac˚s£s, 
NULL
);

245 
	`•rötf
(
buf
, "%s.±ab_miss_øã", 
mem
->
«me
);

246 
	`•rötf
(
buf1
, "%s.±ab_mis£†/ %s.±ab_ac˚s£s", 
mem
->
«me
, mem->name);

247 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "fú°ÜevñÖagêèbÀ mis†øã", 
buf1
, 
NULL
);

248 
	}
}

252 
	$mem_öô
(
mem_t
 *
mem
)

254 
i
;

257 
i
=0; i < 
MEM_PTAB_SIZE
; i++)

258 
mem
->
±ab
[
i
] = 
NULL
;

260 
mem
->
∑ge_cou¡
 = 0;

261 
mem
->
±ab_mis£s
 = 0;

262 
mem
->
±ab_ac˚s£s
 = 0;

263 
	}
}

266 
md_Áu…_ty≥


267 
	$mem_dump
(
mem_t
 *
mem
,

268 
md_addr_t
 
addr
,

269 
Àn
,

270 
FILE
 *
°ªam
)

272 
d©a
;

273 
md_Áu…_ty≥
 
Áu…
;

275 i‡(!
°ªam
)

276 
°ªam
 = 
°dîr
;

278 
addr
 &~(
w‹d_t
);

279 
Àn
 = (À¿+ ((
w‹d_t
) - 1)) & ~(word_t);

280 
Àn
-- > 0)

282 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
d©a
, (
w‹d_t
));

283 i‡(
Áu…
 !
md_Áu…_n⁄e
)

284  
Áu…
;

286 
	`myÂrötf
(
°ªam
, "0x%08p: %08x\n", 
addr
, 
d©a
);

287 
addr
 +(
w‹d_t
);

291  
md_Áu…_n⁄e
;

292 
	}
}

296 
md_Áu…_ty≥


297 
	$mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

298 
mem_t
 *
mem
,

299 
mem_cmd
 
cmd
,

300 
md_addr_t
 
addr
,

301 *
s
)

303 
n
 = 0;

304 
c
;

305 
md_Áu…_ty≥
 
Áu…
;

307 
cmd
)

309 
Ród
:

312 
Áu…
 = 
	`mem_‚
(
mem
, 
Ród
, 
addr
++, &
c
, 1);

313 i‡(
Áu…
 !
md_Áu…_n⁄e
)

314  
Áu…
;

315 *
s
++ = 
c
;

316 
n
++;

317 } 
c
);

320 
Wrôe
:

323 
c
 = *
s
++;

324 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1);

325 i‡(
Áu…
 !
md_Áu…_n⁄e
)

326  
Áu…
;

327 
n
++;

328 } 
c
);

332  
md_Áu…_öã∫Æ
;

336  
md_Áu…_n⁄e
;

337 
	}
}

340 
md_Áu…_ty≥


341 
	$mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

342 
mem_t
 *
mem
,

343 
mem_cmd
 
cmd
,

344 
md_addr_t
 
addr
,

345 *
vp
,

346 
nbyãs
)

348 
byã_t
 *
p
 = 
vp
;

349 
md_Áu…_ty≥
 
Áu…
;

352 
nbyãs
-- > 0)

354 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
++, 
p
++, 1);

355 i‡(
Áu…
 !
md_Áu…_n⁄e
)

356  
Áu…
;

360  
md_Áu…_n⁄e
;

361 
	}
}

366 
md_Áu…_ty≥


367 
	$mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

368 
mem_t
 *
mem
,

369 
mem_cmd
 
cmd
,

370 
md_addr_t
 
addr
,

371 *
vp
,

372 
nbyãs
)

374 
byã_t
 *
p
 = 
vp
;

375 
w‹ds
 = 
nbyãs
 >> 2;

376 
md_Áu…_ty≥
 
Áu…
;

378 
w‹ds
-- > 0)

380 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
, 
p
, (
w‹d_t
));

381 i‡(
Áu…
 !
md_Áu…_n⁄e
)

382  
Áu…
;

384 
addr
 +(
w‹d_t
);

385 
p
 +(
w‹d_t
);

389  
md_Áu…_n⁄e
;

390 
	}
}

393 
md_Áu…_ty≥


394 
	$mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

395 
mem_t
 *
mem
,

396 
md_addr_t
 
addr
,

397 
nbyãs
)

399 
byã_t
 
c
 = 0;

400 
md_Áu…_ty≥
 
Áu…
;

403 
nbyãs
-- > 0)

405 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1);

406 i‡(
Áu…
 !
md_Áu…_n⁄e
)

407  
Áu…
;

411  
md_Áu…_n⁄e
;

412 
	}
}

478 
SS_ADDR_TYPE
 
mem_brk_poöt
;

481 
SS_ADDR_TYPE
 
mem_°ack_mö
;

488 
	#MEM_TABLE_SIZE
 0x8000

	)

490 #i‚de‡
HIDE_MEM_TABLE_DEF


492 *
mem_èbÀ
[
MEM_TABLE_SIZE
];

496 
	#MEM_BLOCK_SIZE
 0x10000

	)

500 (
	gaddr
 >
ld_ãxt_ba£
 && 
addr
 < (ld_ãxt_ba£+
ld_ãxt_size
)

501 && 
cmd
 =
Ród
)

503 || (
addr
 >
ld_d©a_ba£
 &&ádd∏< 
ld_°ack_ba£
)))

504 
Áèl
("ac˚s†îr‹: segmíèti⁄ viﬁ©i⁄,ádd∏0x%08p", 
addr
);

507 i‡(
	gaddr
 > 
	gmem_brk_poöt
 &&ádd∏< 
	gmem_°ack_mö
)

508 
	gmem_°ack_mö
 = 
addr
;

512 
mem_vÆid
(
mem_t
 *
mem
,

513 
mem_cmd
 
cmd
,

514 
md_addr_t
 
addr
,

515 
nbyãs
,

516 
de˛¨e
);

520 
	$mem_vÆid
(
mem_cmd
 
cmd
,

521 
SS_ADDR_TYPE
 
addr
,

522 
nbyãs
,

523 
de˛¨e
)

525 *
îr_°r
 = 
NULL
;

528 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

530 
îr_°r
 = "bad size orálignment";

534 (
addr
 >
ld_ãxt_ba£
 &&ádd∏< (ld_ãxt_ba£+
ld_ãxt_size
)

535 && 
cmd
 =
Ród
)

537 || (
addr
 >
ld_d©a_ba£
 &&ádd∏< 
ld_°ack_ba£
)))

539 
îr_°r
 = "segmentation violation";

543 i‡(
addr
 > 
mem_brk_poöt
 &&ádd∏< 
mem_°ack_mö
)

544 
mem_°ack_mö
 = 
addr
;

546 i‡(!
de˛¨e
)

547  
îr_°r
;

548 i‡(
îr_°r
 !
NULL
)

549 
	`Áèl
(
îr_°r
);

551  
NULL
;

552 
	}
}

556 
	$mem_öô1
()

560 
mem_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
SS_PAGE_SIZE
);

563 
mem_°ack_mö
 = 
ªgs_R
[
SS_STACK_REGNO
];

564 
	}
}

	@memory.h

52 #i‚de‡
MEMORY_H


53 
	#MEMORY_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"›ti⁄s.h
"

61 
	~"°©s.h
"

64 
	#MEM_PTAB_SIZE
 (32*1024)

	)

65 
	#MEM_LOG_PTAB_SIZE
 15

	)

68 
	smem_±e_t
 {

69 
mem_±e_t
 *
	m√xt
;

70 
md_addr_t
 
	mèg
;

71 
byã_t
 *
	m∑ge
;

75 
	smem_t
 {

77 *
	m«me
;

78 
mem_±e_t
 *
	m±ab
[
MEM_PTAB_SIZE
];

81 
cou¡î_t
 
	m∑ge_cou¡
;

82 
cou¡î_t
 
	m±ab_mis£s
;

83 
cou¡î_t
 
	m±ab_ac˚s£s
;

87 
	emem_cmd
 {

88 
	mRód
,

89 
	mWrôe


94 
	gmd_Áu…_ty≥


95 (*
	tmem_ac˚ss_‚
)(
	tmem_t
 *
	tmem
,

96 
	tmem_cmd
 
	tcmd
,

97 
	tmd_addr_t
 
	taddr
,

98 *
	tp
,

99 
	tnbyãs
);

106 
	#MEM_PTAB_SET
(
ADDR
) \

107 (((
ADDR
Ë>> 
MD_LOG_PAGE_SIZE
Ë& (
MEM_PTAB_SIZE
 - 1))

	)

110 
	#MEM_PTAB_TAG
(
ADDR
) \

111 ((
ADDR
Ë>> (
MD_LOG_PAGE_SIZE
 + 
MEM_LOG_PTAB_SIZE
))

	)

114 
	#MEM_PTE_ADDR
(
PTE
, 
IDX
) \

115 (((
PTE
)->
èg
 << (
MD_LOG_PAGE_SIZE
 + 
MEM_LOG_PTAB_SIZE
)) \

116 | ((
IDX
Ë<< 
MD_LOG_PAGE_SIZE
))

	)

119 
	#MEM_PAGE
(
MEM
, 
ADDR
) \

121 ((
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)] \

122 && (
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)]->
èg
 =
	`MEM_PTAB_TAG
(ADDR)) \

124 (
MEM
)->
±ab_ac˚s£s
++, \

125 (
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)]->
∑ge
) \

127 
	`mem_å™¶©e
((
MEM
), (
ADDR
))))

	)

130 
	#MEM_OFFSET
(
ADDR
Ë((ADDRË& (
MD_PAGE_SIZE
 - 1))

	)

133 
	#MEM_TICKLE
(
MEM
, 
ADDR
) \

134 (!
	`MEM_PAGE
(
MEM
, 
ADDR
) \

136 
	`mem_√w∑ge
(
MEM
, 
ADDR
)) \

137 : ( ()0))

	)

140 
	#MEM_FORALL
(
MEM
, 
ITER
, 
PTE
) \

141 (
ITER
)=0; (ITERË< 
MEM_PTAB_SIZE
; (ITER)++) \

142 (
PTE
)=(
MEM
)->
±ab
[
i
]; (PTEË!
NULL
; (PTE)=(PTE)->
√xt
)

	)

151 
	#MEM_READ
(
MEM
, 
ADDR
, 
TYPE
) \

152 (
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)) \

153 ? *((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))) \

154 : 0)

	)

157 
	#__UNCHK_MEM_READ
(
MEM
, 
ADDR
, 
TYPE
) \

158 (*((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))))

	)

162 
	#MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
) \

163 (
	`MEM_TICKLE
(
MEM
, (
md_addr_t
)(
ADDR
)), \

164 *((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

	)

167 
	#__UNCHK_MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
) \

168 (*((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

	)

172 
	#MEM_READ_BYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
byã_t
)

	)

173 
	#MEM_READ_SBYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
sbyã_t
)

	)

174 
	#MEM_READ_HALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
hÆf_t
))

	)

175 
	#MEM_READ_SHALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
shÆf_t
))

	)

176 
	#MEM_READ_WORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
w‹d_t
))

	)

177 
	#MEM_READ_SWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
sw‹d_t
))

	)

179 #ifde‡
HOST_HAS_QWORD


180 
	#MEM_READ_QWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
qw‹d_t
))

	)

181 
	#MEM_READ_SQWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
sqw‹d_t
))

	)

184 
	#MEM_WRITE_BYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
byã_t
, VAL)

	)

185 
	#MEM_WRITE_SBYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
sbyã_t
, VAL)

	)

186 
	#MEM_WRITE_HALF
(
MEM
, 
ADDR
, 
VAL
) \

187 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
hÆf_t
, 
	`MD_SWAPH
(
VAL
))

	)

188 
	#MEM_WRITE_SHALF
(
MEM
, 
ADDR
, 
VAL
) \

189 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
shÆf_t
, 
	`MD_SWAPH
(
VAL
))

	)

190 
	#MEM_WRITE_WORD
(
MEM
, 
ADDR
, 
VAL
) \

191 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
w‹d_t
, 
	`MD_SWAPW
(
VAL
))

	)

192 
	#MEM_WRITE_SWORD
(
MEM
, 
ADDR
, 
VAL
) \

193 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sw‹d_t
, 
	`MD_SWAPW
(
VAL
))

	)

194 
	#MEM_WRITE_SFLOAT
(
MEM
, 
ADDR
, 
VAL
) \

195 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sÊﬂt_t
, 
	`MD_SWAPW
(
VAL
))

	)

196 
	#MEM_WRITE_DFLOAT
(
MEM
, 
ADDR
, 
VAL
) \

197 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
dÊﬂt_t
, 
	`MD_SWAPQ
(
VAL
))

	)

199 #ifde‡
HOST_HAS_QWORD


200 
	#MEM_WRITE_QWORD
(
MEM
, 
ADDR
, 
VAL
) \

201 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
qw‹d_t
, 
	`MD_SWAPQ
(
VAL
))

	)

202 
	#MEM_WRITE_SQWORD
(
MEM
, 
ADDR
, 
VAL
) \

203 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sqw‹d_t
, 
	`MD_SWAPQ
(
VAL
))

	)

208 
mem_t
 *

209 
mem_¸óã
(*
«me
);

212 
byã_t
 *

213 
mem_å™¶©e
(
mem_t
 *
mem
,

214 
md_addr_t
 
addr
);

218 
mem_√w∑ge
(
mem_t
 *
mem
,

219 
md_addr_t
 
addr
);

224 
md_Áu…_ty≥


225 
mem_ac˚ss
(
mem_t
 *
mem
,

226 
mem_cmd
 
cmd
,

227 
md_addr_t
 
addr
,

228 *
vp
,

229 
nbyãs
);

233 
mem_ªg_°©s
(
mem_t
 *
mem
,

234 
°©_sdb_t
 *
sdb
);

238 
mem_öô
(
mem_t
 *
mem
);

241 
md_Áu…_ty≥


242 
mem_dump
(
mem_t
 *
mem
,

243 
md_addr_t
 
addr
,

244 
Àn
,

245 
FILE
 *
°ªam
);

258 
md_Áu…_ty≥


259 
mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

260 
mem_t
 *
mem
,

261 
mem_cmd
 
cmd
,

262 
md_addr_t
 
addr
,

263 *
s
);

266 
md_Áu…_ty≥


267 
mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

268 
mem_t
 *
mem
,

269 
mem_cmd
 
cmd
,

270 
md_addr_t
 
addr
,

271 *
vp
,

272 
nbyãs
);

277 
md_Áu…_ty≥


278 
mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

279 
mem_t
 *
mem
,

280 
mem_cmd
 
cmd
,

281 
md_addr_t
 
addr
,

282 *
vp
,

283 
nbyãs
);

286 
md_Áu…_ty≥


287 
mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

288 
mem_t
 *
mem
,

289 
md_addr_t
 
addr
,

290 
nbyãs
);

	@misc.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°d¨g.h
>

55 
	~<°rög.h
>

56 
	~<˘y≥.h
>

57 
	~<î∫o.h
>

59 #i‡
deföed
(
__Æpha
Ë|| deföed(
löux
)

60 
	~<uni°d.h
>

63 
	~"ho°.h
"

64 
	~"misc.h
"

65 
	~"machöe.h
"

68 
	gvîbo£
 = 
FALSE
;

70 #ifde‡
DEBUG


72 
	gdebuggög
 = 
FALSE
;

77 (*
hook_‚
)(
FILE
 *
°ªam
Ë
NULL
;

81 
	`Áèl_hook
((*
‚
)(
FILE
 *
°ªam
))

83 
hook_‚
 = 
‚
;

84 
	}
}

87 #ifde‡
__GNUC__


89 
	$_Áèl
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...)

92 
	$Áèl
(*
fmt
, ...)

95 
va_li°
 
v
;

96 
	`va_°¨t
(
v
, 
fmt
);

98 
	`Ârötf
(
°dîr
, "fatal: ");

99 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

100 #ifde‡
__GNUC__


101 i‡(
vîbo£
)

102 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

104 
	`Ârötf
(
°dîr
, "\n");

105 i‡(
hook_‚
)

106 (*
hook_‚
)(
°dîr
);

107 
	`exô
(1);

108 
	}
}

111 #ifde‡
__GNUC__


113 
	$_∑nic
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...)

116 
	$∑nic
(*
fmt
, ...)

119 
va_li°
 
v
;

120 
	`va_°¨t
(
v
, 
fmt
);

122 
	`Ârötf
(
°dîr
, "panic: ");

123 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

124 #ifde‡
__GNUC__


125 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

127 
	`Ârötf
(
°dîr
, "\n");

128 i‡(
hook_‚
)

129 (*
hook_‚
)(
°dîr
);

130 
	`ab‹t
();

131 
	}
}

134 #ifde‡
__GNUC__


136 
	$_w¨n
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...)

139 
	$w¨n
(*
fmt
, ...)

142 
va_li°
 
v
;

143 
	`va_°¨t
(
v
, 
fmt
);

145 
	`Ârötf
(
°dîr
, "warning: ");

146 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

147 #ifde‡
__GNUC__


148 i‡(
vîbo£
)

149 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

151 
	`Ârötf
(
°dîr
, "\n");

152 
	}
}

155 #ifde‡
__GNUC__


157 
	$_öfo
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...)

160 
	$öfo
(*
fmt
, ...)

163 
va_li°
 
v
;

164 
	`va_°¨t
(
v
, 
fmt
);

166 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

167 #ifde‡
__GNUC__


168 i‡(
vîbo£
)

169 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

171 
	`Ârötf
(
°dîr
, "\n");

172 
	}
}

174 #ifde‡
DEBUG


176 #ifde‡
__GNUC__


178 
	$_debug
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...)

181 
	$debug
(*
fmt
, ...)

184 
va_li°
 
v
;

185 
	`va_°¨t
(
v
, 
fmt
);

187 i‡(
debuggög
)

189 
	`Ârötf
(
°dîr
, "debug: ");

190 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

191 #ifde‡
__GNUC__


192 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

194 
	`Ârötf
(
°dîr
, "\n");

196 
	}
}

202 
	$my§™d
(
£ed
)

204 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

205 
	`§™d
(
£ed
);

207 
	`§™dom
(
£ed
);

209 
	}
}

213 
	$myønd
()

215 #i‡!
	`deföed
(
__Æpha
Ë&& !deföed(
unix
)

216 
	`øndom
();

219 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

220  
	`ønd
();

222  
	`øndom
();

224 
	}
}

229 
	$my°rdup
(*
s
)

231 *
buf
;

233 i‡(!(
buf
 = (*)
	`mÆloc
(
	`°æí
(
s
)+1)))

234  
NULL
;

235 
	`°r˝y
(
buf
, 
s
);

236  
buf
;

237 
	}
}

241 
	$my°ºchr
(*
s
, 
c
)

243 *
πnvÆ
 = 0;

246 i‡(*
s
 =
c
)

247 
πnvÆ
 = 
s
;

248 } *
s
++);

250  
πnvÆ
;

251 
	}
}

256 
	$my°ricmp
(*
s1
, *
s2
)

258 
u1
, 
u2
;

262 
u1
 = ()*
s1
++; u1 = 
	`tﬁowî
(u1);

263 
u2
 = ()*
s2
++; u2 = 
	`tﬁowî
(u2);

265 i‡(
u1
 !
u2
)

266  
u1
 - 
u2
;

267 i‡(
u1
 == '\0')

270 
	}
}

275 
	$gëc‹e
(
nbyãs
)

277  
	`ˇŒoc
(
nbyãs
, 1);

280 #i‡!
	`deföed
(
PURIFY
Ë&& !deföed(
_MSC_VER
)

281 *
p
 = (*)
	`sbrk
(
nbyãs
);

283 i‡(
p
 == (*)-1)

284  
NULL
;

287 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
_MSC_VER
)

288 
	`mem£t
(
p
, '\0', 
nbyãs
);

290 
	`bzîo
(
p
, 
nbyãs
);

292  
p
;

294  
	`ˇŒoc
(
nbyãs
, 1);

297 
	}
}

301 
	$log_ba£2
(
n
)

303 
powî
 = 0;

305 i‡(
n
 <= 0 || (n & (n-1)) != 0)

306 
	`∑nic
("log2() only works forÖositiveÖower ofÅwo values");

308 
n
 >>= 1)

309 
powî
++;

311  
powî
;

312 
	}
}

316 
	$ñ≠£d_time
(
£c
)

318 
t°r
[256];

319 
ãmp
[256];

321 i‡(
£c
 <= 0)

324 
t°r
[0] = '\0';

327 i‡(
£c
 >= 86400)

329 
	`•rötf
(
ãmp
, "%ldD ", 
£c
/86400);

330 
	`°rˇt
(
t°r
, 
ãmp
);

331 
£c
 = sec % 86400;

334 i‡(
£c
 >= 3600)

336 
	`•rötf
(
ãmp
, "%ldh ", 
£c
/3600);

337 
	`°rˇt
(
t°r
, 
ãmp
);

338 
£c
 = sec % 3600;

341 i‡(
£c
 >= 60)

343 
	`•rötf
(
ãmp
, "%ldm ", 
£c
/60);

344 
	`°rˇt
(
t°r
, 
ãmp
);

345 
£c
 = sec % 60;

348 i‡(
£c
 >= 1)

350 
	`•rötf
(
ãmp
, "%ld†", 
£c
);

351 
	`°rˇt
(
t°r
, 
ãmp
);

353 
t°r
[
	`°æí
(tstr)-1] = '\0';

354  
t°r
;

355 
	}
}

363 
	$exåa˘l
(
w‹d
,

364 
pos
,

365 
num
)

367 (((Ë
w‹d
 >> (
pos
 + 1 - 
num
)) & ~(~0 <<Çum));

368 
	}
}

370 
	#PUT
(
p
, 
n
) \

372 
¬
, 
cc
; \

374 
¬
 = 0;Ç¿< 
n
;Çn++) \

376 
cc
 = *(
p
+
¬
); \

377 *
obuf
++ = 
cc
; \

379 }

	)

381 
	#PAD
(
s
, 
n
) \

383 
¬
, 
cc
; \

385 
cc
 = *
s
; \

386 
¬
 = 
n
;Çn > 0;Çn--) \

387 *
obuf
++ = 
cc
; \

388 }

	)

390 #ifde‡
HOST_HAS_QWORD


391 
	#HIBITL
 
	`LL
(0x8000000000000000)

	)

392 
sqw‹d_t
 
	t¶¨geöt_t
;

393 
qw‹d_t
 
	tœrgeöt_t
;

395 
	#HIBITL
 0x80000000L

	)

396 
sw‹d_t
 
	t¶¨geöt_t
;

397 
w‹d_t
 
	tœrgeöt_t
;

401 
	$_lowdigô
(
¶¨geöt_t
 *
vÆ±r
)

408 
lowbô
 = ()(*
vÆ±r
 & 1);

409 
¶¨geöt_t
 
vÆue
 = (*
vÆ±r
 >> 1Ë& ~
HIBITL
;

411 *
vÆ±r
 = 
vÆue
 / 5;

412  ()(
vÆue
 % 5 * 2 + 
lowbô
 + '0');

413 
	}
}

417 
	$myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
)

419 
_bœnks
[] = " ";

420 
_zî€s
[] = "00000000000000000000";

423 
cou¡
 = 0;

426 
fcode
;

429 
width
, 
¥ec
;

432 
lzîo
;

435 
¥efixÀngth
;

438 
ŸhîÀngth
;

441 
	#PADZERO
 0x0001

	)

442 
	#RZERO
 0x0002

	)

443 
	#LZERO
 0x0004

	)

444 
	#DOTSEEN
 0x0008

	)

445 
	#LENGTH
 0x0010

	)

446 
Êagw‹d
;

449 
	#MAXDIGS
 22

	)

452 *
bp
, *
p
;

455 
k
, 
Ãadix
, 
mødix
;

458 *
¥efix
;

461 
buf
[
MAXDIGS
*4], 
buf1
[MAXDIGS*4];

464 *
èb
;

467 
¶¨geöt_t
 
vÆ
;

470 
dÊﬂt_t
 
fvÆ
;

474 
n
;

476 (
fcode
 = *
f‹m©
) != '\0' && fcode != '%')

478 *
obuf
++ = 
fcode
;

479 
f‹m©
++;

480 
cou¡
++;

483 i‡(
fcode
 == '\0')

486 *
obuf
 = '\0';

487  
obuf
;

496 
width
 = 
¥efixÀngth
 = 
ŸhîÀngth
 = 
Êagw‹d
 = 0;

497 
f‹m©
++;

499 
ch¨swôch
:

500 
fcode
 = *
f‹m©
++)

503 
Êagw‹d
 |
PADZERO
;

514 
num
 = 
fcode
 - '0';

515 
	`isdigô
(
fcode
 = *
f‹m©
))

517 
num
 =Çum * 10 + 
fcode
 - '0';

518 
f‹m©
++;

520 i‡(
Êagw‹d
 & 
DOTSEEN
)

521 
¥ec
 = 
num
;

523 
width
 = 
num
;

524 
ch¨swôch
;

528 
Êagw‹d
 |
DOTSEEN
;

529 
ch¨swôch
;

532 
Êagw‹d
 |
LENGTH
;

533 
ch¨swôch
;

536 #ifde‡
HOST_HAS_QWORD


537 
Êagw‹d
 |
LENGTH
;

540 
Êagw‹d
 |
DOTSEEN
;

541 i‡(!
width
)

542 
width
 = 12;

543 
¥ec
 = 0;

544 
¥o˚ss_Êﬂt
;

549 i‡(
Êagw‹d
 & 
LENGTH
)

550 
vÆ
 = 
	`va_¨g
(
v
, 
¶¨geöt_t
);

552 
vÆ
 = (
¶¨geöt_t
)
	`va_¨g
(
v
, 
sw‹d_t
);

555 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

558 i‡(
vÆ
 < 0)

560 
¥efix
 = "-";

561 
¥efixÀngth
 = 1;

563 i‡(
vÆ
 !(
¶¨geöt_t
)
HIBITL
)

564 
vÆ
 = -val;

568 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

572 
decimÆ
:

574 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

576 i‡(
qvÆ
 <= 9)

577 *--
bp
 = ()
qvÆ
 + '0';

581 
n
 = ()
qvÆ
;

582 
qvÆ
 /= 10;

583 *--
bp
 = 
n
 - ()
qvÆ
 * 10 + '0';

585 
qvÆ
 > 9);

586 *--
bp
 = ()
qvÆ
 + '0';

593 i‡(
Êagw‹d
 & 
LENGTH
)

594 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

596 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

599 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

601 i‡(
vÆ
 & 
HIBITL
)

602 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

603 
decimÆ
;

606 
mødix
 = 7;

607 
Ãadix
 = 2;

608 
fixed
;

611 i‡((
md_addr_t
) > 4)

612 
Êagw‹d
 |
LENGTH
;

617 
mødix
 = 15;

618 
Ãadix
 = 3;

620 
fixed
:

622 i‡(
Êagw‹d
 & 
LENGTH
)

623 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

625 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

628 
èb
 = (
fcode
 == 'X') ? "0123456789ABCDEF" : "0123456789abcdef";

631 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

634 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

636 i‡(
qvÆ
 == 0)

638 
ŸhîÀngth
 = 
lzîo
 = 1;

639 
Êagw‹d
 |
LZERO
;

643 *--
bp
 = 
èb
[
qvÆ
 & 
mødix
];

644 
qvÆ
 = ((qvÆ >> 1Ë& ~
HIBITL
Ë>> 
Ãadix
;

645 } 
qvÆ
 != 0);

649 #i‚de‡
HOST_HAS_QWORD


650 
¥o˚ss_Êﬂt
:

654 i‡(
Êagw‹d
 & 
DOTSEEN
)

655 
	`•rötf
(
buf1
, "%%%d.%df", 
width
, 
¥ec
);

656 i‡(
width
)

657 
	`•rötf
(
buf1
, "%%%df", 
width
);

659 
	`•rötf
(
buf1
, "%%f");

662 
fvÆ
 = 
	`va_¨g
(
v
, 
dÊﬂt_t
);

665 
	`•rötf
(
buf
, 
buf1
, 
fvÆ
);

666 
bp
 = 
buf
;

667 
p
 = 
bp
 + 
	`°æí
(bp);

671 
bp
 = 
	`va_¨g
(
v
, *);

672 i‡(
bp
 =
NULL
)

673 
bp
 = "(null)";

674 
p
 = 
bp
 + 
	`°æí
(bp);

678 
buf
[0] = 
fcode
;

679 
c_mîge
;

682 
buf
[0] = 
	`va_¨g
(
v
, );

683 
c_mîge
:

684 
p
 = (
bp
 = &
buf
[0]) + 1;

690 
f‹m©
--;

695 
k
 = (
n
 = 
p
 - 
bp
Ë+ 
¥efixÀngth
 + 
ŸhîÀngth
;

696 i‡(
width
 <
k
)

697 
cou¡
 +
k
;

700 
cou¡
 +
width
;

704 i‡(
Êagw‹d
 & 
PADZERO
)

706 i‡(!(
Êagw‹d
 & 
LZERO
))

708 
Êagw‹d
 |
LZERO
;

709 
lzîo
 = 
width
 - 
k
;

712 
lzîo
 +
width
 - 
k
;

715 
k
 = 
width
;

720 
	`PAD
(
_bœnks
, 
width
 - 
k
);

725 i‡(
¥efixÀngth
 != 0)

727 
	`PUT
(
¥efix
, 
¥efixÀngth
);

731 i‡(
Êagw‹d
 & 
LZERO
)

733 
	`PAD
(
_zî€s
, 
lzîo
);

737 i‡(
n
 > 0)

739 
	`PUT
(
bp
, 
n
);

742 
	}
}

746 
	$my•rötf
(*
obuf
, *
f‹m©
, ...)

749 
va_li°
 
v
;

750 
	`va_°¨t
(
v
, 
f‹m©
);

752  
	`myv•rötf
(
obuf
, 
f‹m©
, 
v
);

753 
	}
}

757 
	$myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
)

760 
buf
[2048];

762 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

763 
	`Âuts
(
buf
, 
°ªam
);

764 
	}
}

768 
	$myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...)

771 
buf
[2048];

774 
va_li°
 
v
;

775 
	`va_°¨t
(
v
, 
f‹m©
);

777 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

778 
	`Âuts
(
buf
, 
°ªam
);

779 
	}
}

781 #ifde‡
HOST_HAS_QWORD


783 
	#LL_MAX
 
	`LL
(9223372036854775807)

	)

784 
	#LL_MIN
 (-
LL_MAX
 - 1)

	)

785 
	#ULL_MAX
 (
	`ULL
(9223372036854775807Ë* ULL(2Ë+ 1)

	)

788 
sqw‹d_t


789 
	$my©osq
(*
≈å
, **
ídp
, 
ba£
)

791 *
s
, *
ßve
;

792 
√g©ive
, 
ovîÊow
;

793 
sqw‹d_t
 
cutoff
, 
cuéim
, 
i
;

794 
c
;

795 
î∫o
;

797 i‡(!
≈å
 || !*nptr)

798 
	`∑nic
("strtoll()Öassedá NULL string");

800 
s
 = 
≈å
;

803 
	`is•a˚
(()(*
s
)))

804 ++
s
;

805 i‡(*
s
 == '\0')

806 
noc⁄v
;

808 i‡(
ba£
 == 0)

810 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

811 
ba£
 = 16;

813 
ba£
 = 10;

816 i‡(
ba£
 <= 1 || base > 36)

817 
	`∑nic
("bogu†ba£: %d", 
ba£
);

820 i‡(*
s
 == '-')

822 
√g©ive
 = 1;

823 ++
s
;

825 i‡(*
s
 == '+')

827 
√g©ive
 = 0;

828 ++
s
;

831 
√g©ive
 = 0;

833 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

834 
s
 += 2;

837 
ßve
 = 
s
;

839 
cutoff
 = 
LL_MAX
 / (Ë
ba£
;

840 
cuéim
 = 
LL_MAX
 % (Ë
ba£
;

842 
ovîÊow
 = 0;

843 
i
 = 0;

844 
c
 = *
s
; c != '\0'; c = *++s)

846 i‡(
	`isdigô
 (
c
))

847 
c
 -= '0';

848 i‡(
	`ißÕha
 (
c
))

849 
c
 = 
	`touµî
(c) - 'A' + 10;

852 i‡(
c
 >
ba£
)

856 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

857 
ovîÊow
 = 1;

860 
i
 *(Ë
ba£
;

861 
i
 +
c
;

866 i‡(
s
 =
ßve
)

867 
noc⁄v
;

871 i‡(
ídp
 !
NULL
)

872 *
ídp
 = (*Ë
s
;

874 i‡(
ovîÊow
)

876 
î∫o
 = 
ERANGE
;

877  
√g©ive
 ? 
LL_MIN
 : 
LL_MAX
;

881 
î∫o
 = 0;

884  (
√g©ive
 ? -
i
 : i);

887 
noc⁄v
:

889 i‡(
ídp
 !
NULL
)

890 *
ídp
 = (*Ë
≈å
;

892 
	}
}

895 
qw‹d_t


896 
	$my©oq
(*
≈å
, **
ídp
, 
ba£
)

898 *
s
, *
ßve
;

899 
ovîÊow
;

900 
qw‹d_t
 
cutoff
, 
cuéim
, 
i
;

901 
c
;

902 
î∫o
;

904 i‡(!
≈å
 || !*nptr)

905 
	`∑nic
("strtoll()Öassedá NULL string");

907 
s
 = 
≈å
;

910 
	`is•a˚
(()(*
s
)))

911 ++
s
;

912 i‡(*
s
 == '\0')

913 
noc⁄v
;

915 i‡(
ba£
 == 0)

917 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

918 
ba£
 = 16;

920 
ba£
 = 10;

923 i‡(
ba£
 <= 1 || base > 36)

924 
	`∑nic
("bogu†ba£: %d", 
ba£
);

926 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

927 
s
 += 2;

930 
ßve
 = 
s
;

932 
cutoff
 = 
ULL_MAX
 / (Ë
ba£
;

933 
cuéim
 = 
ULL_MAX
 % (Ë
ba£
;

935 
ovîÊow
 = 0;

936 
i
 = 0;

937 
c
 = *
s
; c != '\0'; c = *++s)

939 i‡(
	`isdigô
 (
c
))

940 
c
 -= '0';

941 i‡(
	`ißÕha
 (
c
))

942 
c
 = 
	`touµî
(c) - 'A' + 10;

945 i‡(
c
 >
ba£
)

949 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

950 
ovîÊow
 = 1;

953 
i
 *(Ë
ba£
;

954 
i
 +
c
;

959 i‡(
s
 =
ßve
)

960 
noc⁄v
;

964 i‡(
ídp
 !
NULL
)

965 *
ídp
 = (*Ë
s
;

967 i‡(
ovîÊow
)

969 
î∫o
 = 
ERANGE
;

970  
ULL_MAX
;

974 
î∫o
 = 0;

977  
i
;

980 
noc⁄v
:

982 i‡(
ídp
 !
NULL
)

983 *
ídp
 = (*Ë
≈å
;

985 
	}
}

987 #ifde‡
TESTIT


989 
	$ã°ô
(*
s
)

991 
buf
[128];

992 
qw‹d_t
 
qvÆ
;

994 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 10);

996 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

997 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

998 
	`myqtﬂ
(
qvÆ
, "%16x", 
buf
, 
NULL
);

999 
	`Ârötf
(
°dîr
, "16x: %s\n", 
buf
);

1000 
	`myqtﬂ
(
qvÆ
, "%016x", 
buf
, 
NULL
);

1001 
	`Ârötf
(
°dîr
, "016x: %s\n", 
buf
);

1002 
	`myqtﬂ
(
qvÆ
, "0x%016x", 
buf
, 
NULL
);

1003 
	`Ârötf
(
°dîr
, "0x016x: %s\n", 
buf
);

1004 
	`myqtﬂ
(
qvÆ
, "0x%08x", 
buf
, 
NULL
);

1005 
	`Ârötf
(
°dîr
, "0x08x: %s\n", 
buf
);

1007 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1008 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1009 
	`myqtﬂ
(
qvÆ
, "%22d", 
buf
, 
NULL
);

1010 
	`Ârötf
(
°dîr
, "22d: %s\n", 
buf
);

1011 
	`myqtﬂ
(
qvÆ
, "%022d", 
buf
, 
NULL
);

1012 
	`Ârötf
(
°dîr
, "022d: %s\n", 
buf
);

1014 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1015 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1017 
	`myqtﬂ
(
qvÆ
, "%o", 
buf
, 
NULL
);

1018 
	`Ârötf
(
°dîr
, "o: %s\n", 
buf
);

1019 
	}
}

1022 
	$°e°ô
(*
s
)

1024 
buf
[128];

1025 
sqw‹d_t
 
sqvÆ
;

1027 
sqvÆ
 = 
	`my©osq
(
s
, 
NULL
, 10);

1029 
	`myqtﬂ
(
sqvÆ
, "%x", 
buf
, 
NULL
);

1030 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1032 
	`myqtﬂ
(
sqvÆ
, "%d", 
buf
, 
NULL
);

1033 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1035 
	`myqtﬂ
(
sqvÆ
, "%u", 
buf
, 
NULL
);

1036 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1037 
	}
}

1040 
	$xã°ô
(*
s
)

1042 
buf
[128];

1043 
qw‹d_t
 
qvÆ
;

1045 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 16);

1047 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

1048 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1050 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1051 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1053 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1054 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1055 
	}
}

1060 #ifde‡
GZIP_PATH


1063 *
	mty≥
;

1064 *
	mext
;

1065 *
	mcmd
;

1066 } 
	ggzcmds
[] = {

1078 
FILE
 *

1079 
	$gz›í
(*
‚ame
, *
ty≥
)

1081 
i
;

1082 *
cmd
 = 
NULL
, *
ext
;

1083 
FILE
 *
fd
;

1084 
°r
[2048];

1087 
ext
 = 
	`my°ºchr
(
‚ame
, '.');

1090 i‡(
ext
 !
NULL
 && *ext != '\0')

1092 
i
=0; i < 
	`N_ELT
(
gzcmds
); i++)

1094 i‡(!
	`°rcmp
(
gzcmds
[
i
].
ty≥
,Åy≥Ë&& !°rcmp(gzcmds[i].
ext
,Éxt))

1096 
cmd
 = 
gzcmds
[
i
].cmd;

1102 i‡(!
cmd
)

1105 
fd
 = 
	`f›í
(
‚ame
, 
ty≥
);

1110 
	`•rötf
(
°r
, 
cmd
, 
GZIP_PATH
, 
‚ame
);

1111 
fd
 = 
	`p›í
(
°r
, 
ty≥
);

1114  
fd
;

1115 
	}
}

1119 
	$gz˛o£
(
FILE
 *
fd
)

1122 i‡(
	`p˛o£
(
fd
) == -1)

1123 
	`f˛o£
(
fd
);

1124 
	}
}

1128 
FILE
 *

1129 
	$gz›í
(*
‚ame
, *
ty≥
)

1131  
	`f›í
(
‚ame
, 
ty≥
);

1132 
	}
}

1135 
	$gz˛o£
(
FILE
 *
fd
)

1137 
	`f˛o£
(
fd
);

1138 
	}
}

1144 
	#POLYNOMIAL
 0x04c11db7L

	)

1146 
	g¸c_öô
 = 
FALSE
;

1147 
	g¸c_èbÀ
[256];

1151 
	$¸c_gíèb
()

1153 
i
, 
j
;

1154 
w‹d_t
 
¸c_accum
;

1156 
i
=0; i < 256; i++)

1158 
¸c_accum
 = (()
i
 << 24);

1159 
j
=0; j < 8; j++)

1161 i‡(
¸c_accum
 & 0x80000000L)

1162 
¸c_accum
 = (¸c_accum << 1Ë^ 
POLYNOMIAL
;

1164 
¸c_accum
 = (crc_accum << 1);

1166 
¸c_èbÀ
[
i
] = 
¸c_accum
;

1169 
	}
}

1172 
w‹d_t


1173 
	$¸c
(
w‹d_t
 
¸c_accum
, w‹d_à
d©a
)

1175 
i
, 
j
;

1177 i‡(!
¸c_öô
)

1179 
	`¸c_gíèb
();

1180 
¸c_öô
 = 
TRUE
;

1183 
j
=0; j < (
w‹d_t
); j++)

1185 
i
 = (()(
¸c_accum
 >> 24Ë^ (
d©a
 >> (
j
*8))) & 0xff;

1186 
¸c_accum
 = (¸c_accum << 8Ë^ 
¸c_èbÀ
[
i
];

1188  
¸c_accum
;

1189 
	}
}

	@misc.h

52 #i‚de‡
MISC_H


53 
	#MISC_H


	)

55 
	~<°dio.h
>

56 
	~<°dlib.h
>

57 
	~<°d¨g.h
>

58 
	~<°rög.h
>

59 
	~<sys/ty≥s.h
>

62 #i‚de‡
TRUE


63 
	#TRUE
 1

	)

65 #i‚de‡
FALSE


66 
	#FALSE
 0

	)

70 #i‚de‡
MAX


71 
	#MAX
(
a
, 
b
Ë((◊Ë< (b)Ë? (bË: (a))

	)

73 #i‚de‡
MIN


74 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

78 
	#LLHIGH
(
L
Ë(()(((L)>>32Ë& 0xffffffff))

	)

79 
	#LLLOW
(
L
Ë(()((LË& 0xffffffff))

	)

82 
	#N_ELT
(
ARR
Ë((ARR)/((ARR)[0]))

	)

85 
	#ROUND_UP
(
N
,
ALIGN
Ë(((NË+ ((ALIGN)-1)Ë& ~((ALIGN)-1))

	)

86 
	#ROUND_DOWN
(
N
,
ALIGN
Ë((NË& ~((ALIGN)-1))

	)

89 
vîbo£
;

91 #ifde‡
DEBUG


93 
debuggög
;

98 
Áèl_hook
((*
hook_‚
)(
FILE
 *
°ªam
));

100 #ifde‡
__GNUC__


102 
	#Áèl
(
fmt
, 
¨gs
...) \

103 
	`_Áèl
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

106 
	$_Áèl
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...)

107 
	`__©åibuã__
 ((
n‹ëu∫
));

110 
	`Áèl
(*
fmt
, ...);

113 #ifde‡
__GNUC__


115 
	#∑nic
(
fmt
, 
¨gs
...) \

116 
	`_∑nic
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

119 
	$_∑nic
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...)

120 
	`__©åibuã__
 ((
n‹ëu∫
));

123 
	`∑nic
(*
fmt
, ...);

126 #ifde‡
__GNUC__


128 
	#w¨n
(
fmt
, 
¨gs
...) \

129 
	`_w¨n
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

132 
	`_w¨n
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...);

135 
	`w¨n
(*
fmt
, ...);

138 #ifde‡
__GNUC__


140 
	#öfo
(
fmt
, 
¨gs
...) \

141 
	`_öfo
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

144 
	`_öfo
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...);

147 
	`öfo
(*
fmt
, ...);

150 #ifde‡
DEBUG


152 #ifde‡
__GNUC__


154 
	#debug
(
fmt
, 
¨gs
...) \

156 i‡(
debuggög
) \

157 
	`_debug
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
); \

158 
	}
} 0)

	)

161 
_debug
(*
fûe
, c⁄° *
func
, 
löe
, *
fmt
, ...);

164 
debug
(*
fmt
, ...);

169 #ifde‡
__GNUC__


170 
	#debug
(
fmt
, 
¨gs
...)

	)

173 
	$debug
(*
fmt
, ...Ë{
	}
}

180 
my§™d
(
£ed
);

183 
myønd
();

188 
my°rdup
(*
s
);

192 
my°ºchr
(*
s
, 
c
);

197 
my°ricmp
(*
s1
, *
s2
);

201 *
gëc‹e
(
nbyãs
);

204 
log_ba£2
(
n
);

207 *
ñ≠£d_time
(
£c
);

215 
exåa˘l
(
w‹d
,

216 
pos
,

217 
num
);

219 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

220 
	#°πoul
 
°πﬁ


	)

226 *
myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
);

229 *
my•rötf
(*
obuf
, *
f‹m©
, ...);

232 
myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
);

235 
myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...);

237 #ifde‡
HOST_HAS_QWORD


240 
sqw‹d_t
 
my©osq
(*
≈å
, **
ídp
, 
ba£
);

243 
qw‹d_t
 
my©oq
(*
≈å
, **
ídp
, 
ba£
);

249 
FILE
 *
gz›í
(*
‚ame
, *
ty≥
);

252 
gz˛o£
(
FILE
 *
fd
);

255 
w‹d_t
 
¸c
(w‹d_à
¸c_accum
, w‹d_à
d©a
);

	@options.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #i‚de‡
_MSC_VER


55 
	~<uni°d.h
>

57 
	#chdú
 
_chdú


	)

58 
	#gëcwd
 
_gëcwd


	)

60 
	~<°rög.h
>

61 
	~<˘y≥.h
>

62 
	~<Êﬂt.h
>

64 
	~"ho°.h
"

65 
	~"misc.h
"

66 
	~"›ti⁄s.h
"

69 
›t_odb_t
 *

70 
	$›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
)

72 
›t_odb_t
 *
odb
;

74 
odb
 = (
›t_odb_t
 *)
	`ˇŒoc
(1, (opt_odb_t));

75 i‡(!
odb
)

76 
	`Áèl
("out of virtual memory");

78 
odb
->
›ti⁄s
 = 
NULL
;

79 
odb
->
‹ph™_‚
 = orphan_fn;

80 
odb
->
hódî
 = 
NULL
;

81 
odb
->
nŸes
 = 
NULL
;

83  
odb
;

84 
	}
}

88 
	$›t_dñëe
(
›t_odb_t
 *
odb
)

90 
›t_›t_t
 *
›t
, *
›t_√xt
;

91 
›t_nŸe_t
 *
nŸe
, *
nŸe_√xt
;

94 
›t
=
odb
->
›ti⁄s
; o±; o±=
›t_√xt
)

96 
›t_√xt
 = 
›t
->
√xt
;

97 
›t
->
√xt
 = 
NULL
;

98 
	`‰ì
(
›t
);

102 
nŸe
 = 
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸê
nŸe_√xt
)

104 
nŸe_√xt
 = 
nŸe
->
√xt
;

105 
nŸe
->
√xt
 = 
NULL
;

106 
	`‰ì
(
nŸe
);

108 
odb
->
nŸes
 = 
NULL
;

110 
	`‰ì
(
odb
);

111 
	}
}

115 
	$add_›ti⁄
(
›t_odb_t
 *
odb
,

116 
›t_›t_t
 *
›t
)

118 
›t_›t_t
 *
ñt
, *
¥ev
;

121 i‡(
›t
->
«me
[0] != '-')

122 
	`∑nic
("›ti⁄ `%s' mu° sèπ wôhá `-'", 
›t
->
«me
);

125 
¥ev
=
NULL
, 
ñt
=
odb
->
›ti⁄s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

128 i‡(
ñt
->
«me
[0] =
›t
->«me[0] && !
	`°rcmp
(elt->name, opt->name))

129 
	`∑nic
("›ti⁄ `%s' i†mu…ùly deföed", 
›t
->
«me
);

132 i‡(
¥ev
 !
NULL
)

133 
¥ev
->
√xt
 = 
›t
;

135 
odb
->
›ti⁄s
 = 
›t
;

136 
›t
->
√xt
 = 
NULL
;

137 
	}
}

141 
	$›t_ªg_öt
(
›t_odb_t
 *
odb
,

142 *
«me
,

143 *
desc
,

144 *
v¨
,

145 
def_vÆ
,

146 
¥öt
,

147 *
f‹m©
)

149 
›t_›t_t
 *
›t
;

151 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

152 i‡(!
›t
)

153 
	`Áèl
("out of virtual memory");

155 
›t
->
«me
 =Çame;

156 
›t
->
desc
 = desc;

157 
›t
->
nv¨s
 = 1;

158 
›t
->
√…
 = 
NULL
;

159 
›t
->
f‹m©
 = format ? format : "%12d";

160 
›t
->
oc
 = 
oc_öt
;

161 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

162 
›t
->
¥öt
 =Örint;

163 
›t
->
ac¸ue
 = 
FALSE
;

166 
›t
->
√xt
 = 
NULL
;

167 
	`add_›ti⁄
(
odb
, 
›t
);

170 *
v¨
 = 
def_vÆ
;

171 
	}
}

175 
	$›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨s
,

179 
nv¨s
,

180 *
√…
,

181 *
def_vÆ
,

182 
¥öt
,

183 *
f‹m©
,

184 
ac¸ue
)

186 
i
;

187 
›t_›t_t
 *
›t
;

189 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

190 i‡(!
›t
)

191 
	`Áèl
("out of virtual memory");

193 
›t
->
«me
 =Çame;

194 
›t
->
desc
 = desc;

195 
›t
->
nv¨s
 =Çvars;

196 
›t
->
√…
 =Çelt;

197 
›t
->
f‹m©
 = format ? format : "%d";

198 
›t
->
oc
 = 
oc_öt
;

199 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = 
v¨s
;

200 
›t
->
¥öt
 =Örint;

201 
›t
->
ac¸ue
 =áccrue;

204 
›t
->
√xt
 = 
NULL
;

205 
	`add_›ti⁄
(
odb
, 
›t
);

208 
i
=0; i < *
√…
; i++)

209 
v¨s
[
i
] = 
def_vÆ
[i];

210 
	}
}

214 
	$›t_ªg_uöt
(
›t_odb_t
 *
odb
,

215 *
«me
,

216 *
desc
,

217 *
v¨
,

218 
def_vÆ
,

219 
¥öt
,

220 *
f‹m©
)

222 
›t_›t_t
 *
›t
;

224 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

225 i‡(!
›t
)

226 
	`Áèl
("out of virtual memory");

228 
›t
->
«me
 =Çame;

229 
›t
->
desc
 = desc;

230 
›t
->
nv¨s
 = 1;

231 
›t
->
√…
 = 
NULL
;

232 
›t
->
f‹m©
 = format ? format : "%12u";

233 
›t
->
oc
 = 
oc_uöt
;

234 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

235 
›t
->
¥öt
 =Örint;

236 
›t
->
ac¸ue
 = 
FALSE
;

239 
›t
->
√xt
 = 
NULL
;

240 
	`add_›ti⁄
(
odb
, 
›t
);

243 *
v¨
 = 
def_vÆ
;

244 
	}
}

248 
	$›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

249 *
«me
,

250 *
desc
,

251 *
v¨s
,

252 
nv¨s
,

253 *
√…
,

254 *
def_vÆ
,

255 
¥öt
,

256 *
f‹m©
,

257 
ac¸ue
)

259 
i
;

260 
›t_›t_t
 *
›t
;

262 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

263 i‡(!
›t
)

264 
	`Áèl
("out of virtual memory");

266 
›t
->
«me
 =Çame;

267 
›t
->
desc
 = desc;

268 
›t
->
nv¨s
 =Çvars;

269 
›t
->
√…
 =Çelt;

270 
›t
->
f‹m©
 = format ? format : "%u";

271 
›t
->
oc
 = 
oc_uöt
;

272 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = 
v¨s
;

273 
›t
->
¥öt
 =Örint;

274 
›t
->
ac¸ue
 =áccrue;

277 
›t
->
√xt
 = 
NULL
;

278 
	`add_›ti⁄
(
odb
, 
›t
);

281 
i
=0; i < *
√…
; i++)

282 
v¨s
[
i
] = 
def_vÆ
[i];

283 
	}
}

287 
	$›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨
,

291 
def_vÆ
,

292 
¥öt
,

293 *
f‹m©
)

295 
›t_›t_t
 *
›t
;

297 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

298 i‡(!
›t
)

299 
	`Áèl
("out of virtual memory");

301 
›t
->
«me
 =Çame;

302 
›t
->
desc
 = desc;

303 
›t
->
nv¨s
 = 1;

304 
›t
->
√…
 = 
NULL
;

305 
›t
->
f‹m©
 = format ? format : "%12.4f";

306 
›t
->
oc
 = 
oc_Êﬂt
;

307 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

308 
›t
->
¥öt
 =Örint;

309 
›t
->
ac¸ue
 = 
FALSE
;

312 
›t
->
√xt
 = 
NULL
;

313 
	`add_›ti⁄
(
odb
, 
›t
);

316 *
v¨
 = 
def_vÆ
;

317 
	}
}

321 
	$›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

322 *
«me
,

323 *
desc
,

324 *
v¨s
,

325 
nv¨s
,

326 *
√…
,

327 *
def_vÆ
,

328 
¥öt
,

329 *
f‹m©
,

330 
ac¸ue
)

332 
i
;

333 
›t_›t_t
 *
›t
;

335 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

336 i‡(!
›t
)

337 
	`Áèl
("out of virtual memory");

339 
›t
->
«me
 =Çame;

340 
›t
->
desc
 = desc;

341 
›t
->
nv¨s
 =Çvars;

342 
›t
->
√…
 =Çelt;

343 
›t
->
f‹m©
 = format ? format : "%.4f";

344 
›t
->
oc
 = 
oc_Êﬂt
;

345 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = 
v¨s
;

346 
›t
->
¥öt
 =Örint;

347 
›t
->
ac¸ue
 =áccrue;

350 
›t
->
√xt
 = 
NULL
;

351 
	`add_›ti⁄
(
odb
, 
›t
);

354 
i
=0; i < *
√…
; i++)

355 
v¨s
[
i
] = 
def_vÆ
[i];

356 
	}
}

360 
	$›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

361 *
«me
,

362 *
desc
,

363 *
v¨
,

364 
def_vÆ
,

365 
¥öt
,

366 *
f‹m©
)

368 
›t_›t_t
 *
›t
;

370 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

371 i‡(!
›t
)

372 
	`Áèl
("out of virtual memory");

374 
›t
->
«me
 =Çame;

375 
›t
->
desc
 = desc;

376 
›t
->
nv¨s
 = 1;

377 
›t
->
√…
 = 
NULL
;

378 
›t
->
f‹m©
 = format ? format : "%12.4f";

379 
›t
->
oc
 = 
oc_doubÀ
;

380 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

381 
›t
->
¥öt
 =Örint;

382 
›t
->
ac¸ue
 = 
FALSE
;

385 
›t
->
√xt
 = 
NULL
;

386 
	`add_›ti⁄
(
odb
, 
›t
);

389 *
v¨
 = 
def_vÆ
;

390 
	}
}

394 
	$›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

395 *
«me
,

396 *
desc
,

397 *
v¨s
,

398 
nv¨s
,

399 *
√…
,

400 *
def_vÆ
,

401 
¥öt
,

402 *
f‹m©
,

403 
ac¸ue
)

405 
i
;

406 
›t_›t_t
 *
›t
;

408 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

409 i‡(!
›t
)

410 
	`Áèl
("out of virtual memory");

412 
›t
->
«me
 =Çame;

413 
›t
->
desc
 = desc;

414 
›t
->
nv¨s
 =Çvars;

415 
›t
->
√…
 =Çelt;

416 
›t
->
f‹m©
 = format ? format : "%.4f";

417 
›t
->
oc
 = 
oc_doubÀ
;

418 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = 
v¨s
;

419 
›t
->
¥öt
 =Örint;

420 
›t
->
ac¸ue
 =áccrue;

423 
›t
->
√xt
 = 
NULL
;

424 
	`add_›ti⁄
(
odb
, 
›t
);

427 
i
=0; i < *
√…
; i++)

428 
v¨s
[
i
] = 
def_vÆ
[i];

429 
	}
}

433 
	$böd_to_íum
(*
°r
,

434 **
em≠
,

435 *
evÆ
,

436 
em≠_sz
,

437 *
ªs
)

439 
i
;

442 
i
=0; i<
em≠_sz
; i++)

444 i‡(!
	`°rcmp
(
°r
, 
em≠
[
i
]))

446 i‡(
evÆ
)

449 *
ªs
 = 
evÆ
[
i
];

454 *
ªs
 = 
i
;

456  
TRUE
;

461 *
ªs
 = -1;

462  
FALSE
;

463 
	}
}

467 
	$böd_to_°r
(
vÆ
,

468 **
em≠
,

469 *
evÆ
,

470 
em≠_sz
)

472 
i
;

474 i‡(
evÆ
)

477 
i
=0; i<
em≠_sz
; i++)

479 i‡(
evÆ
[
i
] =
vÆ
)

482  
em≠
[
i
];

486  
NULL
;

491 i‡(
vÆ
 >
em≠_sz
)

494  
NULL
;

497  
em≠
[
vÆ
];

499 
	}
}

505 
	$›t_ªg_íum
(
›t_odb_t
 *
odb
,

506 *
«me
,

507 *
desc
,

508 *
v¨
,

509 *
def_vÆ
,

510 **
em≠
,

511 *
evÆ
,

512 
em≠_sz
,

513 
¥öt
,

514 *
f‹m©
)

516 
íum_vÆ
;

517 
›t_›t_t
 *
›t
;

519 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

520 i‡(!
›t
)

521 
	`Áèl
("out of virtual memory");

523 
›t
->
«me
 =Çame;

524 
›t
->
desc
 = desc;

525 
›t
->
nv¨s
 = 1;

526 
›t
->
√…
 = 
NULL
;

527 
›t
->
f‹m©
 = format ? format : "%12s";

528 
›t
->
oc
 = 
oc_íum
;

529 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

530 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

531 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

532 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

533 i‡(
def_vÆ
)

535 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

536 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

539 
íum_vÆ
 = 0;

540 
›t
->
¥öt
 =Örint;

541 
›t
->
ac¸ue
 = 
FALSE
;

544 
›t
->
√xt
 = 
NULL
;

545 
	`add_›ti⁄
(
odb
, 
›t
);

548 *
v¨
 = 
íum_vÆ
;

549 
	}
}

555 
	$›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

556 *
«me
,

557 *
desc
,

558 *
v¨s
,

559 
nv¨s
,

560 *
√…
,

561 *
def_vÆ
,

562 **
em≠
,

563 *
evÆ
,

564 
em≠_sz
,

565 
¥öt
,

566 *
f‹m©
,

567 
ac¸ue
)

569 
i
, 
íum_vÆ
;

570 
›t_›t_t
 *
›t
;

572 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

573 i‡(!
›t
)

574 
	`Áèl
("out of virtual memory");

576 
›t
->
«me
 =Çame;

577 
›t
->
desc
 = desc;

578 
›t
->
nv¨s
 =Çvars;

579 
›t
->
√…
 =Çelt;

580 
›t
->
f‹m©
 = format ? format : "%s";

581 
›t
->
oc
 = 
oc_íum
;

582 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

583 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

584 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

585 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

586 i‡(
def_vÆ
)

588 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

589 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

592 
íum_vÆ
 = 0;

593 
›t
->
¥öt
 =Örint;

594 
›t
->
ac¸ue
 =áccrue;

597 
›t
->
√xt
 = 
NULL
;

598 
	`add_›ti⁄
(
odb
, 
›t
);

601 
i
=0; i < *
√…
; i++)

602 
v¨s
[
i
] = 
íum_vÆ
;

603 
	}
}

606 
	#NUM_FLAGS
 28

	)

607 *
	gÊag_em≠
[
NUM_FLAGS
] = {

613 
	gÊag_evÆ
[
NUM_FLAGS
] = {

620 
	$›t_ªg_Êag
(
›t_odb_t
 *
odb
,

621 *
«me
,

622 *
desc
,

623 *
v¨
,

624 
def_vÆ
,

625 
¥öt
,

626 *
f‹m©
)

628 
›t_›t_t
 *
›t
;

630 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

631 i‡(!
›t
)

632 
	`Áèl
("out of virtual memory");

634 
›t
->
«me
 =Çame;

635 
›t
->
desc
 = desc;

636 
›t
->
nv¨s
 = 1;

637 
›t
->
√…
 = 
NULL
;

638 
›t
->
f‹m©
 = format ? format : "%12s";

639 
›t
->
oc
 = 
oc_Êag
;

640 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

641 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

642 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

643 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

644 
›t
->
¥öt
 =Örint;

645 
›t
->
ac¸ue
 = 
FALSE
;

648 
›t
->
√xt
 = 
NULL
;

649 
	`add_›ti⁄
(
odb
, 
›t
);

652 *
v¨
 = 
def_vÆ
;

653 
	}
}

657 
	$›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

658 *
«me
,

659 *
desc
,

660 *
v¨s
,

661 
nv¨s
,

662 *
√…
,

663 *
def_vÆ
,

664 
¥öt
,

665 *
f‹m©
,

666 
ac¸ue
)

668 
i
;

669 
›t_›t_t
 *
›t
;

671 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

672 i‡(!
›t
)

673 
	`Áèl
("out of virtual memory");

675 
›t
->
«me
 =Çame;

676 
›t
->
desc
 = desc;

677 
›t
->
nv¨s
 =Çvars;

678 
›t
->
√…
 =Çelt;

679 
›t
->
f‹m©
 = format ? format : "%s";

680 
›t
->
oc
 = 
oc_Êag
;

681 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

682 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

683 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

684 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

685 
›t
->
¥öt
 =Örint;

686 
›t
->
ac¸ue
 =áccrue;

689 
›t
->
√xt
 = 
NULL
;

690 
	`add_›ti⁄
(
odb
, 
›t
);

693 
i
=0; i < *
√…
; i++)

694 
v¨s
[
i
] = 
def_vÆ
[i];

695 
	}
}

699 
	$›t_ªg_°rög
(
›t_odb_t
 *
odb
,

700 *
«me
,

701 *
desc
,

702 **
v¨
,

703 *
def_vÆ
,

704 
¥öt
,

705 *
f‹m©
)

707 
›t_›t_t
 *
›t
;

709 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

710 i‡(!
›t
)

711 
	`Áèl
("out of virtual memory");

713 
›t
->
«me
 =Çame;

714 
›t
->
desc
 = desc;

715 
›t
->
nv¨s
 = 1;

716 
›t
->
√…
 = 
NULL
;

717 
›t
->
f‹m©
 = format ? format : "%12s";

718 
›t
->
oc
 = 
oc_°rög
;

719 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = var;

720 
›t
->
¥öt
 =Örint;

721 
›t
->
ac¸ue
 = 
FALSE
;

724 
›t
->
√xt
 = 
NULL
;

725 
	`add_›ti⁄
(
odb
, 
›t
);

728 *
v¨
 = 
def_vÆ
;

729 
	}
}

733 
	$›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

734 *
«me
,

735 *
desc
,

736 **
v¨s
,

737 
nv¨s
,

738 *
√…
,

739 **
def_vÆ
,

740 
¥öt
,

741 *
f‹m©
,

742 
ac¸ue
)

744 
i
;

745 
›t_›t_t
 *
›t
;

747 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

748 i‡(!
›t
)

749 
	`Áèl
("out of virtual memory");

751 
›t
->
«me
 =Çame;

752 
›t
->
desc
 = desc;

753 
›t
->
nv¨s
 =Çvars;

754 
›t
->
√…
 =Çelt;

755 
›t
->
f‹m©
 = format ? format : "%s";

756 
›t
->
oc
 = 
oc_°rög
;

757 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = 
v¨s
;

758 
›t
->
¥öt
 =Örint;

759 
›t
->
ac¸ue
 =áccrue;

762 
›t
->
√xt
 = 
NULL
;

763 
	`add_›ti⁄
(
odb
, 
›t
);

766 
i
=0; i < *
√…
; i++)

767 
v¨s
[
i
] = 
def_vÆ
[i];

768 
	}
}

772 
	$¥o˚ss_›ti⁄
(
›t_odb_t
 *
odb
,

773 
ödex
,

774 
¨gc
,

775 **
¨gv
)

777 
˙t
, 
ít
, 
nv¨s
;

778 *
ídp
;

779 
tmp
;

780 
›t_›t_t
 *
›t
;

783 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

785 i‡(!
	`°rcmp
(
›t
->
«me
, 
¨gv
[
ödex
]))

788 i‡(!
›t
)

791 
	`Áèl
("›ti⁄ `%s' i†undeföed", 
¨gv
[
ödex
]);

793 
ödex
++;

796 
›t
->
oc
)

798 
oc_öt
:

800 i‡(
ödex
 >
¨gc


801 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

804 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

806 
˙t
 = 0;

807 i‡(
›t
->
ac¸ue
)

809 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

810 
nv¨s
 = 1;

811 i‡(
ít
 >
›t
->
nv¨s
)

812 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

816 
ít
 = 0;

817 i‡(
›t
->
√…
)

818 *
›t
->
√…
 = 0;

819 
nv¨s
 = 
›t
->nvars;

822 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

823 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

825 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
[
ít
] = 
	`°πﬁ
(
¨gv
[
ödex
], &
ídp
, 0);

826 i‡(*
ídp
)

829 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

830 
¨gv
[
ödex
], 
›t
->
«me
);

833 i‡(
›t
->
√…
)

834 (*
›t
->
√…
)++;

835 
˙t
++; 
ödex
++; 
ít
++;

838 
oc_uöt
:

840 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

843 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

845 
˙t
 = 0;

846 i‡(
›t
->
ac¸ue
)

848 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

849 
nv¨s
 = 1;

850 i‡(
ít
 >
›t
->
nv¨s
)

851 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

855 
ít
 = 0;

856 i‡(
›t
->
√…
)

857 *
›t
->
√…
 = 0;

858 
nv¨s
 = 
›t
->nvars;

861 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

863 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
[
ít
] = 
	`°πoul
(
¨gv
[
ödex
], &
ídp
, 0);

864 i‡(*
ídp
)

867 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

868 
¨gv
[
ödex
], 
›t
->
«me
);

871 i‡(
›t
->
√…
)

872 (*
›t
->
√…
)++;

873 
˙t
++; 
ödex
++; 
ít
++;

876 
oc_Êﬂt
:

878 i‡(
ödex
 >
¨gc


879 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

882 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

884 
˙t
 = 0;

885 i‡(
›t
->
ac¸ue
)

887 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

888 
nv¨s
 = 1;

889 i‡(
ít
 >
›t
->
nv¨s
)

890 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

894 
ít
 = 0;

895 i‡(
›t
->
√…
)

896 *
›t
->
√…
 = 0;

897 
nv¨s
 = 
›t
->nvars;

900 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

901 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

903 
tmp
 = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

904 i‡(*
ídp
)

907 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

908 
¨gv
[
ödex
], 
›t
->
«me
);

910 i‡(
tmp
 < 
FLT_MIN
 ||Åm∞> 
FLT_MAX
)

913 
	`Áèl
("FP over/underflow forárgument `%s' of option `%s'",

914 
¨gv
[
ödex
], 
›t
->
«me
);

917 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
ít
] = ()
tmp
;

918 i‡(
›t
->
√…
)

919 (*
›t
->
√…
)++;

920 
˙t
++; 
ödex
++; 
ít
++;

923 
oc_doubÀ
:

925 i‡(
ödex
 >
¨gc


926 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

929 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

931 
˙t
 = 0;

932 i‡(
›t
->
ac¸ue
)

934 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

935 
nv¨s
 = 1;

936 i‡(
ít
 >
›t
->
nv¨s
)

937 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

941 
ít
 = 0;

942 i‡(
›t
->
√…
)

943 *
›t
->
√…
 = 0;

944 
nv¨s
 = 
›t
->nvars;

947 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

948 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

950 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
ít
] = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

951 i‡(*
ídp
)

954 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

955 
¨gv
[
ödex
], 
›t
->
«me
);

958 i‡(
›t
->
√…
)

959 (*
›t
->
√…
)++;

960 
˙t
++; 
ödex
++; 
ít
++;

963 
oc_íum
:

965 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

968 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

970 
˙t
 = 0;

971 i‡(
›t
->
ac¸ue
)

973 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

974 
nv¨s
 = 1;

975 i‡(
ít
 >
›t
->
nv¨s
)

976 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

980 
ít
 = 0;

981 i‡(
›t
->
√…
)

982 *
›t
->
√…
 = 0;

983 
nv¨s
 = 
›t
->nvars;

986 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

988 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

989 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

990 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

991 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

992 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

995 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

996 
¨gv
[
ödex
], 
›t
->
«me
);

999 i‡(
›t
->
√…
)

1000 (*
›t
->
√…
)++;

1001 
˙t
++; 
ödex
++; 
ít
++;

1004 
oc_Êag
:

1006 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1009 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[0] = 
TRUE
;

1013 
˙t
 = 0;

1014 i‡(
›t
->
ac¸ue
)

1016 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1017 
nv¨s
 = 1;

1018 i‡(
ít
 >
›t
->
nv¨s
)

1019 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1023 
ít
 = 0;

1024 i‡(
›t
->
√…
)

1025 *
›t
->
√…
 = 0;

1026 
nv¨s
 = 
›t
->nvars;

1028 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1030 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

1031 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1032 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1033 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

1034 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

1037 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
] = 
TRUE
;

1043 i‡(
›t
->
√…
)

1044 (*
›t
->
√…
)++;

1045 
˙t
++; 
ödex
++; 
ít
++;

1049 
oc_°rög
:

1051 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1054 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

1056 
˙t
 = 0;

1057 i‡(
›t
->
ac¸ue
)

1059 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1060 
nv¨s
 = 1;

1061 i‡(
ít
 >
›t
->
nv¨s
)

1062 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1066 
ít
 = 0;

1067 i‡(
›t
->
√…
)

1068 *
›t
->
√…
 = 0;

1069 
nv¨s
 = 
›t
->nvars;

1072 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1074 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
ít
] = 
¨gv
[
ödex
];

1075 i‡(
›t
->
√…
)

1076 (*
›t
->
√…
)++;

1077 
˙t
++; 
ödex
++; 
ít
++;

1081 
	`∑nic
("bogus option class");

1084  
ödex
;

1085 
	}
}

1088 
¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
);

1089 
dump_c⁄fig
(
›t_odb_t
 *
odb
, *
‚ame
);

1093 
	$__›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1094 
¨gc
,

1095 **
¨gv
,

1096 
dïth
)

1098 
ödex
, 
do_dumpc⁄fig
;

1099 *
dumpc⁄fig_«me
;

1101 
ödex
 = 0;

1102 
do_dumpc⁄fig
 = 
FALSE
;

1103 
dumpc⁄fig_«me
 = 
NULL
;

1105 
ödex
 < 
¨gc
)

1108 
ödex
 < 
¨gc
 && 
¨gv
[index][0] != '-')

1110 i‡(
dïth
 > 0)

1113 
	`Áèl
("orphan `%s'Éncountered during config fileÖrocessing",

1114 
¨gv
[
ödex
]);

1117 i‡(
odb
->
‹ph™_‚
)

1119 i‡(!
odb
->
	`‹ph™_‚
(
ödex
+1, 
¨gc
, 
¨gv
))

1122 
d⁄e_¥o˚ssög
;

1128 
	`Áèl
("‹ph™árgumíà`%s' wa†un˛aimed", 
¨gv
[
ödex
]);

1134 i‡(
ödex
 =
¨gc
)

1137 
d⁄e_¥o˚ssög
;

1142 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-config"))

1145 
ödex
++;

1146 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1149 
	`Áèl
("option `-config'Ñequiresánárgument");

1151 
	`¥o˚ss_fûe
(
odb
, 
¨gv
[
ödex
], 
dïth
);

1152 
ödex
++;

1154 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-dumpconfig"))

1157 
do_dumpc⁄fig
 = 
TRUE
;

1159 
ödex
++;

1160 i‡(
ödex
 >
¨gc


1161 || (
¨gv
[
ödex
][0] == '-' &&árgv[index][1] != '\0'))

1164 
	`Áèl
("option `-dumpconfig'Ñequiresánárgument");

1166 
dumpc⁄fig_«me
 = 
¨gv
[
ödex
];

1167 
ödex
++;

1172 
ödex
 = 
	`¥o˚ss_›ti⁄
(
odb
, index, 
¨gc
, 
¨gv
);

1175 
d⁄e_¥o˚ssög
:

1177 i‡(
do_dumpc⁄fig
)

1178 
	`dump_c⁄fig
(
odb
, 
dumpc⁄fig_«me
);

1179 
	}
}

1183 
	$›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1184 
¨gc
,

1185 **
¨gv
)

1188 i‡(
¨gc
 < 2)

1192 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
-1, 
¨gv
+1, 0);

1193 
	}
}

1196 
	#MAX_LINE_ARGS
 256

	)

1197 
	#MAX_FILENAME_LEN
 1024

	)

1199 
	$¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
)

1201 
œrgc
;

1202 *
œrgv
[
MAX_LINE_ARGS
];

1203 
löe
[1024], *
p
, *
q
;

1204 
cwd
[
MAX_FILENAME_LEN
];

1205 *
hódî
;

1206 
FILE
 *
fd
;

1208 
fd
 = 
	`f›í
(
‚ame
, "r");

1209 i‡(!
fd
)

1210 
	`Áèl
("couldÇŸ o≥¿c⁄figuøti⁄ fûê`%s'", 
‚ame
);

1212 i‡(!
	`gëcwd
(
cwd
, 
MAX_FILENAME_LEN
))

1213 
	`Áèl
("can't get cwd");

1215 
hódî
 = 
	`°ºchr
(
‚ame
, '/');

1216 i‡(
hódî
 !
NULL
)

1219 *
hódî
 = '\0';

1220 i‡(
	`chdú
(
‚ame
) == -1)

1221 
	`Áèl
("ˇn'àchdúÅÿ%s\n", 
‚ame
);

1222 *
hódî
 = '/';

1225 !
	`„of
(
fd
))

1228 
	`Ârötf
(
°dîr
, "!feof(fd): %d, strlen(line): %d,Üine: %s\n",

1229 !
	`„of
(
fd
), 
	`°æí
(
löe
),Üine);

1232 
löe
[0] = '\n';

1234 
	`fgës
(
löe
, 1024, 
fd
);

1235 i‡(
löe
[0] == '\0' ||Üine[0] == '\n')

1237 i‡(
löe
[
	`°æí
(line)-1] == '\n')

1238 
löe
[
	`°æí
(line)-1] = '\0';

1241 
œrgc
 = 0; 
p
 = 
löe
;

1242 *
p
)

1245 *
p
 != '\0' && (*p == ' ' || *p == '\t'))

1246 
p
++;

1249 i‡(*
p
 == '\0' || *p == '#')

1253 
q
 = 
p
;

1254 *
q
 != '\0' && *q != ' ' && *q != '\t')

1255 
q
++;

1256 i‡(*
q
)

1258 *
q
 = '\0';

1259 
q
++;

1263 
œrgv
[
œrgc
++] = 
	`my°rdup
(
p
);

1265 i‡(
œrgc
 =
MAX_LINE_ARGS
)

1267 i‡(
	`chdú
(
cwd
) == -1)

1268 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1269 
	`Áèl
("›ti⁄Üöêtoÿcom∂ex i¿fûê`%s'", 
‚ame
);

1273 
p
 = 
q
;

1277 i‡(
œrgc
 > 0)

1278 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
œrgc
, 
œrgv
, 
dïth
+1);

1282 
	`f˛o£
(
fd
);

1284 i‡(
	`chdú
(
cwd
) == -1)

1285 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1286 
	}
}

1290 
	$›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

1291 
FILE
 *
fd
)

1293 
i
, 
√…
;

1295 
›t
->
oc
)

1297 
oc_öt
:

1298 i‡(
›t
->
√…
)

1299 
√…
 = *(
›t
->nelt);

1301 
√…
 = 1;

1302 
i
=0; i<
√…
; i++)

1304 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_öt
.
v¨
[
i
]);

1305 
	`Ârötf
(
fd
, " ");

1308 
oc_uöt
:

1309 i‡(
›t
->
√…
)

1310 
√…
 = *(
›t
->nelt);

1312 
√…
 = 1;

1313 
i
=0; i<
√…
; i++)

1315 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_uöt
.
v¨
[
i
]);

1316 
	`Ârötf
(
fd
, " ");

1319 
oc_Êﬂt
:

1320 i‡(
›t
->
√…
)

1321 
√…
 = *(
›t
->nelt);

1323 
√…
 = 1;

1324 
i
=0; i<
√…
; i++)

1326 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, ()›t->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
i
]);

1327 
	`Ârötf
(
fd
, " ");

1330 
oc_doubÀ
:

1331 i‡(
›t
->
√…
)

1332 
√…
 = *(
›t
->nelt);

1334 
√…
 = 1;

1335 
i
=0; i<
√…
; i++)

1337 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
i
]);

1338 
	`Ârötf
(
fd
, " ");

1341 
oc_íum
:

1342 i‡(
›t
->
√…
)

1343 
√…
 = *(
›t
->nelt);

1345 
√…
 = 1;

1346 
i
=0; i<
√…
; i++)

1348 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1349 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1350 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1351 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1352 i‡(!
e°r
)

1353 
	`∑nic
("couldÇot bindÉnum `%d' for option `%s'",

1354 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1356 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1357 
	`Ârötf
(
fd
, " ");

1360 
oc_Êag
:

1361 i‡(
›t
->
√…
)

1362 
√…
 = *(
›t
->nelt);

1364 
√…
 = 1;

1365 
i
=0; i<
√…
; i++)

1367 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1368 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1369 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1370 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1371 i‡(!
e°r
)

1372 
	`∑nic
("couldÇot bind boolean `%d' for option `%s'",

1373 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1375 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1376 
	`Ârötf
(
fd
, " ");

1379 
oc_°rög
:

1380 i‡(!
›t
->
nv¨s
)

1382 
	`Ârötf
(
fd
, "%12s ", "<null>");

1385 i‡(
›t
->
√…
)

1386 
√…
 = *(
›t
->nelt);

1388 
√…
 = 1;

1389 i‡(
√…
 == 0)

1391 
	`Ârötf
(
fd
, "%12s ", "<null>");

1396 
i
=0; i<
√…
; i++)

1398 
	`Ârötf
(
fd
, 
›t
->
f‹m©
,

1399 (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1400 ? 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1402 
	`Ârötf
(
fd
, " ");

1407 
	`∑nic
("bogus option class");

1409 
	}
}

1413 
	$¥öt_›ti⁄_hódî
(
›t_odb_t
 *
odb
,

1414 
FILE
 *
fd
)

1416 i‡(!
odb
->
hódî
)

1419 
	`Ârötf
(
fd
, "\n%s\n", 
odb
->
hódî
);

1420 
	}
}

1424 
	$¥öt_›ti⁄_nŸes
(
›t_odb_t
 *
odb
,

1425 
FILE
 *
fd
)

1427 
›t_nŸe_t
 *
nŸe
;

1429 i‡(!
odb
->
nŸes
)

1432 
	`Ârötf
(
fd
, "\n");

1433 
nŸe
=
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸeÚŸe->
√xt
)

1434 
	`Ârötf
(
fd
, "%s\n", 
nŸe
->note);

1435 
	`Ârötf
(
fd
, "\n");

1436 
	}
}

1439 
›t_›t_t
 
	gdumpc⁄fig_›t
 =

1440 { 
NULL
, "-dumpconfig", "dump configurationÅoá file",

1441 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1442 
›t_›t_t
 
	gc⁄fig_›t
 =

1443 { &
dumpc⁄fig_›t
, "-config", "load configuration fromá file",

1444 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1445 
›t_›t_t
 *
	gbuûtö_›ti⁄s
 = &
c⁄fig_›t
;

1449 
	$›t_nuŒ_°rög
(
›t_›t_t
 *
›t
)

1451  (
›t
 !
NULL


1452 && 
›t
->
oc
 =
oc_°rög


1453 && (
›t
->
nv¨s
 == 0

1454 || (
›t
->
√…
 !
NULL
 && *opt->nelt == 0)

1455 || (
›t
->
√…
 =
NULL


1456 && (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 =
NULL


1457 || 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[0] =
NULL
))));

1458 
	}
}

1462 
	$›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

1463 
FILE
 *
fd
,

1464 
ãr£
,

1465 
nŸes
)

1467 
›t_›t_t
 *
›t
;

1469 i‡(!
odb
)

1476 i‡(
nŸes
)

1477 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1480 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1482 i‡(
ãr£
)

1483 
	`Ârötf
(
fd
, "# %-27†# %s\n", 
›t
->
«me
, o±->
desc
);

1486 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1487 
	`Ârötf
(
fd
, "# %-22s\n\n", 
›t
->
«me
);

1492 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1494 i‡(
ãr£
)

1496 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1497 
	`Ârötf
(
fd
, "# %-14†", 
›t
->
«me
);

1499 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1500 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1501 i‡(
›t
->
desc
)

1502 
	`Ârötf
(
fd
, "# %-22s", 
›t
->
desc
);

1503 
	`Ârötf
(
fd
, "\n");

1507 i‡(
›t
->
desc
)

1508 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1509 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1510 
	`Ârötf
(
fd
, "# %-20†", 
›t
->
«me
);

1512 
	`Ârötf
(
fd
, "%-22†", 
›t
->
«me
);

1513 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1514 
	`Ârötf
(
fd
, "\n\n");

1519 i‡(
nŸes
)

1520 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1521 
	}
}

1525 
	$¥öt_hñp
(
›t_›t_t
 *
›t
,

1526 
FILE
 *
fd
)

1528 *
s
 = 
NULL
;

1530 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1531 
›t
->
oc
)

1533 
oc_öt
:

1534 i‡(
›t
->
nv¨s
 == 1)

1535 
s
 = "<int>";

1537 
s
 = "<intÜist...>";

1539 
oc_uöt
:

1540 i‡(
›t
->
nv¨s
 == 1)

1541 
s
 = "<uint>";

1543 
s
 = "<uintÜist...>";

1545 
oc_Êﬂt
:

1546 i‡(
›t
->
nv¨s
 == 1)

1547 
s
 = "<float>";

1549 
s
 = "<floatÜist...>";

1551 
oc_doubÀ
:

1552 i‡(
›t
->
nv¨s
 == 1)

1553 
s
 = "<double>";

1555 
s
 = "<doubleÜist...>";

1557 
oc_íum
:

1558 i‡(
›t
->
nv¨s
 == 1)

1559 
s
 = "<enum>";

1561 
s
 = "<enumÜist...>";

1563 
oc_Êag
:

1564 i‡(
›t
->
nv¨s
 == 1)

1565 
s
 = "<true|false>";

1567 
s
 = "<true|falseÜist...>";

1569 
oc_°rög
:

1570 i‡(
›t
->
nv¨s
 == 0 || opt->nvars == 1)

1571 
s
 = "<string>";

1573 
s
 = "<stringÜist...>";

1576 
	`∑nic
("bogus option class");

1578 
	`Ârötf
(
fd
, "%-16†# ", 
s
);

1579 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1580 
	`Ârötf
(
fd
, "# %-22s\n", 
›t
->
desc
);

1581 
	}
}

1585 
	$›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

1586 
FILE
 *
fd
)

1588 
›t_›t_t
 *
›t
;

1591 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1593 
	`Ârötf
(
fd
, "#\n");

1594 
	`Ârötf
(
fd
, "%-16s %-16s # %12s # %-22s\n",

1596 
	`Ârötf
(
fd
, "#\n");

1599 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1600 
	`¥öt_hñp
(
›t
, 
fd
);

1603 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1604 
	`¥öt_hñp
(
›t
, 
fd
);

1607 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1608 
	}
}

1612 
	$dump_c⁄fig
(
›t_odb_t
 *
odb
,

1613 *
‚ame
)

1615 
FILE
 *
fd
;

1618 i‡(!
	`°rcmp
(
‚ame
, "-"))

1619 
fd
 = 
°dîr
;

1622 
fd
 = 
	`f›í
(
‚ame
, "w");

1623 i‡(!
fd
)

1624 
	`Áèl
("couldÇŸ o≥¿fûê`%s'", 
‚ame
);

1628 
	`›t_¥öt_›ti⁄s
(
odb
, 
fd
, 
FALSE
, FALSE);

1631 i‡(
fd
 !
°dout
 && fd !
°dîr
)

1632 
	`f˛o£
(
fd
);

1633 
	}
}

1636 
›t_›t_t
 *

1637 
	$›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

1638 *
›t_«me
)

1640 
›t_›t_t
 *
›t
;

1643 
›t
 = 
buûtö_›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1645 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1648  
›t
;

1653 
›t
 = 
odb
->
›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1655 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1658  
›t
;

1662  
NULL
;

1663 
	}
}

1667 
	$›t_ªg_hódî
(
›t_odb_t
 *
odb
,

1668 *
hódî
)

1670 
odb
->
hódî
 = header;

1671 
	}
}

1675 
	$›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

1676 *
nŸe_°r
)

1678 
›t_nŸe_t
 *
nŸe
, *
ñt
, *
¥ev
;

1680 
nŸe
 = (
›t_nŸe_t
 *)
	`ˇŒoc
(1, (opt_note_t));

1681 i‡(!
nŸe
)

1682 
	`Áèl
("out of virtual memory");

1685 
nŸe
->
√xt
 = 
NULL
;

1686 
nŸe
->nŸê
nŸe_°r
;

1689 
¥ev
=
NULL
, 
ñt
=
odb
->
nŸes
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

1692 i‡(
¥ev
 !
NULL
)

1693 
¥ev
->
√xt
 = 
nŸe
;

1695 
odb
->
nŸes
 = 
nŸe
;

1696 
nŸe
->
√xt
 = 
NULL
;

1697 
	}
}

1700 #ifde‡
TEST


1703 
	$f_‹ph™_‚
(
i
, 
¨gc
, **
¨gv
)

1705 
	`Ârötf
(
°dout
, "‹ph™†dëe˘edáàödex %d,árg = `%s'...\n", 
i
, 
¨gv
[i]);

1708  
FALSE
;

1709 
	}
}

1711 
	#MAX_VARS
 4

	)

1713 
	$maö
(
¨gc
, **
¨gv
)

1715 
›t_odb_t
 *
odb
;

1717 
n_öt_v¨s
, 
n_uöt_v¨s
, 
n_Êﬂt_v¨s
, 
n_doubÀ_v¨s
;

1718 
n_íum_v¨s
, 
n_íum_evÆ_v¨s
, 
n_Êag_v¨s
, 
n_°rög_v¨s
;

1719 
öt_v¨
, 
öt_v¨s
[
MAX_VARS
];

1720 
uöt_v¨
, 
uöt_v¨s
[
MAX_VARS
];

1721 
Êﬂt_v¨
, 
Êﬂt_v¨s
[
MAX_VARS
];

1722 
doubÀ_v¨
, 
doubÀ_v¨s
[
MAX_VARS
];

1723 
Êag_v¨
, 
Êag_v¨s
[
MAX_VARS
];

1724 *
°rög_v¨
, *
°rög_v¨s
[
MAX_VARS
];

1726 
	eëe°_t
 { 
íum_a
, 
íum_b
, 
íum_c
, 
íum_d
, 
íum_NUM
 };

1727 *
íum_em≠
[
íum_NUM
] =

1729 
íum_evÆ
[
íum_NUM
] =

1730 { 
íum_d
, 
íum_c
, 
íum_b
, 
íum_a
 };

1731 
íum_v¨
, 
íum_v¨s
[
MAX_VARS
];

1732 
íum_evÆ_v¨
, 
íum_evÆ_v¨s
[
MAX_VARS
];

1735 
odb
 = 
	`›t_√w
(
f_‹ph™_‚
);

1738 
	`›t_ªg_öt
(
odb
, "-opt:int", "This isán integer option.",

1739 &
öt_v¨
, 1, 
TRUE
, 
NULL
);

1740 
	`›t_ªg_öt_li°
(
odb
, "-opt:int:list", "This isán integerÜist option.",

1741 
öt_v¨s
, 
MAX_VARS
, &
n_öt_v¨s
, 2,

1742  
TRUE
, 
NULL
);

1743 
	`›t_ªg_uöt
(
odb
, "-opt:uint", "This isán unsigned integer option.",

1744 &
uöt_v¨
, 3, 
TRUE
, 
NULL
);

1745 
	`›t_ªg_uöt_li°
(
odb
, "-opt:uint:list",

1747 
uöt_v¨s
, 
MAX_VARS
, &
n_uöt_v¨s
, 4,

1748  
TRUE
, 
NULL
);

1749 
	`›t_ªg_Êﬂt
(
odb
, "-opt:float", "This isá float option.",

1750 &
Êﬂt_v¨
, 5.0, 
TRUE
, 
NULL
);

1751 
	`›t_ªg_Êﬂt_li°
(
odb
, "-opt:float:list", "This isá floatÜist option.",

1752 
Êﬂt_v¨s
, 
MAX_VARS
, &
n_Êﬂt_v¨s
, 6.0,

1753  
TRUE
, 
NULL
);

1754 
	`›t_ªg_doubÀ
(
odb
, "-opt:double", "This isá double option.",

1755 &
doubÀ_v¨
, 7.0, 
TRUE
, 
NULL
);

1756 
	`›t_ªg_doubÀ_li°
(
odb
, "-opt:double:list", "This isá doubleÜist option.",

1757 
doubÀ_v¨s
, 
MAX_VARS
, &
n_doubÀ_v¨s
, 8.0,

1758  
TRUE
, 
NULL
);

1759 
	`›t_ªg_íum
(
odb
, "-opt:enum", "This isánÉnumeration option.",

1760 &
íum_v¨
, "íum_a", 
íum_em≠
, 
NULL
, 
íum_NUM
,

1761  
TRUE
, 
NULL
);

1762 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:list", "This isáÉnumÜist option.",

1763 
íum_v¨s
, 
MAX_VARS
, &
n_íum_v¨s
, "enum_b",

1764 
íum_em≠
, 
NULL
, 
íum_NUM
,

1765  
TRUE
, 
NULL
);

1766 
	`›t_ªg_íum
(
odb
, "-opt:enum:eval", "This isánÉnumeration option w/eval.",

1767 &
íum_evÆ_v¨
, "íum_b", 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1768  
TRUE
, 
NULL
);

1769 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:eval:list",

1771 
íum_evÆ_v¨s
, 
MAX_VARS
, &
n_íum_evÆ_v¨s
, "enum_a",

1772 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1773  
TRUE
, 
NULL
);

1774 
	`›t_ªg_Êag
(
odb
, "-opt:flag", "This isá boolean flag option.",

1775 &
Êag_v¨
, 
FALSE
, 
TRUE
, 
NULL
);

1776 
	`›t_ªg_Êag_li°
(
odb
, "-opt:flag:list",

1778 
Êag_v¨s
, 
MAX_VARS
, &
n_Êag_v¨s
, 
TRUE
,

1779  
TRUE
, 
NULL
);

1780 
	`›t_ªg_°rög
(
odb
, "-opt:string", "This isá string option.",

1781 &
°rög_v¨
, "a:string",

1782  
TRUE
, 
NULL
);

1783 
	`›t_ªg_°rög_li°
(
odb
, "-opt:string:list", "This isá stringÜist option.",

1784 
°rög_v¨s
, 
MAX_VARS
, &
n_°rög_v¨s
, "another:string",

1785  
TRUE
, 
NULL
);

1788 
	`›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
, 
¨gv
);

1791 
	`Ârötf
(
°dout
, "## Current Option Values ##\n");

1792 
	`›t_¥öt_›ti⁄s
(
odb
, 
°dout
, 
FALSE
, 
TRUE
);

1795 
	`›t_dñëe
(
odb
);

1796 
	`exô
(0);

1797 
	}
}

	@options.h

52 #i‚de‡
OPTIONS_H


53 
	#OPTIONS_H


	)

67 
	e›t_˛ass_t
 {

68 
	moc_öt
 = 0,

69 
	moc_uöt
,

70 
	moc_Êﬂt
,

71 
	moc_doubÀ
,

72 
	moc_íum
,

73 
	moc_Êag
,

74 
	moc_°rög
,

75 
	moc_NUM


79 
	s›t_›t_t
 {

80 
›t_›t_t
 *
	m√xt
;

81 *
	m«me
;

82 *
	mdesc
;

83 
	mnv¨s
;

84 *
	m√…
;

85 *
	mf‹m©
;

86 
	m¥öt
;

87 
	mac¸ue
;

88 
›t_˛ass_t
 
	moc
;

89 
	u›t_v¨ü¡_t
 {

91 
	s›t_f‹_öt_t
 {

92 *
	mv¨
;

93 } 
	mf‹_öt
;

95 
	s›t_f‹_uöt_t
 {

96 *
	mv¨
;

97 } 
	mf‹_uöt
;

99 
	s›t_f‹_Êﬂt_t
 {

100 *
	mv¨
;

101 } 
	mf‹_Êﬂt
;

103 
	s›t_f‹_doubÀ_t
 {

104 *
	mv¨
;

105 } 
	mf‹_doubÀ
;

107 
	s›t_f‹_íum_t
 {

108 *
	mv¨
;

109 **
	mem≠
;

110 *
	mevÆ
;

111 
	mem≠_sz
;

112 } 
	mf‹_íum
;

114 
	s›t_f‹_°rög_t
 {

115 **
	mv¨
;

116 } 
	mf‹_°rög
;

117 } 
	mv¨ü¡
;

123 (*
	t‹ph™_‚_t
)(
	ti
,

124 
	t¨gc
,

125 **
	t¨gv
);

129 
	s›t_nŸe_t
 {

130 
›t_nŸe_t
 *
	m√xt
;

131 *
	mnŸe
;

135 
	s›t_odb_t
 {

136 
›t_›t_t
 *
	m›ti⁄s
;

137 
‹ph™_‚_t
 
	m‹ph™_‚
;

138 *
	mhódî
;

139 
›t_nŸe_t
 *
	mnŸes
;

143 
›t_odb_t
 *

144 
›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
);

148 
›t_dñëe
(
›t_odb_t
 *
odb
);

152 
›t_ªg_öt
(
›t_odb_t
 *
odb
,

153 *
«me
,

154 *
desc
,

155 *
v¨
,

156 
def_vÆ
,

157 
¥öt
,

158 *
f‹m©
);

162 
›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

163 *
«me
,

164 *
desc
,

165 *
v¨s
,

166 
nv¨s
,

167 *
√…
,

168 *
def_vÆ
,

169 
¥öt
,

170 *
f‹m©
,

171 
ac¸ue
);

175 
›t_ªg_uöt
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨
,

179 
def_vÆ
,

180 
¥öt
,

181 *
f‹m©
);

185 
›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

186 *
«me
,

187 *
desc
,

188 *
v¨s
,

189 
nv¨s
,

190 *
√…
,

191 *
def_vÆ
,

192 
¥öt
,

193 *
f‹m©
,

194 
ac¸ue
);

198 
›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

199 *
«me
,

200 *
desc
,

201 *
v¨
,

202 
def_vÆ
,

203 
¥öt
,

204 *
f‹m©
);

208 
›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

209 *
«me
,

210 *
desc
,

211 *
v¨s
,

212 
nv¨s
,

213 *
√…
,

214 *
def_vÆ
,

215 
¥öt
,

216 *
f‹m©
,

217 
ac¸ue
);

221 
›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

222 *
«me
,

223 *
desc
,

224 *
v¨
,

225 
def_vÆ
,

226 
¥öt
,

227 *
f‹m©
);

231 
›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

232 *
«me
,

233 *
desc
,

234 *
v¨s
,

235 
nv¨s
,

236 *
√…
,

237 *
def_vÆ
,

238 
¥öt
,

239 *
f‹m©
,

240 
ac¸ue
);

246 
›t_ªg_íum
(
›t_odb_t
 *
odb
,

247 *
«me
,

248 *
desc
,

249 *
v¨
,

250 *
def_vÆ
,

251 **
em≠
,

252 *
evÆ
,

253 
em≠_sz
,

254 
¥öt
,

255 *
f‹m©
);

261 
›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

262 *
«me
,

263 *
desc
,

264 *
v¨s
,

265 
nv¨s
,

266 *
√…
,

267 *
def_vÆ
,

268 **
em≠
,

269 *
evÆ
,

270 
em≠_sz
,

271 
¥öt
,

272 *
f‹m©
,

273 
ac¸ue
);

277 
›t_ªg_Êag
(
›t_odb_t
 *
odb
,

278 *
«me
,

279 *
desc
,

280 *
v¨
,

281 
def_vÆ
,

282 
¥öt
,

283 *
f‹m©
);

287 
›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨s
,

291 
nv¨s
,

292 *
√…
,

293 *
def_vÆ
,

294 
¥öt
,

295 *
f‹m©
,

296 
ac¸ue
);

300 
›t_ªg_°rög
(
›t_odb_t
 *
odb
,

301 *
«me
,

302 *
desc
,

303 **
v¨
,

304 *
def_vÆ
,

305 
¥öt
,

306 *
f‹m©
);

310 
›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

311 *
«me
,

312 *
desc
,

313 **
v¨s
,

314 
nv¨s
,

315 *
√…
,

316 **
def_vÆ
,

317 
¥öt
,

318 *
f‹m©
,

319 
ac¸ue
);

323 
›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

324 
¨gc
,

325 **
¨gv
);

329 
›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

330 
FILE
 *
fd
);

334 
›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

335 
FILE
 *
fd
,

336 
ãr£
,

337 
nŸes
);

341 
›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

342 
FILE
 *
fd
);

345 
›t_›t_t
 *

346 
›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

347 *
›t_«me
);

351 
›t_ªg_hódî
(
›t_odb_t
 *
odb
,

352 *
hódî
);

356 
›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

357 *
nŸe
);

	@ptrace.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ønge.h
"

59 
	~"±ø˚.h
"

62 
FILE
 *
	g±ø˚_outfd
 = 
NULL
;

65 
	g±ø˚_a˘ive
 = 
FALSE
;

68 
ønge_ønge_t
 
	g±ø˚_ønge
;

71 
	g±ø˚_⁄eshŸ
 = 
FALSE
;

75 
	$±ø˚_›í
(*
‚ame
,

76 *
ønge
)

78 *
îr°r
;

81 i‡(!
ønge
)

84 
îr°r
 = 
	`ønge_∑r£_ønge
(":", &
±ø˚_ønge
);

85 i‡(
îr°r
)

86 
	`∑nic
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

87 
±ø˚_a˘ive
 = 
TRUE
;

91 
îr°r
 = 
	`ønge_∑r£_ønge
(
ønge
, &
±ø˚_ønge
);

92 i‡(
îr°r
)

93 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

94 
±ø˚_a˘ive
 = 
FALSE
;

97 i‡(
±ø˚_ønge
.
°¨t
.
±y≥
 !±ø˚_ønge.
íd
.ptype)

98 
	`Áèl
("rangeÉndpointsáreÇot ofÅhe sameÅype");

101 i‡(!
‚ame
 || !
	`°rcmp
(fname, "-") || !strcmp(fname, "stderr"))

102 
±ø˚_outfd
 = 
°dîr
;

103 i‡(!
	`°rcmp
(
‚ame
, "stdout"))

104 
±ø˚_outfd
 = 
°dout
;

107 
±ø˚_outfd
 = 
	`f›í
(
‚ame
, "w");

108 i‡(!
±ø˚_outfd
)

109 
	`Áèl
("ˇ¬Ÿ o≥¿pùëø˚ ouçuàfûê`%s'", 
‚ame
);

111 
	}
}

115 
	$±ø˚_˛o£
()

117 i‡(
±ø˚_outfd
 !
NULL
 &&Öåa˚_outfd !
°dîr
 &&Öåa˚_outfd !
°dout
)

118 
	`f˛o£
(
±ø˚_outfd
);

119 
	}
}

123 
	$__±ø˚_√wö°
(
i£q
,

124 
md_ö°_t
 
ö°
,

125 
md_addr_t
 
pc
,

126 
md_addr_t
 
addr
)

128 
	`myÂrötf
(
±ø˚_outfd
, "+ %u 0x%08∞0x%08∞", 
i£q
, 
pc
, 
addr
);

129 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
±ø˚_outfd
);

130 
	`Ârötf
(
±ø˚_outfd
, "\n");

132 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

133 
	`fÊush
(
±ø˚_outfd
);

134 
	}
}

138 
	$__±ø˚_√wu›
(
i£q
,

139 *
u›_desc
,

140 
md_addr_t
 
pc
,

141 
md_addr_t
 
addr
)

143 
	`myÂrötf
(
±ø˚_outfd
,

144 "+ %u 0x%08∞0x%08∞[%s]\n", 
i£q
, 
pc
, 
addr
, 
u›_desc
);

146 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

147 
	`fÊush
(
±ø˚_outfd
);

148 
	}
}

152 
	$__±ø˚_ídö°
(
i£q
)

154 
	`Ârötf
(
±ø˚_outfd
, "- %u\n", 
i£q
);

156 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

157 
	`fÊush
(
±ø˚_outfd
);

158 
	}
}

162 
	$__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
)

164 
	`Ârötf
(
±ø˚_outfd
, "@ %.0f\n", ()
cy˛e
);

166 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

167 
	`fÊush
(
±ø˚_outfd
);

168 
	}
}

172 
	$__±ø˚_√w°age
(
i£q
,

173 *
p°age
,

174 
≥víts
)

176 
	`Ârötf
(
±ø˚_outfd
, "* %u %†0x%08x\n", 
i£q
, 
p°age
, 
≥víts
);

178 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

179 
	`fÊush
(
±ø˚_outfd
);

180 
	}
}

	@ptrace.h

52 #i‚de‡
PTRACE_H


53 
	#PTRACE_H


	)

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ønge.h
"

78 
	#PST_IFETCH
 "IF"

	)

79 
	#PST_DISPATCH
 "DA"

	)

80 
	#PST_EXECUTE
 "EX"

	)

81 
	#PST_WRITEBACK
 "WB"

	)

82 
	#PST_COMMIT
 "CT"

	)

85 
	#PEV_CACHEMISS
 0x00000001

	)

86 
	#PEV_TLBMISS
 0x00000002

	)

87 
	#PEV_MPOCCURED
 0x00000004

	)

88 
	#PEV_MPDETECT
 0x00000008

	)

89 
	#PEV_AGEN
 0x00000010

	)

92 
FILE
 *
±ø˚_outfd
;

95 
±ø˚_a˘ive
;

98 
ønge_ønge_t
 
±ø˚_ønge
;

101 
±ø˚_⁄eshŸ
;

105 
±ø˚_›í
(*
ønge
,

106 *
‚ame
);

110 
±ø˚_˛o£
();

114 
	#±ø˚_check_a˘ive
(
PC
, 
ICNT
, 
CYCLE
) \

115 ((
±ø˚_outfd
 !
NULL
 \

116 && !
	`ønge_cmp_ønge1
(&
±ø˚_ønge
, (
PC
), (
ICNT
), (
CYCLE
))) \

117 ? (!
±ø˚_⁄eshŸ
 ? (
±ø˚_a˘ive
 =Öåa˚_⁄eshŸ = 
TRUE
Ë: 
FALSE
)\

118 : (
±ø˚_a˘ive
 = 
FALSE
))

	)

121 
	#±ø˚_√wö°
(
A
,
B
,
C
,
D
) \

122 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wö°
((
A
),(
B
),(
C
),(
D
))

	)

123 
	#±ø˚_√wu›
(
A
,
B
,
C
,
D
) \

124 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wu›
((
A
),(
B
),(
C
),(
D
))

	)

125 
	#±ø˚_ídö°
(
A
) \

126 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_ídö°
((
A
))

	)

127 
	#±ø˚_√wcy˛e
(
A
) \

128 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wcy˛e
((
A
))

	)

129 
	#±ø˚_√w°age
(
A
,
B
,
C
) \

130 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√w°age
((
A
),(
B
),(
C
))

	)

132 
	#±ø˚_a˘ive
(
A
,
I
,
C
) \

133 (
±ø˚_outfd
 !
NULL
 && !
	`ønge_cmp_ønge
(&
±ø˚_ønge
, (
A
), (
I
), (
C
)))

	)

137 
__±ø˚_√wö°
(
i£q
,

138 
md_ö°_t
 
ö°
,

139 
md_addr_t
 
pc
,

140 
md_addr_t
 
addr
);

144 
__±ø˚_√wu›
(
i£q
,

145 *
u›_desc
,

146 
md_addr_t
 
pc
,

147 
md_addr_t
 
addr
);

151 
__±ø˚_ídö°
(
i£q
);

155 
__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
);

159 
__±ø˚_√w°age
(
i£q
,

160 *
p°age
,

161 
≥víts
);

	@range.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<î∫o.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"symbﬁ.h
"

61 
	~"lﬂdî.h
"

62 
	~"ønge.h
"

66 
	$ønge_∑r£_pos
(*
p°r
,

67 
ønge_pos_t
 *
pos
)

69 *
s
, *
ídp
;

70 
sym_sym_t
 *
sym
;

73 i‡(
p°r
[0] == '@')

76 
pos
->
±y≥
 = 
±_addr
;

77 
s
 = 
p°r
 + 1;

79 i‡(
p°r
[0] == '#')

82 
pos
->
±y≥
 = 
±_cy˛e
;

83 
s
 = 
p°r
 + 1;

88 
pos
->
±y≥
 = 
±_ö°
;

89 
s
 = 
p°r
;

93 
î∫o
 = 0;

94 
pos
->po†(
cou¡î_t
)
	`°πoul
(
s
, &
ídp
, 0);

95 i‡(!
î∫o
 && !*
ídp
)

98  
NULL
;

102 
î∫o
 = 0;

103 
pos
->po†(
cou¡î_t
)
	`°πod
(
s
, &
ídp
);

104 i‡(!
î∫o
 && !*
ídp
)

108  
NULL
;

112 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

113 
sym
 = 
	`sym_böd_«me
(
s
, 
NULL
, 
sdb_™y
);

114 i‡(
sym
 !
NULL
)

116 
pos
->po†(
cou¡î_t
)
sym
->
addr
;

117  
NULL
;

122 
	}
}

126 
	$ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

127 
FILE
 *
°ªam
)

129 
pos
->
±y≥
)

131 
±_addr
:

132 
	`myÂrötf
(
°ªam
, "@0x%08p", (
md_addr_t
)
pos
->pos);

134 
±_ö°
:

135 
	`Ârötf
(
°ªam
, "%.0f", ()
pos
->pos);

137 
±_cy˛e
:

138 
	`Ârötf
(
°ªam
, "#%.0f", ()
pos
->pos);

141 
	`∑nic
("bogusÉxecutionÖositionÅype");

143 
	}
}

147 
	$ønge_∑r£_ønge
(*
r°r
,

148 
ønge_ønge_t
 *
ønge
)

150 *
pos1
, *
pos2
, *
p
, 
buf
[512], *
îr°r
;

153 
	`°r˝y
(
buf
, 
r°r
);

154 
pos1
 = 
buf
;

157 
p
 = 
buf
;

158 *
p
 != ':' && *p != '\0')

160 
p
++;

162 i‡(*
p
 != ':')

164 *
p
 = '\0';

167 
pos2
 = 
p
 + 1;

170 i‡(*
pos1
 && *pos1 != ':')

172 
îr°r
 = 
	`ønge_∑r£_pos
(
pos1
, &
ønge
->
°¨t
);

173 i‡(
îr°r
)

174  
îr°r
;

179 
ønge
->
°¨t
.
±y≥
 = 
±_ö°
;

180 
ønge
->
°¨t
.
pos
 = 0;

184 i‡(*
pos2
)

186 i‡(*
pos2
 == '+')

188 
dñè
;

189 *
ídp
;

192 
î∫o
 = 0;

193 
dñè
 = 
	`°πﬁ
(
pos2
 + 1, &
ídp
, 0);

194 i‡(!
î∫o
 && !*
ídp
)

197 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

198 
ønge
->
íd
.
pos
 =Ñ™ge->
°¨t
.po†+ 
dñè
;

208 
îr°r
 = 
	`ønge_∑r£_pos
(
pos2
, &
ønge
->
íd
);

209 i‡(
îr°r
)

210  
îr°r
;

216 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

217 #ifde‡
HOST_HAS_QWORD


218 
ønge
->
íd
.
pos
 = 
	`ULL
(0x7fffffffffffffff);

220 
ønge
->
íd
.
pos
 = 281474976645120.0;

225  
NULL
;

226 
	}
}

230 
	$ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

231 
FILE
 *
°ªam
)

233 
	`ønge_¥öt_pos
(&
ønge
->
°¨t
, 
°ªam
);

234 
	`Ârötf
(
°ªam
, ":");

235 
	`ønge_¥öt_pos
(&
ønge
->
íd
, 
°ªam
);

236 
	}
}

240 
	$ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

241 
cou¡î_t
 
vÆ
)

243 i‡(
vÆ
 < 
pos
->pos)

245 i‡(
vÆ
 =
pos
->pos)

249 
	}
}

253 
	$ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

254 
cou¡î_t
 
vÆ
)

256 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

257 
	`∑nic
("invalidÑange");

259 i‡(
vÆ
 < 
ønge
->
°¨t
.
pos
)

261 i‡(
ønge
->
°¨t
.
pos
 <
vÆ
 && vÆ <ønge->
íd
.pos)

265 
	}
}

269 
	$ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

270 
md_addr_t
 
addr
,

271 
cou¡î_t
 
icou¡
,

272 
cou¡î_t
 
cy˛e
)

274 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

275 
	`∑nic
("invalidÑange");

277 
ønge
->
°¨t
.
±y≥
)

279 
±_addr
:

280 i‡(
addr
 < (
md_addr_t
)
ønge
->
°¨t
.
pos
)

282 i‡((
md_addr_t
)
ønge
->
°¨t
.
pos
 <
addr
 &&ádd∏<(md_addr_tÏ™ge->
íd
.pos)

287 
±_ö°
:

288 i‡(
icou¡
 < 
ønge
->
°¨t
.
pos
)

290 i‡(
ønge
->
°¨t
.
pos
 <
icou¡
 && icou¡ <ønge->
íd
.pos)

295 
±_cy˛e
:

296 i‡(
cy˛e
 < 
ønge
->
°¨t
.
pos
)

298 i‡(
ønge
->
°¨t
.
pos
 <
cy˛e
 && cy˛ê<ønge->
íd
.pos)

304 
	`∑nic
("bogusÑangeÅype");

306 
	}
}

	@range.h

52 #i‚de‡
RANGE_H


53 
	#RANGE_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

61 
	eønge_±y≥_t
 {

62 
	m±_addr
 = 0,

63 
	m±_ö°
,

64 
	m±_cy˛e
,

65 
	m±_NUM


76 
	sønge_pos_t
 {

77 
ønge_±y≥_t
 
	m±y≥
;

78 
cou¡î_t
 
	mpos
;

82 
	sønge_ønge_t
 {

83 
ønge_pos_t
 
	m°¨t
;

84 
ønge_pos_t
 
	míd
;

89 
ønge_∑r£_pos
(*
p°r
,

90 
ønge_pos_t
 *
pos
);

94 
ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

95 
FILE
 *
°ªam
);

99 
ønge_∑r£_ønge
(*
r°r
,

100 
ønge_ønge_t
 *
ønge
);

104 
ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

105 
FILE
 *
°ªam
);

109 
ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

110 
cou¡î_t
 
vÆ
);

114 
ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

115 
cou¡î_t
 
vÆ
);

120 
ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

121 
md_addr_t
 
addr
,

122 
cou¡î_t
 
icou¡
,

123 
cou¡î_t
 
cy˛e
);

	@regs.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"lﬂdî.h
"

60 
	~"ªgs.h
"

64 
ªgs_t
 *

65 
	$ªgs_¸óã
()

67 
ªgs_t
 *
ªgs
;

69 
ªgs
 = 
	`ˇŒoc
(1, (
ªgs_t
));

70 i‡(!
ªgs
)

71 
	`Áèl
("out of virtual memory");

73  
ªgs
;

74 
	}
}

78 
	$ªgs_öô
(
ªgs_t
 *
ªgs
)

81 
	`mem£t
(
ªgs
, 0, (*regs));

84 
	}
}

92 
	uªgs_FP_t
 {

93 
md_g¥_t
 
	ml
[
MD_NUM_FREGS
];

94 
md_SS_FLOAT_TYPE
 
	mf
[
SS_NUM_REGS
];

95 
SS_DOUBLE_TYPE
 
	md
[
SS_NUM_REGS
/2];

99 
md_ªgs_FP_t
 
ªgs_F
;

102 
SS_WORD_TYPE
 
ªgs_HI
;

105 
SS_WORD_TYPE
 
ªgs_LO
;

108 
ªgs_FCC
;

111 
SS_ADDR_TYPE
 
ªgs_PC
;

115 
	$ªgs_dump
(
FILE
 *
°ªam
)

117 
i
;

120 i‡(!
°ªam
)

121 
°ªam
 = 
°dîr
;

124 
	`Ârötf
(
°ªam
, "Processor state:\n");

125 
	`Ârötf
(
°ªam
, " PC: 0x%08x\n", 
ªgs_PC
);

126 
i
=0; i<
SS_NUM_REGS
; i += 2)

128 
	`Ârötf
(
°ªam
, " R[%2d]: %12d/0x%08x",

129 
i
, 
ªgs_R
[i],Ñegs_R[i]);

130 
	`Ârötf
(
°ªam
, " R[%2d]: %12d/0x%08x\n",

131 
i
+1, 
ªgs_R
[i+1],Ñegs_R[i+1]);

133 
	`Ârötf
(
°ªam
, " HI: %10d/0x%08x LO: %10d/0x%08x\n",

134 
ªgs_HI
,Ñegs_HI, 
ªgs_LO
,Ñegs_LO);

135 
i
=0; i<
SS_NUM_REGS
; i += 2)

137 
	`Ârötf
(
°ªam
, " F[%2d]: %12d/0x%08x",

138 
i
, 
ªgs_F
.
l
[i],Ñegs_F.l[i]);

139 
	`Ârötf
(
°ªam
, " F[%2d]: %12d/0x%08x\n",

140 
i
+1, 
ªgs_F
.
l
[i+1],Ñegs_F.l[i+1]);

142 
	`Ârötf
(
°ªam
, " FCC: 0x%08x\n", 
ªgs_FCC
);

143 
	}
}

146 
SS_WORD_TYPE
 
	gªgs_R
[
SS_NUM_REGS
];

149 
ªgs_FP
 
	gªgs_F
;

152 
SS_WORD_TYPE
 
	gªgs_HI
;

154 
SS_WORD_TYPE
 
	gªgs_LO
;

157 
	gªgs_FCC
;

160 
SS_ADDR_TYPE
 
	gªgs_PC
;

	@regs.h

52 #i‚de‡
REGS_H


53 
	#REGS_H


	)

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

100 
	sªgs_t
 {

101 
md_g¥_t
 
	mªgs_R
;

102 
md_Âr_t
 
	mªgs_F
;

103 
md_˘æ_t
 
	mªgs_C
;

104 
md_addr_t
 
	mªgs_PC
;

105 
md_addr_t
 
	mªgs_NPC
;

109 
ªgs_t
 *
ªgs_¸óã
();

113 
ªgs_öô
(
ªgs_t
 *
ªgs
);

117 
ªgs_dump
(
ªgs_t
 *
ªgs
,

118 
FILE
 *
°ªam
);

122 
ªgs_de°roy
(
ªgs_t
 *
ªgs
);

	@resource.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<as£π.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"ªsour˚.h
"

61 
ªs_poﬁ
 *

62 
	$ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
)

64 
i
, 
j
, 
k
, 
ödex
, 
nö°s
;

65 
ªs_desc
 *
ö°_poﬁ
;

66 
ªs_poﬁ
 *
ªs
;

69 
nö°s
=0,
i
=0; i<
ndesc
; i++)

71 i‡(
poﬁ
[
i
].
qu™tôy
 > 
MAX_INSTS_PER_CLASS
)

72 
	`Áèl
("too many functional units, increase MAX_INSTS_PER_CLASS");

73 
nö°s
 +
poﬁ
[
i
].
qu™tôy
;

77 
ö°_poﬁ
 = (
ªs_desc
 *)
	`ˇŒoc
(
nö°s
, (res_desc));

78 i‡(!
ö°_poﬁ
)

79 
	`Áèl
("out of virtual memory");

82 
ödex
=0,
i
=0; i<
ndesc
; i++)

84 
j
=0; j<
poﬁ
[
i
].
qu™tôy
; j++)

86 
ö°_poﬁ
[
ödex
] = 
poﬁ
[
i
];

87 
ö°_poﬁ
[
ödex
].
qu™tôy
 = 1;

88 
ö°_poﬁ
[
ödex
].
busy
 = 
FALSE
;

89 
k
=0; k<
MAX_RES_CLASSES
 && 
ö°_poﬁ
[
ödex
].
x
[k].
˛ass
; k++)

90 
ö°_poﬁ
[
ödex
].
x
[
k
].
ma°î
 = &inst_pool[index];

91 
ödex
++;

94 
	`as£π
(
ödex
 =
nö°s
);

97 
ªs
 = (
ªs_poﬁ
 *)
	`ˇŒoc
(1, (res_pool));

98 i‡(!
ªs
)

99 
	`Áèl
("out of virtual memory");

100 
ªs
->
«me
 =Çame;

101 
ªs
->
num_ªsour˚s
 = 
nö°s
;

102 
ªs
->
ªsour˚s
 = 
ö°_poﬁ
;

105 
i
=0; i<
nö°s
; i++)

107 
ªs_ãm∂©e
 *
∂©e
;

108 
j
=0; j<
MAX_RES_CLASSES
; j++)

110 
∂©e
 = &
ªs
->
ªsour˚s
[
i
].
x
[
j
];

111 i‡(
∂©e
->
˛ass
)

113 
	`as£π
(
∂©e
->
˛ass
 < 
MAX_RES_CLASSES
);

114 
ªs
->
èbÀ
[
∂©e
->
˛ass
][ªs->
√¡s
[plate->class]++] =Ölate;

122  
ªs
;

123 
	}
}

131 
ªs_ãm∂©e
 *

132 
	$ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
)

134 
i
;

137 
	`as£π
(
˛ass
 < 
MAX_RES_CLASSES
);

140 
	`as£π
(
poﬁ
->
èbÀ
[
˛ass
][0]);

142 
i
=0; i<
MAX_INSTS_PER_CLASS
; i++)

144 i‡(
poﬁ
->
èbÀ
[
˛ass
][
i
])

146 i‡(!
poﬁ
->
èbÀ
[
˛ass
][
i
]->
ma°î
->
busy
)

147  
poﬁ
->
èbÀ
[
˛ass
][
i
];

153  
NULL
;

154 
	}
}

158 
	$ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
)

160 
i
, 
j
;

162 i‡(!
°ªam
)

163 
°ªam
 = 
°dîr
;

165 
	`Ârötf
(
°ªam
, "Resour˚Öoﬁ: %s:\n", 
poﬁ
->
«me
);

166 
	`Ârötf
(
°ªam
, "\tc⁄èö†%dÑesour˚ in°™˚s\n", 
poﬁ
->
num_ªsour˚s
);

167 
i
=0; i<
MAX_RES_CLASSES
; i++)

169 
	`Ârötf
(
°ªam
, "\tclass: %d: %d matching instances\n",

170 
i
, 
poﬁ
->
√¡s
[i]);

171 
	`Ârötf
(
°ªam
, "\tmatching: ");

172 
j
=0; j<
MAX_INSTS_PER_CLASS
; j++)

174 i‡(!
poﬁ
->
èbÀ
[
i
][
j
])

176 
	`Ârötf
(
°ªam
, "\t%s (busy for %d cycles) ",

177 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
«me
,

178 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
busy
);

180 
	`as£π
(
j
 =
poﬁ
->
√¡s
[
i
]);

181 
	`Ârötf
(
°ªam
, "\n");

183 
	}
}

	@resource.h

52 #i‚de‡
RESOURCE_H


53 
	#RESOURCE_H


	)

55 
	~<°dio.h
>

58 
	#MAX_RES_CLASSES
 16

	)

61 
	#MAX_INSTS_PER_CLASS
 8

	)

64 
	sªs_desc
 {

65 *
	m«me
;

66 
	mqu™tôy
;

67 
	mbusy
;

68 
	sªs_ãm∂©e
 {

69 
	m˛ass
;

72 
	m›œt
;

74 
	missuñ©
;

77 
ªs_desc
 *
	mma°î
;

78 } 
	mx
[
MAX_RES_CLASSES
];

82 
	sªs_poﬁ
 {

83 *
	m«me
;

84 
	mnum_ªsour˚s
;

85 
ªs_desc
 *
	mªsour˚s
;

87 
	m√¡s
[
MAX_RES_CLASSES
];

88 
ªs_ãm∂©e
 *
	mèbÀ
[
MAX_RES_CLASSES
][
MAX_INSTS_PER_CLASS
];

92 
ªs_poﬁ
 *
ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
);

100 
ªs_ãm∂©e
 *
ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
);

103 
ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
);

	@sim-bpred.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"b¥ed.h
"

67 
	~"sim.h
"

74 
ªgs_t
 
	gªgs
;

77 
mem_t
 *
	gmem
 = 
NULL
;

80 
	gmax_ö°s
;

83 *
	g¥ed_ty≥
;

86 
	gbimod_√…
 = 1;

87 
	gbimod_c⁄fig
[1] =

91 
	gtwﬁev_√…
 = 4;

92 
	gtwﬁev_c⁄fig
[4] =

93 { 1, 1024, 8, 
FALSE
};

96 
	gcomb_√…
 = 1;

97 
	gcomb_c⁄fig
[1] =

101 
	gøs_size
 = 8;

104 
	gbtb_√…
 = 2;

105 
	gbtb_c⁄fig
[2] =

109 
b¥ed_t
 *
	g¥ed
;

112 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

115 
cou¡î_t
 
	gsim_num_bønches
 = 0;

120 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

122 
	`›t_ªg_hódî
(
odb
,

127 
	`›t_ªg_nŸe
(
odb
,

144 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

145 &
max_ö°s
, 0,

146  
TRUE
, 
NULL
);

148 
	`›t_ªg_°rög
(
odb
, "-bpred",

150 &
¥ed_ty≥
, "bimod",

151  
TRUE
, 
NULL
);

153 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

155 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

156  
bimod_c⁄fig
,

157  
TRUE
, 
NULL
, 
FALSE
);

159 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

162 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

163  
twﬁev_c⁄fig
,

164  
TRUE
, 
NULL
, 
FALSE
);

166 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

168 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

169  
comb_c⁄fig
,

170  
TRUE
, 
NULL
, 
FALSE
);

172 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

174 &
øs_size
,Ñas_size,

175  
TRUE
, 
NULL
);

177 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

179 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

180  
btb_c⁄fig
,

181  
TRUE
, 
NULL
, 
FALSE
);

182 
	}
}

186 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

188 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

191 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

193 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

196 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

198 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

200 i‡(
bimod_√…
 != 1)

201 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

202 i‡(
btb_√…
 != 2)

203 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

206 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

207  
bimod_c⁄fig
[0],

213  
btb_c⁄fig
[0],

214  
btb_c⁄fig
[1],

215  
øs_size
);

217 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

220 i‡(
twﬁev_√…
 != 4)

221 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

222 i‡(
btb_√…
 != 2)

223 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

225 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

227  
twﬁev_c⁄fig
[0],

228  
twﬁev_c⁄fig
[1],

230  
twﬁev_c⁄fig
[2],

231  
twﬁev_c⁄fig
[3],

232  
btb_c⁄fig
[0],

233  
btb_c⁄fig
[1],

234  
øs_size
);

236 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

239 i‡(
twﬁev_√…
 != 4)

240 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

241 i‡(
bimod_√…
 != 1)

242 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

243 i‡(
comb_√…
 != 1)

244 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

245 i‡(
btb_√…
 != 2)

246 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

248 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

249  
bimod_c⁄fig
[0],

250  
twﬁev_c⁄fig
[0],

251  
twﬁev_c⁄fig
[1],

252  
comb_c⁄fig
[0],

253  
twﬁev_c⁄fig
[2],

254  
twﬁev_c⁄fig
[3],

255  
btb_c⁄fig
[0],

256  
btb_c⁄fig
[1],

257  
øs_size
);

260 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

261 
	}
}

265 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

267 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

269 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

270 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

272 &
sim_num_ªfs
, 0, 
NULL
);

273 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

275 &
sim_ñ≠£d_time
, 0, 
NULL
);

276 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

278 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

280 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

282 &
sim_num_bønches
, 0, 
NULL
);

283 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

285 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

288 i‡(
¥ed
)

289 
	`b¥ed_ªg_°©s
(
¥ed
, 
sdb
);

290 
	}
}

294 
	$sim_öô
()

296 
sim_num_ªfs
 = 0;

299 
	`ªgs_öô
(&
ªgs
);

302 
mem
 = 
	`mem_¸óã
("mem");

303 
	`mem_öô
(
mem
);

304 
	}
}

308 
	$b¥ed_m°©e_obj
(
FILE
 *
°ªam
,

309 *
cmd
,

310 
ªgs_t
 *
ªgs
,

311 
mem_t
 *
mem
)

314 
	`sim_¥öt_°©s
(
°ªam
);

317  
NULL
;

318 
	}
}

322 
	$sim_lﬂd_¥og
(*
‚ame
,

323 
¨gc
, **
¨gv
,

324 **
ívp
)

327 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

330 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
b¥ed_m°©e_obj
);

331 
	}
}

335 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

338 
	}
}

342 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

345 
	}
}

349 
	$sim_unöô
()

352 
	}
}

364 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

367 #unde‡
SET_TPC


368 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

371 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

374 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

375 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

377 #i‡
deföed
(
TARGET_PISA
)

380 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

381 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

382 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

383 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

384 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

385 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

388 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

389 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

390 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

391 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

392 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

393 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

395 #ñi‡
deföed
(
TARGET_ALPHA
)

398 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

399 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

400 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

401 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

404 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

405 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

406 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

407 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

410 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

414 
	#READ_BYTE
(
SRC
, 
FAULT
) \

415 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

416 
	#READ_HALF
(
SRC
, 
FAULT
) \

417 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

418 
	#READ_WORD
(
SRC
, 
FAULT
) \

419 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

420 #ifde‡
HOST_HAS_QWORD


421 
	#READ_QWORD
(
SRC
, 
FAULT
) \

422 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

425 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

426 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

427 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

428 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

429 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

430 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

431 #ifde‡
HOST_HAS_QWORD


432 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

433 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

437 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

441 
	$sim_maö
()

443 
md_ö°_t
 
ö°
;

444 
md_addr_t
 
addr
, 
èrgë_PC
 = 0;

445 
md_›code
 
›
;

446 
is_wrôe
;

447 
°ack_idx
;

448 
md_Áu…_ty≥
 
Áu…
;

450 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/Öredictors **\n");

453 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

456 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

457 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

458 
sim_num_ö¢
, &
ªgs
, 
mem
);

460 
TRUE
)

463 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

464 #ifde‡
TARGET_ALPHA


465 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

469 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

472 
sim_num_ö¢
++;

475 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

478 
Áu…
 = 
md_Áu…_n⁄e
;

481 
	`MD_SET_OPCODE
(
›
, 
ö°
);

484 
›
)

486 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

487 
OP
: \

488 
	`SYMCAT
(
OP
,
_IMPL
); \

489 ;

	)

490 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

491 
OP
: \

492 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

493 
	#CONNECT
(
OP
)

	)

494 
	#DECLARE_FAULT
(
FAULT
) \

495 { 
Áu…
 = (
FAULT
); ; }

	)

496 
	~"machöe.def
"

498 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

501 i‡(
Áu…
 !
md_Áu…_n⁄e
)

502 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

504 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

506 
sim_num_ªfs
++;

507 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

508 
is_wrôe
 = 
TRUE
;

511 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

513 
md_addr_t
 
¥ed_PC
;

514 
b¥ed_upd©e_t
 
upd©e_ªc
;

516 
sim_num_bønches
++;

518 i‡(
¥ed
)

521 
¥ed_PC
 = 
	`b¥ed_lookup
(
¥ed
,

522  
ªgs
.
ªgs_PC
,

523  
èrgë_PC
,

524  
›
,

525  
	`MD_IS_CALL
(
›
),

526  
	`MD_IS_RETURN
(
›
),

527  &
upd©e_ªc
,

528  &
°ack_idx
);

531 i‡(!
¥ed_PC
)

534 
¥ed_PC
 = 
ªgs
.
ªgs_PC
 + (
md_ö°_t
);

537 
	`b¥ed_upd©e
(
¥ed
,

538  
ªgs
.
ªgs_PC
,

539  
ªgs
.
ªgs_NPC
,

540  
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 +

541 (
md_ö°_t
)),

542  
¥ed_PC
 !(
ªgs
.
ªgs_PC
 +

543 (
md_ö°_t
)),

544  
¥ed_PC
 =
ªgs
.
ªgs_NPC
,

545  
›
,

546  &
upd©e_ªc
);

551 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

552 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

553 
addr
, 
sim_num_ö¢
, sim_num_insn))

554 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

557 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

558 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

561 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

564 
	}
}

	@sim-cache.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<m©h.h
>

56 
	~<as£π.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

63 
	~"ˇche.h
"

64 
	~"lﬂdî.h
"

65 
	~"sysˇŒ.h
"

66 
	~"dlôe.h
"

67 
	~"sim.h
"

78 
ªgs_t
 
	gªgs
;

81 
mem_t
 *
	gmem
 = 
NULL
;

84 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

87 
	gmax_ö°s
;

90 
ˇche_t
 *
	gˇche_û1
 = 
NULL
;

93 
ˇche_t
 *
	gˇche_û2
 = 
NULL
;

96 
ˇche_t
 *
	gˇche_dl1
 = 
NULL
;

99 
ˇche_t
 *
	gˇche_dl2
 = 
NULL
;

102 
ˇche_t
 *
	gôlb
 = 
NULL
;

105 
ˇche_t
 *
	gdéb
 = 
NULL
;

108 
	#MAX_PCSTAT_VARS
 8

	)

109 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

110 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

111 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

114 
	#STATVAL
(
STAT
) \

115 ((
STAT
)->
sc
 =
sc_öt
 \

116 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

117 : ((
STAT
)->
sc
 =
sc_uöt
 \

118 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

119 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

120 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

121 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

125 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

126 
md_addr_t
 
baddr
,

127 
bsize
,

128 
ˇche_blk_t
 *
blk
,

129 
tick_t
 
now
)

131 i‡(
ˇche_dl2
)

134  
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

135  
now
, 
NULL
, NULL);

142 
	}
}

146 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

147 
md_addr_t
 
baddr
,

148 
bsize
,

149 
ˇche_blk_t
 *
blk
,

150 
tick_t
 
now
)

155 
	}
}

159 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

160 
md_addr_t
 
baddr
,

161 
bsize
,

162 
ˇche_blk_t
 *
blk
,

163 
tick_t
 
now
)

165 i‡(
ˇche_û2
)

168  
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

169  
now
, 
NULL
, NULL);

176 
	}
}

180 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

181 
md_addr_t
 
baddr
,

182 
bsize
,

183 
ˇche_blk_t
 *
blk
,

184 
tick_t
 
now
)

189 
	}
}

193 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

194 
md_addr_t
 
baddr
,

195 
bsize
,

196 
ˇche_blk_t
 *
blk
,

197 
tick_t
 
now
)

199 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

202 
	`as£π
(
phy_∑ge_±r
);

205 *
phy_∑ge_±r
 = 0;

208 
	}
}

212 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

213 
md_addr_t
 
baddr
,

214 
bsize
,

215 
ˇche_blk_t
 *
blk
,

216 
tick_t
 
now
)

218 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

221 
	`as£π
(
phy_∑ge_±r
);

224 *
phy_∑ge_±r
 = 0;

227 
	}
}

230 *
	gˇche_dl1_›t
 ;

231 *
	gˇche_dl2_›t
 ;

232 *
	gˇche_û1_›t
 ;

233 *
	gˇche_û2_›t
 ;

234 *
	gôlb_›t
 ;

235 *
	gdéb_›t
 ;

236 
	gÊush_⁄_sysˇŒs
 ;

237 
	gcom¥ess_iˇche_addrs
 ;

240 
	gpc°©_√…
 = 0;

241 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

244 #ifde‡
TARGET_PISA


245 
	#IACOMPRESS
(
A
) \

246 (
com¥ess_iˇche_addrs
 ? ((((
A
Ë- 
ld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (A))

	)

247 
	#ISCOMPRESS
(
SZ
) \

248 (
com¥ess_iˇche_addrs
 ? ((
SZ
Ë>> 1Ë: (SZ))

	)

250 
	#IACOMPRESS
(
A
Ë(A)

	)

251 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

256 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

258 
	`›t_ªg_hódî
(
odb
,

267 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

268 &
max_ö°s
, 0,

269  
TRUE
, 
NULL
);

271 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

273 &
ˇche_dl1_›t
, "dl1:256:32:1:l", 
TRUE
, 
NULL
);

274 
	`›t_ªg_nŸe
(
odb
,

288 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

290 &
ˇche_dl2_›t
, "ul2:1024:64:4:l", 
TRUE
, 
NULL
);

291 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

293 &
ˇche_û1_›t
, "û1:256:32:1:l", 
TRUE
, 
NULL
);

294 
	`›t_ªg_nŸe
(
odb
,

307 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

309 &
ˇche_û2_›t
, "dl2", 
TRUE
, 
NULL
);

310 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

312 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

313 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

315 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

316 
	`›t_ªg_Êag
(
odb
, "-flush", "flush caches on system calls",

317 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

318 
	`›t_ªg_Êag
(
odb
, "-cache:icompress",

320 &
com¥ess_iˇche_addrs
, 
FALSE
,

321  
TRUE
, 
NULL
);

323 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

325 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

326  
FALSE
, 
NULL
, 
TRUE
);

328 
	}
}

332 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

333 
¨gc
, **
¨gv
)

335 
«me
[128], 
c
;

336 
n£ts
, 
bsize
, 
assoc
;

339 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

341 
ˇche_dl1
 = 
NULL
;

344 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

345 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

346 
ˇche_dl2
 = 
NULL
;

350 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

351 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

352 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

353 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

354  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

355 
dl1_ac˚ss_‚
, 1);

358 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

359 
ˇche_dl2
 = 
NULL
;

362 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

363 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

364 
	`Áèl
("badÜ2 D-cacheÖarms: "

366 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

367  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

368 
dl2_ac˚ss_‚
, 1);

373 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

375 
ˇche_û1
 = 
NULL
;

378 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

379 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

380 
ˇche_û2
 = 
NULL
;

382 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

384 i‡(!
ˇche_dl1
)

385 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

386 
ˇche_û1
 = 
ˇche_dl1
;

389 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

390 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

391 
ˇche_û2
 = 
NULL
;

393 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

395 i‡(!
ˇche_dl2
)

396 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

397 
ˇche_û1
 = 
ˇche_dl2
;

400 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

401 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

402 
ˇche_û2
 = 
NULL
;

406 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

407 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

408 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

409 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

410  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

411 
û1_ac˚ss_‚
, 1);

414 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

415 
ˇche_û2
 = 
NULL
;

416 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

418 i‡(!
ˇche_dl2
)

419 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

420 
ˇche_û2
 = 
ˇche_dl2
;

424 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

425 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

426 
	`Áèl
("badÜ2 I-cacheÖarms: "

428 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

429  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

430 
û2_ac˚ss_‚
, 1);

435 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

436 
ôlb
 = 
NULL
;

439 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

440 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

441 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

442 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

443  (
md_addr_t
), 
assoc
,

444 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

449 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

450 
déb
 = 
NULL
;

453 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

454 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

455 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

456 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

457  (
md_addr_t
), 
assoc
,

458 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

461 
	}
}

465 
	$sim_öô
()

467 
sim_num_ªfs
 = 0;

470 
	`ªgs_öô
(&
ªgs
);

473 
mem
 = 
	`mem_¸óã
("mem");

474 
	`mem_öô
(
mem
);

475 
	}
}

479 
	$ˇche_m°©e_obj
(
FILE
 *
°ªam
,

480 *
cmd
,

481 
ªgs_t
 *
ªgs
,

482 
mem_t
 *
mem
)

485 
	`sim_¥öt_°©s
(
°ªam
);

488  
NULL
;

489 
	}
}

493 
	$sim_lﬂd_¥og
(*
‚ame
,

494 
¨gc
, **
¨gv
,

495 **
ívp
)

498 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

501 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
ˇche_m°©e_obj
);

502 
	}
}

506 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

509 
	}
}

513 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

515 
i
;

518 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

520 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

521 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

523 &
sim_num_ªfs
, 0, 
NULL
);

524 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

526 &
sim_ñ≠£d_time
, 0, 
NULL
);

527 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

529 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

532 i‡(
ˇche_û1


533 && (
ˇche_û1
 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

534 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

535 i‡(
ˇche_û2


536 && (
ˇche_û2
 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

537 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

538 i‡(
ˇche_dl1
)

539 
	`ˇche_ªg_°©s
(
ˇche_dl1
, 
sdb
);

540 i‡(
ˇche_dl2
)

541 
	`ˇche_ªg_°©s
(
ˇche_dl2
, 
sdb
);

542 i‡(
ôlb
)

543 
	`ˇche_ªg_°©s
(
ôlb
, 
sdb
);

544 i‡(
déb
)

545 
	`ˇche_ªg_°©s
(
déb
, 
sdb
);

547 
i
=0; i<
pc°©_√…
; i++)

549 
buf
[512], 
buf1
[512];

550 
°©_°©_t
 *
°©
;

555 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

556 i‡(!
°©
)

557 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

560 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

561 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

562 
°©
->
«me
);

565 
pc°©_°©s
[
i
] = 
°©
;

566 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

569 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

570 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

571 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

573  (
PF_COUNT
|
PF_PDF
),

575  
NULL
);

577 
	`ld_ªg_°©s
(
sdb
);

578 
	`mem_ªg_°©s
(
mem
, 
sdb
);

579 
	}
}

583 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

586 
	}
}

590 
	$sim_unöô
()

593 
	}
}

604 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

607 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

610 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

611 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

613 #i‡
deföed
(
TARGET_PISA
)

616 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

617 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

618 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

619 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

620 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

621 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

624 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

625 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

626 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

627 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

628 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

629 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

631 #ñi‡
deföed
(
TARGET_ALPHA
)

634 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

635 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

636 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

637 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

640 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

641 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

642 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

643 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

646 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

650 
	#__READ_CACHE
(
addr
, 
SRC_T
) \

651 ((
déb
 \

652 ? 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
addr
), 
NULL
, \

653 (
SRC_T
), 0, 
NULL
, NULL) \

655 (
ˇche_dl1
 \

656 ? 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Ród
, (
addr
), 
NULL
, \

657 (
SRC_T
), 0, 
NULL
, NULL) \

658 : 0))

	)

660 
	#READ_BYTE
(
SRC
, 
FAULT
) \

661 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

662 
	`__READ_CACHE
(
addr
, 
byã_t
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

663 
	#READ_HALF
(
SRC
, 
FAULT
) \

664 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

665 
	`__READ_CACHE
(
addr
, 
hÆf_t
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

666 
	#READ_WORD
(
SRC
, 
FAULT
) \

667 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

668 
	`__READ_CACHE
(
addr
, 
w‹d_t
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

669 #ifde‡
HOST_HAS_QWORD


670 
	#READ_QWORD
(
SRC
, 
FAULT
) \

671 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

672 
	`__READ_CACHE
(
addr
, 
qw‹d_t
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

675 
	#__WRITE_CACHE
(
addr
, 
DST_T
) \

676 ((
déb
 \

677 ? 
	`ˇche_ac˚ss
(
déb
, 
Wrôe
, (
addr
), 
NULL
, \

678 (
DST_T
), 0, 
NULL
, NULL) \

680 (
ˇche_dl1
 \

681 ? 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Wrôe
, (
addr
), 
NULL
, \

682 (
DST_T
), 0, 
NULL
, NULL) \

683 : 0))

	)

685 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

686 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

687 
	`__WRITE_CACHE
(
addr
, 
byã_t
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

688 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

689 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

690 
	`__WRITE_CACHE
(
addr
, 
hÆf_t
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

691 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

692 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

693 
	`__WRITE_CACHE
(
addr
, 
w‹d_t
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

694 #ifde‡
HOST_HAS_QWORD


695 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

696 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

697 
	`__WRITE_CACHE
(
addr
, 
qw‹d_t
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

701 
md_Áu…_ty≥


702 
	$dˇche_ac˚ss_‚
(
mem_t
 *
mem
,

703 
mem_cmd
 
cmd
,

704 
md_addr_t
 
addr
,

705 *
p
,

706 
nbyãs
)

708 i‡(
déb
)

709 
	`ˇche_ac˚ss
(
déb
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

710 i‡(
ˇche_dl1
)

711 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

712  
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

713 
	}
}

716 
	#SYSCALL
(
INST
) \

717 (
Êush_⁄_sysˇŒs
 \

718 ? ((
déb
 ? 
	`ˇche_Êush
(dtlb, 0) : 0), \

719 (
ˇche_dl1
 ? 
	`ˇche_Êush
(cache_dl1, 0) : 0), \

720 (
ˇche_dl2
 ? 
	`ˇche_Êush
(cache_dl2, 0) : 0), \

721 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
)) \

722 : 
	`sys_sysˇŒ
(&
ªgs
, 
dˇche_ac˚ss_‚
, 
mem
, 
INST
, 
TRUE
))

	)

726 
	$sim_maö
()

728 
i
;

729 
md_ö°_t
 
ö°
;

730 
md_addr_t
 
addr
;

731 
md_›code
 
›
;

732 
is_wrôe
;

733 
md_Áu…_ty≥
 
Áu…
;

735 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/ caches **\n");

738 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

741 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

742 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

743 
sim_num_ö¢
, &
ªgs
, 
mem
);

745 
TRUE
)

748 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

749 #ifde‡
TARGET_ALPHA


750 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

754 i‡(
ôlb
)

755 
	`ˇche_ac˚ss
(
ôlb
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

756 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

757 i‡(
ˇche_û1
)

758 
	`ˇche_ac˚ss
(
ˇche_û1
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

759 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

760 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

763 
sim_num_ö¢
++;

766 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

769 
Áu…
 = 
md_Áu…_n⁄e
;

772 
	`MD_SET_OPCODE
(
›
, 
ö°
);

775 
›
)

777 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

778 
OP
: \

779 
	`SYMCAT
(
OP
,
_IMPL
); \

780 ;

	)

781 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

782 
OP
: \

783 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

784 
	#CONNECT
(
OP
)

	)

785 
	#DECLARE_FAULT
(
FAULT
) \

786 { 
Áu…
 = (
FAULT
); ; }

	)

787 
	~"machöe.def
"

789 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

792 i‡(
Áu…
 !
md_Áu…_n⁄e
)

793 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

795 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

797 
sim_num_ªfs
++;

798 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

799 
is_wrôe
 = 
TRUE
;

803 
i
=0; i < 
pc°©_√…
; i++)

805 
cou¡î_t
 
√wvÆ
;

806 
dñè
;

809 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

810 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

811 i‡(
dñè
 != 0)

813 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

814 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

820 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

821 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

822 
addr
, 
sim_num_ö¢
, sim_num_insn))

823 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

826 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

827 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

830 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

833 
	}
}

	@sim-eio.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"eio.h
"

67 
	~"ønge.h
"

68 
	~"sim.h
"

78 
ªgs_t
 
	gªgs
;

81 
mem_t
 *
	gmem
 = 
NULL
;

84 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

87 
	gmax_ö°s
;

90 
	gÁ°fwd_cou¡
;

93 
	gÁ°fwdög
 = 
FALSE
;

96 *
	gåa˚_‚ame
;

97 
FILE
 *
	gåa˚_fd
 = 
NULL
;

100 íum { 
	mno_chk±
, 
	m⁄e_shŸ_chk±
, 
	m≥riodic_chk±
 } 
	gchk±_köd
 = 
no_chk±
;

101 *
	gchk±_‚ame
;

102 
FILE
 *
	gchk±_fd
 = 
NULL
;

103 
ønge_ønge_t
 
	gchk±_ønge
;

106 
cou¡î_t
 
	g≥r_chk±_öãrvÆ
;

107 
cou¡î_t
 
	g√xt_chk±_cy˛e
;

108 
	gchk±_num
;

111 
	gchk±_√…
 = 0;

112 *
	gchk±_›ts
[2];

115 
	g≥r_chk±_√…
 = 0;

116 *
	g≥r_chk±_›ts
[2];

121 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

123 
	`›t_ªg_hódî
(
odb
,

136 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

137 &
max_ö°s
, 0,

138  
TRUE
, 
NULL
);

140 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅracing starts",

141 &
Á°fwd_cou¡
, 0,

142  
TRUE
, 
NULL
);

144 
	`›t_ªg_°rög
(
odb
, "-trace", "EIOÅrace file output fileÇame",

145 &
åa˚_‚ame
, 
NULL
,

146  
TRUE
, 
NULL
);

148 
	`›t_ªg_°rög_li°
(
odb
, "-perdump",

151 
≥r_chk±_›ts
, 2, &
≥r_chk±_√…
,

152  
NULL
,

153  
FALSE
, 
NULL
, FALSE);

155 
	`›t_ªg_°rög_li°
(
odb
, "-dump",

157 
chk±_›ts
, 2, &
chk±_√…
, 
NULL
,

158  
FALSE
, 
NULL
, FALSE);

160 
	`›t_ªg_nŸe
(
odb
,

177 
	}
}

181 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

183 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

184 
	`Áèl
("bad fa° f‹w¨d cou¡: %d", 
Á°fwd_cou¡
);

185 
	}
}

189 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

191 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

193 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

194 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

196 &
sim_num_ªfs
, 0, 
NULL
);

197 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

199 &
sim_ñ≠£d_time
, 0, 
NULL
);

200 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

202 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

203 
	`ld_ªg_°©s
(
sdb
);

204 
	`mem_ªg_°©s
(
mem
, 
sdb
);

205 
	}
}

209 
	$sim_öô
()

211 
sim_num_ªfs
 = 0;

214 
	`ªgs_öô
(&
ªgs
);

217 
mem
 = 
	`mem_¸óã
("mem");

218 
	`mem_öô
(
mem
);

219 
	}
}

223 
	$sim_lﬂd_¥og
(*
‚ame
,

224 
¨gc
, **
¨gv
,

225 **
ívp
)

228 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

230 i‡(
chk±_√…
 == 2)

232 *
îr°r
;

235 i‡(!
sim_eio_fd
)

236 
	`Áèl
("checkpoints can only be generated whileÑunningán EIOÅrace");

239 i‡(
≥r_chk±_√…
 != 0)

240 
	`Áèl
("can't do bothÑegularándÖeriodic checkpoints");

243 i‡(
åa˚_‚ame
 !
NULL
)

244 
	`Áèl
("checkpoints cannot be generated with generatingán EIOÅrace");

248 
îr°r
 = 
	`ønge_∑r£_ønge
(
chk±_›ts
[1], &
chk±_ønge
);

249 i‡(
îr°r
)

250 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

253 
chk±_‚ame
 = 
chk±_›ts
[0];

254 
chk±_fd
 = 
	`eio_¸óã
(
chk±_‚ame
);

257 
chk±_köd
 = 
⁄e_shŸ_chk±
;

260 i‡(
≥r_chk±_√…
 == 2)

262 
chk±_‚ame
 = 
≥r_chk±_›ts
[0];

263 i‡(
	`°rchr
(
chk±_‚ame
, '%'Ë=
NULL
)

264 
	`Áèl
("periodic checkpoint filename must beÖrintf-style format");

266 i‡(
	`ssˇnf
(
≥r_chk±_›ts
[1], "%Ld", &
≥r_chk±_öãrvÆ
) != 1)

267 
	`Áèl
("can'tÖarseÖeriodic checkpoint interval '%s'",

268 
≥r_chk±_›ts
[1]);

271 
chk±_köd
 = 
≥riodic_chk±
;

272 
chk±_num
 = 1;

273 
√xt_chk±_cy˛e
 = 
≥r_chk±_öãrvÆ
;

276 i‡(
åa˚_‚ame
 !
NULL
)

278 
	`Ârötf
(
°dîr
, "sim:ÅracingÉxecutionÅo EIO file `%s'...\n",

279 
åa˚_‚ame
);

282 
åa˚_fd
 = 
	`eio_¸óã
(
åa˚_‚ame
);

286 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

287 
	}
}

292 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

295 
	}
}

299 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

302 
	}
}

306 
	$sim_unöô
()

308 i‡(
åa˚_fd
 !
NULL
)

309 
	`eio_˛o£
(
åa˚_fd
);

310 
	}
}

322 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

325 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

328 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

329 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

331 #i‡
deföed
(
TARGET_PISA
)

334 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

335 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

336 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

337 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

338 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

339 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

342 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

343 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

344 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

345 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

346 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

347 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

349 #ñi‡
deföed
(
TARGET_ALPHA
)

352 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

353 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

354 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

355 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

358 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

359 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

360 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

361 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

364 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

368 
	#READ_BYTE
(
SRC
, 
FAULT
) \

369 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

370 
	#READ_HALF
(
SRC
, 
FAULT
) \

371 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

372 
	#READ_WORD
(
SRC
, 
FAULT
) \

373 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

374 #ifde‡
HOST_HAS_QWORD


375 
	#READ_QWORD
(
SRC
, 
FAULT
) \

376 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

379 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

380 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

381 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

382 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

383 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

384 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

385 #ifde‡
HOST_HAS_QWORD


386 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

387 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

391 
	#SYSCALL
(
INST
) \

392 ((
åa˚_fd
 !
NULL
 && !
Á°fwdög
) \

393 ? 
	`eio_wrôe_åa˚
(
åa˚_fd
, 
sim_num_ö¢
, \

394 &
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
) \

395 : 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
))

	)

399 
	$sim_maö
()

401 
md_ö°_t
 
ö°
;

402 
md_addr_t
 
addr
;

403 
md_›code
 
›
;

404 
boﬁ_t
 
is_wrôe
;

405 
md_Áu…_ty≥
 
Áu…
;

408 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

411 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

412 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

413 
sim_num_ö¢
, &
ªgs
, 
mem
);

417 i‡(
Á°fwd_cou¡
 > 0)

419 
icou¡
;

421 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %d in°†**\n", 
Á°fwd_cou¡
);

423 
Á°fwdög
 = 
TRUE
;

424 
icou¡
=0; icou¡ < 
Á°fwd_cou¡
; icount++)

427 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

428 #ifde‡
TARGET_ALPHA


429 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

433 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

436 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

439 
Áu…
 = 
md_Áu…_n⁄e
;

442 
	`MD_SET_OPCODE
(
›
, 
ö°
);

445 
›
)

447 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

448 
OP
: \

449 
	`SYMCAT
(
OP
,
_IMPL
); \

450 ;

	)

451 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

452 
OP
: \

453 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

454 
	#CONNECT
(
OP
)

	)

455 #unde‡
DECLARE_FAULT


456 
	#DECLARE_FAULT
(
FAULT
) \

457 { 
Áu…
 = (
FAULT
); ; }

	)

458 
	~"machöe.def
"

460 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

463 i‡(
Áu…
 !
md_Áu…_n⁄e
)

464 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

467 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

469 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

470 
is_wrôe
 = 
TRUE
;

474 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

475 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

476 
addr
, 
sim_num_ö¢
, sim_num_insn))

477 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

480 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

481 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

484 
Á°fwdög
 = 
FALSE
;

486 i‡(
åa˚_fd
 !
NULL
)

488 
	`Ârötf
(
°dîr
, "sim: writing EIO file initial checkpoint...\n");

489 i‡(
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
åa˚_fd
) != -1)

490 
	`∑nic
("checkpoint code is broken");

493 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

496 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

498 
TRUE
)

501 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

502 #ifde‡
TARGET_ALPHA


503 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

507 i‡(
chk±_köd
 =
⁄e_shŸ_chk±


508 && !
	`ønge_cmp_ønge1
(&
chk±_ønge
, 
ªgs
.
ªgs_NPC
,

509 
sim_num_ö¢
, sim_num_insn))

511 
	`myÂrötf
(
°dîr
, "sim: writing checkpoint file `%s' @ inst %n...\n",

512 
chk±_‚ame
, 
sim_num_ö¢
);

515 
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
chk±_fd
);

518 
	`eio_˛o£
(
chk±_fd
);

521 
	`l⁄gjmp
(
sim_exô_buf
, 0+1);

523 i‡(
chk±_köd
 =
≥riodic_chk±


524 && 
sim_num_ö¢
 =
√xt_chk±_cy˛e
)

526 
this_chk±_‚ame
[256];

529 
	`•rötf
(
this_chk±_‚ame
, 
chk±_‚ame
, 
chk±_num
);

530 
chk±_fd
 = 
	`eio_¸óã
(
this_chk±_‚ame
);

532 
	`myÂrötf
(
°dîr
, "sim: writing checkpoint file `%s' @ inst %n...\n",

533 
this_chk±_‚ame
, 
sim_num_ö¢
);

536 
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
chk±_fd
);

539 
	`eio_˛o£
(
chk±_fd
);

541 
chk±_num
++;

542 
√xt_chk±_cy˛e
 +
≥r_chk±_öãrvÆ
;

546 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

549 
sim_num_ö¢
++;

552 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

555 
Áu…
 = 
md_Áu…_n⁄e
;

558 
	`MD_SET_OPCODE
(
›
, 
ö°
);

561 
›
)

563 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

564 
OP
: \

565 
	`SYMCAT
(
OP
,
_IMPL
); \

566 ;

	)

567 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

568 
OP
: \

569 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

570 
	#CONNECT
(
OP
)

	)

571 
	#DECLARE_FAULT
(
FAULT
) \

572 { 
Áu…
 = (
FAULT
); ; }

	)

573 
	~"machöe.def
"

575 
	`∑nic
("bogus opcode");

578 i‡(
Áu…
 !
md_Áu…_n⁄e
)

579 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

581 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

583 
sim_num_ªfs
++;

584 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

585 
is_wrôe
 = 
TRUE
;

589 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

590 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

591 
addr
, 
sim_num_ö¢
, sim_num_insn))

592 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

595 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

596 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

599 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

602 
	}
}

	@sim-fast.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

70 #unde‡
NO_INSN_COUNT


72 #ifde‡
__GNUC__


79 
	~"ho°.h
"

80 
	~"misc.h
"

81 
	~"machöe.h
"

82 
	~"ªgs.h
"

83 
	~"mem‹y.h
"

84 
	~"lﬂdî.h
"

85 
	~"sysˇŒ.h
"

86 
	~"dlôe.h
"

87 
	~"sim.h
"

90 
ªgs_t
 
	gªgs
;

93 
mem_t
 *
	gmem
 = 
NULL
;

95 #ifde‡
TARGET_ALPHA


97 
mem_t
 *
	gdec
 = 
NULL
;

102 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

104 
	`›t_ªg_hódî
(
odb
,

113 
	}
}

117 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

119 i‡(
dlôe_a˘ive
)

120 
	`Áèl
("sim-fast doesÇot support DLite debugging");

121 
	}
}

125 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

127 #i‚de‡
NO_INSN_COUNT


128 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

130 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

132 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

134 &
sim_ñ≠£d_time
, 0, 
NULL
);

135 #i‚de‡
NO_INSN_COUNT


136 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

138 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

140 
	`ld_ªg_°©s
(
sdb
);

141 
	`mem_ªg_°©s
(
mem
, 
sdb
);

142 #ifde‡
TARGET_ALPHA


143 
	`mem_ªg_°©s
(
dec
, 
sdb
);

145 
	}
}

149 
	$sim_öô
()

152 
	`ªgs_öô
(&
ªgs
);

155 
mem
 = 
	`mem_¸óã
("mem");

156 
	`mem_öô
(
mem
);

157 
	}
}

161 
	$sim_lﬂd_¥og
(*
‚ame
,

162 
¨gc
, **
¨gv
,

163 **
ívp
)

166 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

168 #ifde‡
TARGET_ALPHA


171 
i
, 
num_ö¢
 = (
ld_ãxt_size
 + 3) / 4;

173 
	`Ârötf
(
°dîr
, "**Öª-decodög %u in°s...", 
num_ö¢
);

176 
dec
 = 
	`mem_¸óã
("dec");

178 
i
=0; i < 
num_ö¢
; i++)

180 
md_›code
 
›
;

181 
md_ö°_t
 
ö°
;

182 
md_addr_t
 
PC
;

185 
PC
 = 
ld_ãxt_ba£
 + 
i
 * (
md_ö°_t
);

188 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
PC
);

191 
	`MD_SET_OPCODE
(
›
, 
ö°
);

194 
	`MEM_WRITE_WORD
(
dec
, 
PC
 << 1, (
w‹d_t
)
›
);

195 
	`MEM_WRITE_WORD
(
dec
, (
PC
 << 1)+(
w‹d_t
), 
ö°
);

197 
	`Ârötf
(
°dîr
, "done\n");

200 
	}
}

204 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

207 
	}
}

211 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

214 
	}
}

218 
	$sim_unöô
()

221 
	}
}

228 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

231 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

234 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

235 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

237 #i‡
deföed
(
TARGET_PISA
)

240 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

241 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

242 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

243 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

244 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

245 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

248 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

249 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

250 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

251 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

252 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

253 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

255 #ñi‡
deföed
(
TARGET_ALPHA
)

258 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

259 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

260 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

261 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

264 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

265 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

266 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

267 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

270 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

274 
	#READ_BYTE
(
SRC
, 
FAULT
) \

275 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, (
SRC
)))

	)

276 
	#READ_HALF
(
SRC
, 
FAULT
) \

277 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, (
SRC
)))

	)

278 
	#READ_WORD
(
SRC
, 
FAULT
) \

279 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, (
SRC
)))

	)

280 #ifde‡
HOST_HAS_QWORD


281 
	#READ_QWORD
(
SRC
, 
FAULT
) \

282 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, (
SRC
)))

	)

285 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

286 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, (
DST
), (
SRC
)))

	)

287 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

288 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, (
DST
), (
SRC
)))

	)

289 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

290 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, (
DST
), (
SRC
)))

	)

291 #ifde‡
HOST_HAS_QWORD


292 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

293 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, (
DST
), (
SRC
)))

	)

297 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

299 #i‚de‡
NO_INSN_COUNT


300 
	#INC_INSN_CTR
(Ë
sim_num_ö¢
++

	)

302 
	#INC_INSN_CTR
(Ë

	)

305 #ifde‡
TARGET_ALPHA


306 
	#ZERO_FP_REG
(Ë
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0

	)

308 
	#ZERO_FP_REG
(Ë

	)

313 
	$sim_maö
()

315 #ifde‡
USE_JUMP_TABLE


325 *
›_jump
[ ] = {

326 &&
›code_NA
,

327 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

328 &&
›code_
##
OP
,

	)

329 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

330 &&
›code_
##
OP
,

	)

331 
	#CONNECT
(
OP
)

	)

332 
	~"machöe.def
"

337 
md_ö°_t
 
ö°
;

340 
md_›code
 
›
;

342 
	`Ârötf
(
°dîr
, "sim: ** starting *fast* functional simulation **\n");

345 i‡(
sim_sw≠_byãs
 || 
sim_sw≠_w‹ds
)

346 
	`Áèl
("sim: *fast* functional simulation cannot swap bytes or words");

348 #ifde‡
USE_JUMP_TABLE


350 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
;

353 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_NPC
);

356 
	`MD_SET_OPCODE
(
›
, 
ö°
);

357 *
›_jump
[
›
];

359 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

360 
›code_
##
OP
: \

362 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0; \

363 
	`ZERO_FP_REG
(); \

366 
	`INC_INSN_CTR
(); \

369 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
; \

372 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
); \

375 
	`SYMCAT
(
OP
,
_IMPL
); \

378 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_NPC
); \

381 
	`MD_SET_OPCODE
(
›
, 
ö°
); \

382 *
›_jump
[
›
];

	)

384 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

385 
›code_
##
OP
: \

386 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

387 
	#CONNECT
(
OP
)

	)

388 
	#DECLARE_FAULT
(
FAULT
) \

389 { ; }

	)

390 
	~"machöe.def
"

392 
›code_NA
:

393 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

396 
	`∑nic
("exited sim-fast mainÜoop");

401 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

403 
TRUE
)

406 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

407 #ifde‡
TARGET_ALPHA


408 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

412 #i‚de‡
NO_INSN_COUNT


413 
sim_num_ö¢
++;

416 #ifde‡
TARGET_ALPHA


418 
›
 = (
md_›code
)
	`__UNCHK_MEM_READ
(
dec
, 
ªgs
.
ªgs_PC
 << 1, 
w‹d_t
);

419 
ö°
 =

420 
	`__UNCHK_MEM_READ
(
dec
, (
ªgs
.
ªgs_PC
 << 1)+(
w‹d_t
), 
md_ö°_t
);

423 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

426 
	`MD_SET_OPCODE
(
›
, 
ö°
);

430 
›
)

432 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

433 
OP
: \

434 
	`SYMCAT
(
OP
,
_IMPL
); \

435 ;

	)

436 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

437 
OP
: \

438 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

439 
	#CONNECT
(
OP
)

	)

440 
	#DECLARE_FAULT
(
FAULT
) \

441 { ; }

	)

442 
	~"machöe.def
"

444 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

448 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

449 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

453 
	}
}

	@sim-outorder.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

55 
	~<as£π.h
>

56 
	~<sig«l.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

63 
	~"ˇche.h
"

64 
	~"lﬂdî.h
"

65 
	~"sysˇŒ.h
"

66 
	~"b¥ed.h
"

67 
	~"ªsour˚.h
"

68 
	~"bôm≠.h
"

69 
	~"›ti⁄s.h
"

70 
	~"evÆ.h
"

71 
	~"°©s.h
"

72 
	~"±ø˚.h
"

73 
	~"dlôe.h
"

74 
	~"sim.h
"

84 
ªgs_t
 
	gªgs
;

87 
mem_t
 *
	gmem
 = 
NULL
;

95 
	gmax_ö°s
;

98 
	gÁ°fwd_cou¡
;

101 
	g±ø˚_√…
 = 0;

102 *
	g±ø˚_›ts
[2];

105 
	gruu_ifq_size
;

108 
	gruu_bønch_≥«…y
;

111 
	g„tch_•ìd
;

114 *
	g¥ed_ty≥
;

117 
	gbimod_√…
 = 1;

118 
	gbimod_c⁄fig
[1] =

122 
	gtwﬁev_√…
 = 4;

123 
	gtwﬁev_c⁄fig
[4] =

124 { 1, 1024, 8, 
FALSE
};

127 
	gcomb_√…
 = 1;

128 
	gcomb_c⁄fig
[1] =

132 
	gøs_size
 = 8;

135 
	gbtb_√…
 = 2;

136 
	gbtb_c⁄fig
[2] =

140 
	gruu_decode_width
;

143 
	gruu_issue_width
;

146 
	gruu_ö‹dî_issue
;

149 
	gruu_ö˛ude_•ec
 = 
TRUE
;

152 
	gruu_commô_width
;

155 
	gRUU_size
 = 8;

158 
	gLSQ_size
 = 4;

161 *
	gˇche_dl1_›t
;

164 
	gˇche_dl1_œt
;

167 *
	gˇche_dl2_›t
;

170 
	gˇche_dl2_œt
;

173 *
	gˇche_û1_›t
;

176 
	gˇche_û1_œt
;

179 *
	gˇche_û2_›t
;

182 
	gˇche_û2_œt
;

185 
	gÊush_⁄_sysˇŒs
;

188 
	gcom¥ess_iˇche_addrs
;

191 
	gmem_√…
 = 2;

192 
	gmem_œt
[2] =

196 
	gmem_bus_width
;

199 *
	gôlb_›t
;

202 *
	gdéb_›t
;

205 
	géb_miss_œt
;

208 
	gªs_ülu
;

211 
	gªs_imu…
;

214 
	gªs_memp‹t
;

217 
	gªs_ÂÆu
;

220 
	gªs_Âmu…
;

223 
	#MAX_PCSTAT_VARS
 8

	)

224 
	gpc°©_√…
 = 0;

225 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

228 #ifde‡
TARGET_PISA


229 
	#IACOMPRESS
(
A
) \

230 (
com¥ess_iˇche_addrs
 ? ((((
A
Ë- 
ld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (A))

	)

231 
	#ISCOMPRESS
(
SZ
) \

232 (
com¥ess_iˇche_addrs
 ? ((
SZ
Ë>> 1Ë: (SZ))

	)

234 
	#IACOMPRESS
(
A
Ë(A)

	)

235 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

239 
	gbugcom∑t_mode
;

246 
	#FU_IALU_INDEX
 0

	)

247 
	#FU_IMULT_INDEX
 1

	)

248 
	#FU_MEMPORT_INDEX
 2

	)

249 
	#FU_FPALU_INDEX
 3

	)

250 
	#FU_FPMULT_INDEX
 4

	)

253 
ªs_desc
 
	gfu_c⁄fig
[] = {

259 { 
I¡ALU
, 1, 1 }

267 { 
I¡MULT
, 3, 1 },

268 { 
I¡DIV
, 20, 19 }

276 { 
RdP‹t
, 1, 1 },

277 { 
WrP‹t
, 1, 1 }

285 { 
FlﬂtADD
, 2, 1 },

286 { 
FlﬂtCMP
, 2, 1 },

287 { 
FlﬂtCVT
, 2, 1 }

295 { 
FlﬂtMULT
, 4, 1 },

296 { 
FlﬂtDIV
, 12, 12 },

297 { 
FlﬂtSQRT
, 24, 24 }

307 
cou¡î_t
 
	gsim_¶ù
 = 0;

310 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

313 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

316 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

319 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

322 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

325 
cou¡î_t
 
	gsim_num_bønches
 = 0;

328 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

331 
tick_t
 
	gsim_cy˛e
 = 0;

334 
cou¡î_t
 
	gIFQ_cou¡
;

335 
cou¡î_t
 
	gIFQ_fcou¡
;

336 
cou¡î_t
 
	gRUU_cou¡
;

337 
cou¡î_t
 
	gRUU_fcou¡
;

338 
cou¡î_t
 
	gLSQ_cou¡
;

339 
cou¡î_t
 
	gLSQ_fcou¡
;

342 
cou¡î_t
 
	gsim_övÆid_addrs
;

349 
	gö°_£q
 = 0;

352 
	g±ø˚_£q
 = 0;

358 
	g•ec_mode
 = 
FALSE
;

361 
	gruu_„tch_issue_dñay
 = 0;

364 
	g¥ed_≥r„˘
 = 
FALSE
;

367 *
	gb¥ed_•ec_›t
;

368 íum { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 } 
	gb¥ed_•ec_upd©e
;

371 
ˇche_t
 *
	gˇche_û1
;

374 
ˇche_t
 *
	gˇche_û2
;

377 
ˇche_t
 *
	gˇche_dl1
;

380 
ˇche_t
 *
	gˇche_dl2
;

383 
ˇche_t
 *
	gôlb
;

386 
ˇche_t
 *
	gdéb
;

389 
b¥ed_t
 *
	g¥ed
;

392 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

395 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

396 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

397 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

400 
	#STATVAL
(
STAT
) \

401 ((
STAT
)->
sc
 =
sc_öt
 \

402 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

403 : ((
STAT
)->
sc
 =
sc_uöt
 \

404 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

405 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

406 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

407 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

412 
	$mem_ac˚ss_œãncy
(
blk_sz
)

414 
chunks
 = (
blk_sz
 + (
mem_bus_width
 - 1)) / mem_bus_width;

416 
	`as£π
(
chunks
 > 0);

418  ( 
mem_œt
[0] +

419 –
mem_œt
[1] * (
chunks
 - 1)));

420 
	}
}

429 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

430 
md_addr_t
 
baddr
,

431 
bsize
,

432 
ˇche_blk_t
 *
blk
,

433 
tick_t
 
now
)

435 
œt
;

437 i‡(
ˇche_dl2
)

440 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

441  
now
, 
NULL
, NULL);

442 i‡(
cmd
 =
Ród
)

443  
œt
;

453 i‡(
cmd
 =
Ród
)

454  
	`mem_ac˚ss_œãncy
(
bsize
);

461 
	}
}

465 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

466 
md_addr_t
 
baddr
,

467 
bsize
,

468 
ˇche_blk_t
 *
blk
,

469 
tick_t
 
now
)

472 i‡(
cmd
 =
Ród
)

473  
	`mem_ac˚ss_œãncy
(
bsize
);

479 
	}
}

483 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

484 
md_addr_t
 
baddr
,

485 
bsize
,

486 
ˇche_blk_t
 *
blk
,

487 
tick_t
 
now
)

489 
œt
;

491 i‡(
ˇche_û2
)

494 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

495  
now
, 
NULL
, NULL);

496 i‡(
cmd
 =
Ród
)

497  
œt
;

499 
	`∑nic
("writesÅo instruction memoryÇot supported");

504 i‡(
cmd
 =
Ród
)

505  
	`mem_ac˚ss_œãncy
(
bsize
);

507 
	`∑nic
("writesÅo instruction memoryÇot supported");

509 
	}
}

513 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

514 
md_addr_t
 
baddr
,

515 
bsize
,

516 
ˇche_blk_t
 *
blk
,

517 
tick_t
 
now
)

520 i‡(
cmd
 =
Ród
)

521  
	`mem_ac˚ss_œãncy
(
bsize
);

523 
	`∑nic
("writesÅo instruction memoryÇot supported");

524 
	}
}

533 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

534 
md_addr_t
 
baddr
,

535 
bsize
,

536 
ˇche_blk_t
 *
blk
,

537 
tick_t
 
now
)

539 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

542 
	`as£π
(
phy_∑ge_±r
);

545 *
phy_∑ge_±r
 = 0;

548  
éb_miss_œt
;

549 
	}
}

553 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

554 
md_addr_t
 
baddr
,

555 
bsize
,

556 
ˇche_blk_t
 *
blk
,

557 
tick_t
 
now
)

559 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

562 
	`as£π
(
phy_∑ge_±r
);

565 *
phy_∑ge_±r
 = 0;

568  
éb_miss_œt
;

569 
	}
}

574 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

576 
	`›t_ªg_hódî
(
odb
,

585 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

586 &
max_ö°s
, 0,

587  
TRUE
, 
NULL
);

591 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅiming starts",

592 &
Á°fwd_cou¡
, 0,

593  
TRUE
, 
NULL
);

594 
	`›t_ªg_°rög_li°
(
odb
, "-ptrace",

596 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

597  
FALSE
, 
NULL
, FALSE);

599 
	`›t_ªg_nŸe
(
odb
,

621 
	`›t_ªg_öt
(
odb
, "-fetch:ifqsize", "instruction fetch queue size (in insts)",

622 &
ruu_ifq_size
, 4,

623  
TRUE
, 
NULL
);

625 
	`›t_ªg_öt
(
odb
, "-fetch:mplat", "extra branch mis-predictionÜatency",

626 &
ruu_bønch_≥«…y
, 3,

627  
TRUE
, 
NULL
);

629 
	`›t_ªg_öt
(
odb
, "-fetch:speed",

631 &
„tch_•ìd
, 1,

632  
TRUE
, 
NULL
);

636 
	`›t_ªg_nŸe
(
odb
,

652 
	`›t_ªg_°rög
(
odb
, "-bpred",

654 &
¥ed_ty≥
, "bimod",

655  
TRUE
, 
NULL
);

657 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

659 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

660  
bimod_c⁄fig
,

661  
TRUE
, 
NULL
, 
FALSE
);

663 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

666 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

667  
twﬁev_c⁄fig
,

668  
TRUE
, 
NULL
, 
FALSE
);

670 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

672 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

673  
comb_c⁄fig
,

674  
TRUE
, 
NULL
, 
FALSE
);

676 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

678 &
øs_size
,Ñas_size,

679  
TRUE
, 
NULL
);

681 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

683 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

684  
btb_c⁄fig
,

685  
TRUE
, 
NULL
, 
FALSE
);

687 
	`›t_ªg_°rög
(
odb
, "-bpred:spec_update",

689 &
b¥ed_•ec_›t
, 
NULL
,

690  
TRUE
, 
NULL
);

694 
	`›t_ªg_öt
(
odb
, "-decode:width",

696 &
ruu_decode_width
, 4,

697  
TRUE
, 
NULL
);

701 
	`›t_ªg_öt
(
odb
, "-issue:width",

703 &
ruu_issue_width
, 4,

704  
TRUE
, 
NULL
);

706 
	`›t_ªg_Êag
(
odb
, "-issue:inorder", "runÖipeline with in-order issue",

707 &
ruu_ö‹dî_issue
, 
FALSE
,

708  
TRUE
, 
NULL
);

710 
	`›t_ªg_Êag
(
odb
, "-issue:wrongpath",

712 &
ruu_ö˛ude_•ec
, 
TRUE
,

713  
TRUE
, 
NULL
);

717 
	`›t_ªg_öt
(
odb
, "-commit:width",

719 &
ruu_commô_width
, 4,

720  
TRUE
, 
NULL
);

724 
	`›t_ªg_öt
(
odb
, "-ruu:size",

726 &
RUU_size
, 16,

727  
TRUE
, 
NULL
);

731 
	`›t_ªg_öt
(
odb
, "-lsq:size",

733 &
LSQ_size
, 8,

734  
TRUE
, 
NULL
);

738 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

740 &
ˇche_dl1_›t
, "dl1:128:32:4:l",

741  
TRUE
, 
NULL
);

743 
	`›t_ªg_nŸe
(
odb
,

758 
	`›t_ªg_öt
(
odb
, "-cache:dl1lat",

760 &
ˇche_dl1_œt
, 1,

761  
TRUE
, 
NULL
);

763 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

765 &
ˇche_dl2_›t
, "ul2:1024:64:4:l",

766  
TRUE
, 
NULL
);

768 
	`›t_ªg_öt
(
odb
, "-cache:dl2lat",

770 &
ˇche_dl2_œt
, 6,

771  
TRUE
, 
NULL
);

773 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

775 &
ˇche_û1_›t
, "il1:512:32:1:l",

776  
TRUE
, 
NULL
);

778 
	`›t_ªg_nŸe
(
odb
,

792 
	`›t_ªg_öt
(
odb
, "-cache:il1lat",

794 &
ˇche_û1_œt
, 1,

795  
TRUE
, 
NULL
);

797 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

799 &
ˇche_û2_›t
, "dl2",

800  
TRUE
, 
NULL
);

802 
	`›t_ªg_öt
(
odb
, "-cache:il2lat",

804 &
ˇche_û2_œt
, 6,

805  
TRUE
, 
NULL
);

807 
	`›t_ªg_Êag
(
odb
, "-cache:flush", "flush caches on system calls",

808 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

810 
	`›t_ªg_Êag
(
odb
, "-cache:icompress",

812 &
com¥ess_iˇche_addrs
, 
FALSE
,

813  
TRUE
, 
NULL
);

816 
	`›t_ªg_öt_li°
(
odb
, "-mem:lat",

818 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

819  
TRUE
, 
NULL
, 
FALSE
);

821 
	`›t_ªg_öt
(
odb
, "-mem:width", "memoryáccess bus width (in bytes)",

822 &
mem_bus_width
, 8,

823  
TRUE
, 
NULL
);

827 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

829 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

831 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

833 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

835 
	`›t_ªg_öt
(
odb
, "-tlb:lat",

837 &
éb_miss_œt
, 30,

838  
TRUE
, 
NULL
);

842 
	`›t_ªg_öt
(
odb
, "-res:ialu",

844 &
ªs_ülu
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

845  
TRUE
, 
NULL
);

847 
	`›t_ªg_öt
(
odb
, "-res:imult",

849 &
ªs_imu…
, 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
,

850  
TRUE
, 
NULL
);

852 
	`›t_ªg_öt
(
odb
, "-res:memport",

854 &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

855  
TRUE
, 
NULL
);

857 
	`›t_ªg_öt
(
odb
, "-res:fpalu",

859 &
ªs_ÂÆu
, 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
,

860  
TRUE
, 
NULL
);

862 
	`›t_ªg_öt
(
odb
, "-res:fpmult",

864 &
ªs_Âmu…
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

865  
TRUE
, 
NULL
);

867 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

869 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

870  
FALSE
, 
NULL
, 
TRUE
);

872 
	`›t_ªg_Êag
(
odb
, "-bugcompat",

874 &
bugcom∑t_mode
, 
FALSE
, 
TRUE
, 
NULL
);

875 
	}
}

879 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

880 
¨gc
, **
¨gv
)

882 
«me
[128], 
c
;

883 
n£ts
, 
bsize
, 
assoc
;

885 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

886 
	`Áèl
("bad fa° f‹w¨d cou¡: %d", 
Á°fwd_cou¡
);

888 i‡(
ruu_ifq_size
 < 1 || (ruu_ifq_size & (ruu_ifq_size - 1)) != 0)

889 
	`Áèl
("inst fetch queue size must beÖositive > 0ándáÖower ofÅwo");

891 i‡(
ruu_bønch_≥«…y
 < 1)

892 
	`Áèl
("mis-predictionÖenalty must beátÜeast 1 cycle");

894 i‡(
„tch_•ìd
 < 1)

895 
	`Áèl
("front-end speed must beÖositiveándÇon-zero");

897 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "perfect"))

900 
¥ed
 = 
NULL
;

901 
¥ed_≥r„˘
 = 
TRUE
;

903 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

906 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

908 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

911 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

913 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

916 i‡(
bimod_√…
 != 1)

917 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

918 i‡(
btb_√…
 != 2)

919 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

922 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

923  
bimod_c⁄fig
[0],

929  
btb_c⁄fig
[0],

930  
btb_c⁄fig
[1],

931  
øs_size
);

933 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

936 i‡(
twﬁev_√…
 != 4)

937 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

938 i‡(
btb_√…
 != 2)

939 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

941 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

943  
twﬁev_c⁄fig
[0],

944  
twﬁev_c⁄fig
[1],

946  
twﬁev_c⁄fig
[2],

947  
twﬁev_c⁄fig
[3],

948  
btb_c⁄fig
[0],

949  
btb_c⁄fig
[1],

950  
øs_size
);

952 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

955 i‡(
twﬁev_√…
 != 4)

956 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

957 i‡(
bimod_√…
 != 1)

958 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

959 i‡(
comb_√…
 != 1)

960 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

961 i‡(
btb_√…
 != 2)

962 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

964 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

965  
bimod_c⁄fig
[0],

966  
twﬁev_c⁄fig
[0],

967  
twﬁev_c⁄fig
[1],

968  
comb_c⁄fig
[0],

969  
twﬁev_c⁄fig
[2],

970  
twﬁev_c⁄fig
[3],

971  
btb_c⁄fig
[0],

972  
btb_c⁄fig
[1],

973  
øs_size
);

976 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

978 i‡(!
b¥ed_•ec_›t
)

979 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

980 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "ID"))

981 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

982 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "WB"))

983 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

985 
	`Áèl
("bad speculative update stage specifier, use {ID|WB}");

987 i‡(
ruu_decode_width
 < 1 || (ruu_decode_width & (ruu_decode_width-1)) != 0)

988 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

990 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width-1)) != 0)

991 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

993 i‡(
ruu_commô_width
 < 1)

994 
	`Áèl
("commit width must beÖositiveÇon-zero");

996 i‡(
RUU_size
 < 2 || (RUU_size & (RUU_size-1)) != 0)

997 
	`Áèl
("RUU size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

999 i‡(
LSQ_size
 < 2 || (LSQ_size & (LSQ_size-1)) != 0)

1000 
	`Áèl
("LSQ size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

1003 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

1005 
ˇche_dl1
 = 
NULL
;

1008 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

1009 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

1010 
ˇche_dl2
 = 
NULL
;

1014 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

1015 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1016 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

1017 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1018  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1019 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
);

1022 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

1023 
ˇche_dl2
 = 
NULL
;

1026 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

1027 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1028 
	`Áèl
("badÜ2 D-cacheÖarms: "

1030 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1031  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1032 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
);

1037 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

1039 
ˇche_û1
 = 
NULL
;

1042 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1043 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1044 
ˇche_û2
 = 
NULL
;

1046 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

1048 i‡(!
ˇche_dl1
)

1049 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

1050 
ˇche_û1
 = 
ˇche_dl1
;

1053 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1054 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1055 
ˇche_û2
 = 
NULL
;

1057 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

1059 i‡(!
ˇche_dl2
)

1060 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

1061 
ˇche_û1
 = 
ˇche_dl2
;

1064 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1065 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1066 
ˇche_û2
 = 
NULL
;

1070 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

1071 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1072 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

1073 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1074  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1075 
û1_ac˚ss_‚
, 
ˇche_û1_œt
);

1078 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

1079 
ˇche_û2
 = 
NULL
;

1080 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

1082 i‡(!
ˇche_dl2
)

1083 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

1084 
ˇche_û2
 = 
ˇche_dl2
;

1088 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

1089 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1090 
	`Áèl
("badÜ2 I-cacheÖarms: "

1092 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1093  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1094 
û2_ac˚ss_‚
, 
ˇche_û2_œt
);

1099 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

1100 
ôlb
 = 
NULL
;

1103 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

1104 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1105 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1106 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1107  (
md_addr_t
), 
assoc
,

1108 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

1113 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

1114 
déb
 = 
NULL
;

1117 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

1118 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1119 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1120 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1121  (
md_addr_t
), 
assoc
,

1122 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

1126 i‡(
ˇche_dl1_œt
 < 1)

1127 
	`Áèl
("l1 data cacheÜatency must be greaterÅhan zero");

1129 i‡(
ˇche_dl2_œt
 < 1)

1130 
	`Áèl
("l2 data cacheÜatency must be greaterÅhan zero");

1132 i‡(
ˇche_û1_œt
 < 1)

1133 
	`Áèl
("l1 instruction cacheÜatency must be greaterÅhan zero");

1135 i‡(
ˇche_û2_œt
 < 1)

1136 
	`Áèl
("l2 instruction cacheÜatency must be greaterÅhan zero");

1138 i‡(
mem_√…
 != 2)

1139 
	`Áèl
("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

1141 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

1142 
	`Áèl
("all memoryáccessÜatencies must be greaterÅhan zero");

1144 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width-1)) != 0)

1145 
	`Áèl
("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

1147 i‡(
éb_miss_œt
 < 1)

1148 
	`Áèl
("TLB missÜatency must be greaterÅhan zero");

1150 i‡(
ªs_ülu
 < 1)

1151 
	`Áèl
("number of integer ALU's must be greaterÅhan zero");

1152 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

1153 
	`Áèl
("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

1154 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

1156 i‡(
ªs_imu…
 < 1)

1157 
	`Áèl
("number of integer multiplier/dividers must be greaterÅhan zero");

1158 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

1159 
	`Áèl
("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

1160 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

1162 i‡(
ªs_memp‹t
 < 1)

1163 
	`Áèl
("number of memory systemÖorts must be greaterÅhan zero");

1164 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

1165 
	`Áèl
("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

1166 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

1168 i‡(
ªs_ÂÆu
 < 1)

1169 
	`Áèl
("number of floatingÖoint ALU's must be greaterÅhan zero");

1170 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

1171 
	`Áèl
("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

1172 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

1174 i‡(
ªs_Âmu…
 < 1)

1175 
	`Áèl
("number of floatingÖoint multiplier/dividers must be > zero");

1176 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

1177 
	`Áèl
("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

1178 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

1179 
	}
}

1183 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

1186 
	}
}

1190 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

1192 
i
;

1193 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

1195 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

1196 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

1198 &
sim_num_ªfs
, 0, 
NULL
);

1199 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_loads",

1201 &
sim_num_lﬂds
, 0, 
NULL
);

1202 
	`°©_ªg_f‹muœ
(
sdb
, "sim_num_stores",

1204 "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

1205 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

1207 &
sim_num_bønches
, 0, 
NULL
);

1208 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

1210 &
sim_ñ≠£d_time
, 0, 
NULL
);

1211 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

1213 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

1215 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_insn",

1217 &
sim_tŸÆ_ö¢
, 0, 
NULL
);

1218 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_refs",

1220 &
sim_tŸÆ_ªfs
, 0, 
NULL
);

1221 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_loads",

1223 &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

1224 
	`°©_ªg_f‹muœ
(
sdb
, "sim_total_stores",

1226 "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

1227 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_branches",

1229 &
sim_tŸÆ_bønches
, 0, 
NULL
);

1232 
	`°©_ªg_cou¡î
(
sdb
, "sim_cycle",

1234 &
sim_cy˛e
, 0, 
NULL
);

1235 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPC",

1237 "sim_num_ö¢ / sim_cy˛e", 
NULL
);

1238 
	`°©_ªg_f‹muœ
(
sdb
, "sim_CPI",

1240 "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

1241 
	`°©_ªg_f‹muœ
(
sdb
, "sim_exec_BW",

1243 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1244 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

1246 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

1249 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_count", "cumulative IFQ occupancy",

1250 &
IFQ_cou¡
, 0, 
NULL
);

1251 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_fcount", "cumulative IFQ full count",

1252 &
IFQ_fcou¡
, 0, 
NULL
);

1253 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_occupancy", "avg IFQ occupancy (insn's)",

1254 "IFQ_cou¡ / sim_cy˛e", 
NULL
);

1255 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_rate", "avg IFQ dispatchÑate (insn/cycle)",

1256 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1257 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_latency", "avg IFQ occupantÜatency (cycle's)",

1258 "ifq_occu∑ncy / ifq_øã", 
NULL
);

1259 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_full", "fraction ofÅime (cycle's) IFQ was full",

1260 "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

1262 
	`°©_ªg_cou¡î
(
sdb
, "RUU_count", "cumulative RUU occupancy",

1263 &
RUU_cou¡
, 0, 
NULL
);

1264 
	`°©_ªg_cou¡î
(
sdb
, "RUU_fcount", "cumulative RUU full count",

1265 &
RUU_fcou¡
, 0, 
NULL
);

1266 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_occupancy", "avg RUU occupancy (insn's)",

1267 "RUU_cou¡ / sim_cy˛e", 
NULL
);

1268 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_rate", "avg RUU dispatchÑate (insn/cycle)",

1269 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1270 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_latency", "avg RUU occupantÜatency (cycle's)",

1271 "ruu_occu∑ncy /Ñuu_øã", 
NULL
);

1272 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_full", "fraction ofÅime (cycle's) RUU was full",

1273 "RUU_fcou¡ / sim_cy˛e", 
NULL
);

1275 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_count", "cumulative LSQ occupancy",

1276 &
LSQ_cou¡
, 0, 
NULL
);

1277 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_fcount", "cumulative LSQ full count",

1278 &
LSQ_fcou¡
, 0, 
NULL
);

1279 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_occupancy", "avg LSQ occupancy (insn's)",

1280 "LSQ_cou¡ / sim_cy˛e", 
NULL
);

1281 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_rate", "avg LSQ dispatchÑate (insn/cycle)",

1282 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1283 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_latency", "avg LSQ occupantÜatency (cycle's)",

1284 "lsq_occu∑ncy /Üsq_øã", 
NULL
);

1285 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_full", "fraction ofÅime (cycle's) LSQ was full",

1286 "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

1288 
	`°©_ªg_cou¡î
(
sdb
, "sim_slip",

1290 &
sim_¶ù
, 0, 
NULL
);

1292 
	`°©_ªg_f‹muœ
(
sdb
, "avg_sim_slip",

1294 "sim_¶ù / sim_num_ö¢", 
NULL
);

1297 i‡(
¥ed
)

1298 
	`b¥ed_ªg_°©s
(
¥ed
, 
sdb
);

1301 i‡(
ˇche_û1


1302 && (
ˇche_û1
 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

1303 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

1304 i‡(
ˇche_û2


1305 && (
ˇche_û2
 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

1306 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

1307 i‡(
ˇche_dl1
)

1308 
	`ˇche_ªg_°©s
(
ˇche_dl1
, 
sdb
);

1309 i‡(
ˇche_dl2
)

1310 
	`ˇche_ªg_°©s
(
ˇche_dl2
, 
sdb
);

1311 i‡(
ôlb
)

1312 
	`ˇche_ªg_°©s
(
ôlb
, 
sdb
);

1313 i‡(
déb
)

1314 
	`ˇche_ªg_°©s
(
déb
, 
sdb
);

1317 
	`°©_ªg_cou¡î
(
sdb
, "sim_invalid_addrs",

1319 &
sim_övÆid_addrs
, 0, 
NULL
);

1321 
i
=0; i<
pc°©_√…
; i++)

1323 
buf
[512], 
buf1
[512];

1324 
°©_°©_t
 *
°©
;

1329 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

1330 i‡(!
°©
)

1331 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

1334 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

1335 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

1336 
°©
->
«me
);

1339 
pc°©_°©s
[
i
] = 
°©
;

1340 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

1343 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

1344 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

1345 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

1347  (
PF_COUNT
|
PF_PDF
),

1349  
NULL
);

1351 
	`ld_ªg_°©s
(
sdb
);

1352 
	`mem_ªg_°©s
(
mem
, 
sdb
);

1353 
	}
}

1356 
ruu_öô
();

1357 
lsq_öô
();

1358 
r¶ök_öô
(
∆öks
);

1359 
evítq_öô
();

1360 
ªadyq_öô
();

1361 
cv_öô
();

1362 
åa˚r_öô
();

1363 
„tch_öô
();

1367 
	$sim_öô
()

1369 
sim_num_ªfs
 = 0;

1372 
	`ªgs_öô
(&
ªgs
);

1375 
mem
 = 
	`mem_¸óã
("mem");

1376 
	`mem_öô
(
mem
);

1377 
	}
}

1381 
simoo_ªg_obj
(
ªgs_t
 *
ªgs
,

1382 
is_wrôe
,

1383 
md_ªg_ty≥
 
π
,

1384 
ªg
,

1385 
evÆ_vÆue_t
 *
vÆ
);

1389 
simoo_mem_obj
(
mem_t
 *
mem
,

1390 
is_wrôe
,

1391 
md_addr_t
 
addr
,

1392 *
p
,

1393 
nbyãs
);

1397 
simoo_m°©e_obj
(
FILE
 *
°ªam
,

1398 *
cmd
,

1399 
ªgs_t
 *
ªgs
,

1400 
mem_t
 *
mem
);

1403 
	#MAX_RS_LINKS
 4096

	)

1407 
	$sim_lﬂd_¥og
(*
‚ame
,

1408 
¨gc
, **
¨gv
,

1409 **
ívp
)

1412 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

1415 i‡(
±ø˚_√…
 == 2)

1418 
	`±ø˚_›í
–
±ø˚_›ts
[0],Ötrace_opts[1]);

1420 i‡(
±ø˚_√…
 == 0)

1425 
	`Áèl
("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

1428 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
("fu-poﬁ", 
fu_c⁄fig
, 
	`N_ELT
(fu_config));

1429 
	`r¶ök_öô
(
MAX_RS_LINKS
);

1430 
	`åa˚r_öô
();

1431 
	`„tch_öô
();

1432 
	`cv_öô
();

1433 
	`evítq_öô
();

1434 
	`ªadyq_öô
();

1435 
	`ruu_öô
();

1436 
	`lsq_öô
();

1439 
	`dlôe_öô
(
simoo_ªg_obj
, 
simoo_mem_obj
, 
simoo_m°©e_obj
);

1440 
	}
}

1444 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

1447 
	}
}

1451 
	$sim_unöô
()

1453 i‡(
±ø˚_√…
 > 0)

1454 
	`±ø˚_˛o£
();

1455 
	}
}

1463 
	tINST_TAG_TYPE
;

1468 
	tINST_SEQ_TYPE
;

1472 
	#MAX_IDEPS
 3

	)

1475 
	#MAX_ODEPS
 2

	)

1490 
	sRUU_°©i⁄
 {

1492 
md_ö°_t
 
	mIR
;

1493 
md_›code
 
	m›
;

1494 
md_addr_t
 
	mPC
, 
	m√xt_PC
, 
	m¥ed_PC
;

1495 
	mö_LSQ
;

1496 
	mó_comp
;

1497 
	mªcovî_ö°
;

1498 
	m°ack_ªcovî_idx
;

1499 
b¥ed_upd©e_t
 
	mdú_upd©e
;

1500 
	m•ec_mode
;

1501 
md_addr_t
 
	maddr
;

1502 
INST_TAG_TYPE
 
	mèg
;

1504 
INST_SEQ_TYPE
 
	m£q
;

1506 
	m±ø˚_£q
;

1507 
	m¶ù
;

1509 
	mqueued
;

1510 
	missued
;

1511 
	mcom∂ëed
;

1515 
	m⁄ames
[
MAX_ODEPS
];

1516 
RS_lök
 *
	modï_li°
[
MAX_ODEPS
];

1524 
	midï_ªady
[
MAX_IDEPS
];

1528 
	#OPERANDS_READY
(
RS
) \

1529 ((
RS
)->
idï_ªady
[0] && (RS)->idï_ªady[1] && (RS)->idï_ªady[2])

	)

1533 
RUU_°©i⁄
 *
	gRUU
;

1534 
	gRUU_hód
, 
	gRUU_èû
;

1535 
	gRUU_num
;

1539 
	$ruu_öô
()

1541 
RUU
 = 
	`ˇŒoc
(
RUU_size
, (
RUU_°©i⁄
));

1542 i‡(!
RUU
)

1543 
	`Áèl
("out of virtual memory");

1545 
RUU_num
 = 0;

1546 
RUU_hód
 = 
RUU_èû
 = 0;

1547 
RUU_cou¡
 = 0;

1548 
RUU_fcou¡
 = 0;

1549 
	}
}

1553 
	$ruu_dum≥¡
(
RUU_°©i⁄
 *
rs
,

1554 
ödex
,

1555 
FILE
 *
°ªam
,

1556 
hódî
)

1558 i‡(!
°ªam
)

1559 
°ªam
 = 
°dîr
;

1561 i‡(
hódî
)

1562 
	`Ârötf
(
°ªam
, "idx: %2d: opcode: %s, inst: `",

1563 
ödex
, 
	`MD_OP_NAME
(
rs
->
›
));

1565 
	`Ârötf
(
°ªam
, " opcode: %s, inst: `",

1566 
	`MD_OP_NAME
(
rs
->
›
));

1567 
	`md_¥öt_ö¢
(
rs
->
IR
,Ñs->
PC
, 
°ªam
);

1568 
	`Ârötf
(
°ªam
, "'\n");

1569 
	`myÂrötf
(
°ªam
, " PC: 0x%08p, NPC: 0x%08p (pred_PC: 0x%08p)\n",

1570 
rs
->
PC
,Ñs->
√xt_PC
,Ñs->
¥ed_PC
);

1571 
	`Ârötf
(
°ªam
, " in_LSQ: %s,Éa_comp: %s,Ñecover_inst: %s\n",

1572 
rs
->
ö_LSQ
 ? "t" : "f",

1573 
rs
->
ó_comp
 ? "t" : "f",

1574 
rs
->
ªcovî_ö°
 ? "t" : "f");

1575 
	`myÂrötf
(
°ªam
, " spec_mode: %s,áddr: 0x%08p,Åag: 0x%08x\n",

1576 
rs
->
•ec_mode
 ? "t" : "f",Ñs->
addr
,Ñs->
èg
);

1577 
	`Ârötf
(
°ªam
, " seq: 0x%08x,Ötrace_seq: 0x%08x\n",

1578 
rs
->
£q
,Ñs->
±ø˚_£q
);

1579 
	`Ârötf
(
°ªam
, " queued: %s, issued: %s, completed: %s\n",

1580 
rs
->
queued
 ? "t" : "f",

1581 
rs
->
issued
 ? "t" : "f",

1582 
rs
->
com∂ëed
 ? "t" : "f");

1583 
	`Ârötf
(
°ªam
, " operandsÑeady: %s\n",

1584 
	`OPERANDS_READY
(
rs
) ? "t" : "f");

1585 
	}
}

1589 
	$ruu_dump
(
FILE
 *
°ªam
)

1591 
num
, 
hód
;

1592 
RUU_°©i⁄
 *
rs
;

1594 i‡(!
°ªam
)

1595 
°ªam
 = 
°dîr
;

1597 
	`Ârötf
(
°ªam
, "** RUU state **\n");

1598 
	`Ârötf
(
°ªam
, "RUU_hód: %d, RUU_èû: %d\n", 
RUU_hód
, 
RUU_èû
);

1599 
	`Ârötf
(
°ªam
, "RUU_num: %d\n", 
RUU_num
);

1601 
num
 = 
RUU_num
;

1602 
hód
 = 
RUU_hód
;

1603 
num
)

1605 
rs
 = &
RUU
[
hód
];

1606 
	`ruu_dum≥¡
(
rs
,Ñ†- 
RUU
, 
°ªam
, 
TRUE
);

1607 
hód
 = (hód + 1Ë% 
RUU_size
;

1608 
num
--;

1610 
	}
}

1640 
RUU_°©i⁄
 *
	gLSQ
;

1641 
	gLSQ_hód
, 
	gLSQ_èû
;

1642 
	gLSQ_num
;

1649 
	#STORE_OP_INDEX
 0

	)

1650 
	#STORE_ADDR_INDEX
 1

	)

1652 
	#STORE_OP_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_OP_INDEX
])

	)

1653 
	#STORE_ADDR_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

1657 
	$lsq_öô
()

1659 
LSQ
 = 
	`ˇŒoc
(
LSQ_size
, (
RUU_°©i⁄
));

1660 i‡(!
LSQ
)

1661 
	`Áèl
("out of virtual memory");

1663 
LSQ_num
 = 0;

1664 
LSQ_hód
 = 
LSQ_èû
 = 0;

1665 
LSQ_cou¡
 = 0;

1666 
LSQ_fcou¡
 = 0;

1667 
	}
}

1671 
	$lsq_dump
(
FILE
 *
°ªam
)

1673 
num
, 
hód
;

1674 
RUU_°©i⁄
 *
rs
;

1676 i‡(!
°ªam
)

1677 
°ªam
 = 
°dîr
;

1679 
	`Ârötf
(
°ªam
, "** LSQ state **\n");

1680 
	`Ârötf
(
°ªam
, "LSQ_hód: %d, LSQ_èû: %d\n", 
LSQ_hód
, 
LSQ_èû
);

1681 
	`Ârötf
(
°ªam
, "LSQ_num: %d\n", 
LSQ_num
);

1683 
num
 = 
LSQ_num
;

1684 
hód
 = 
LSQ_hód
;

1685 
num
)

1687 
rs
 = &
LSQ
[
hód
];

1688 
	`ruu_dum≥¡
(
rs
,Ñ†- 
LSQ
, 
°ªam
, 
TRUE
);

1689 
hód
 = (hód + 1Ë% 
LSQ_size
;

1690 
num
--;

1692 
	}
}

1707 
	sRS_lök
 {

1708 
RS_lök
 *
	m√xt
;

1709 
RUU_°©i⁄
 *
	mrs
;

1710 
INST_TAG_TYPE
 
	mèg
;

1712 
tick_t
 
	mwhí
;

1713 
INST_SEQ_TYPE
 
	m£q
;

1714 
	m›num
;

1715 } 
	mx
;

1719 
RS_lök
 *
	gr¶ök_‰ì_li°
;

1722 
	#RSLINK_NULL_DATA
 { 
NULL
, NULL, 0 }

	)

1723 
RS_lök
 
	gRSLINK_NULL
 = 
RSLINK_NULL_DATA
;

1726 
	#RSLINK_INIT
(
RSL
, 
RS
) \

1727 ((
RSL
).
√xt
 = 
NULL
, (RSL).
rs
 = (
RS
), (RSL).
èg
 = (RS)->èg)

	)

1730 
	#RSLINK_IS_NULL
(
LINK
Ë((LINK)->
rs
 =
NULL
)

	)

1733 
	#RSLINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
rs
->èg)

	)

1736 
	#RSLINK_RS
(
LINK
Ë((LINK)->
rs
)

	)

1739 
	#RSLINK_NEW
(
DST
, 
RS
) \

1740 { 
RS_lök
 *
n_lök
; \

1741 i‡(!
r¶ök_‰ì_li°
) \

1742 
	`∑nic
("out ofÑsÜinks"); \

1743 
n_lök
 = 
r¶ök_‰ì_li°
; \

1744 
r¶ök_‰ì_li°
 =Ñ¶ök_‰ì_li°->
√xt
; \

1745 
n_lök
->
√xt
 = 
NULL
; \

1746 
n_lök
->
rs
 = (
RS
);Ç_lök->
èg
 =Ç_link->rs->tag; \

1747 (
DST
Ë
n_lök
; \

1748 }

	)

1751 
	#RSLINK_FREE
(
LINK
) \

1752 { 
RS_lök
 *
f_lök
 = (
LINK
); \

1753 
f_lök
->
rs
 = 
NULL
; f_lök->
èg
 = 0; \

1754 
f_lök
->
√xt
 = 
r¶ök_‰ì_li°
; \

1755 
r¶ök_‰ì_li°
 = 
f_lök
; \

1756 }

	)

1760 
	#RSLINK_FREE_LIST
(
LINK
) \

1761 { 
RS_lök
 *
Ê_lök
, *
Ê_lök_√xt
; \

1762 
Ê_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

1764 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

1765 
	`RSLINK_FREE
(
Ê_lök
); \

1767 }

	)

1771 
	$r¶ök_öô
(
∆öks
)

1773 
i
;

1774 
RS_lök
 *
lök
;

1776 
r¶ök_‰ì_li°
 = 
NULL
;

1777 
i
=0; i<
∆öks
; i++)

1779 
lök
 = 
	`ˇŒoc
(1, (
RS_lök
));

1780 i‡(!
lök
)

1781 
	`Áèl
("out of virtual memory");

1782 
lök
->
√xt
 = 
r¶ök_‰ì_li°
;

1783 
r¶ök_‰ì_li°
 = 
lök
;

1785 
	}
}

1792 
	$ruu_ªÀa£_fu
()

1794 
i
;

1797 
i
=0; i<
fu_poﬁ
->
num_ªsour˚s
; i++)

1800 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

1801 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

1803 
	}
}

1815 
RS_lök
 *
	gevít_queue
;

1819 
	$evítq_öô
()

1821 
evít_queue
 = 
NULL
;

1822 
	}
}

1826 
	$evítq_dump
(
FILE
 *
°ªam
)

1828 
RS_lök
 *
ev
;

1830 i‡(!
°ªam
)

1831 
°ªam
 = 
°dîr
;

1833 
	`Ârötf
(
°ªam
, "**Évent queue state **\n");

1835 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
)

1838 i‡(
	`RSLINK_VALID
(
ev
))

1840 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
ev
);

1842 
	`Ârötf
(
°ªam
, "idx: %2d: @ %.0f\n",

1843 ()(
rs
 - (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
)), ()
ev
->
x
.
whí
);

1844 
	`ruu_dum≥¡
(
rs
,Ñ†- (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
),

1845 
°ªam
, 
FALSE
);

1848 
	}
}

1854 
	$evítq_queue_evít
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
)

1856 
RS_lök
 *
¥ev
, *
ev
, *
√w_ev
;

1858 i‡(
rs
->
com∂ëed
)

1859 
	`∑nic
("event completed");

1861 i‡(
whí
 <
sim_cy˛e
)

1862 
	`∑nic
("event occurred inÅheÖast");

1865 
	`RSLINK_NEW
(
√w_ev
, 
rs
);

1866 
√w_ev
->
x
.
whí
 = when;

1869 
¥ev
=
NULL
, 
ev
=
evít_queue
;

1870 
ev
 &&Év->
x
.
whí
 < when;

1871 
¥ev
=
ev
,ÉvÛv->
√xt
);

1873 i‡(
¥ev
)

1876 
√w_ev
->
√xt
 = 
¥ev
->next;

1877 
¥ev
->
√xt
 = 
√w_ev
;

1882 
√w_ev
->
√xt
 = 
evít_queue
;

1883 
evít_queue
 = 
√w_ev
;

1885 
	}
}

1889 
RUU_°©i⁄
 *

1890 
	$evítq_√xt_evít
()

1892 
RS_lök
 *
ev
;

1894 i‡(
evít_queue
 &&Évít_queue->
x
.
whí
 <
sim_cy˛e
)

1897 
ev
 = 
evít_queue
;

1898 
evít_queue
 =Évít_queue->
√xt
;

1901 i‡(
	`RSLINK_VALID
(
ev
))

1903 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
ev
);

1906 
	`RSLINK_FREE
(
ev
);

1909  
rs
;

1914 
	`RSLINK_FREE
(
ev
);

1917  
	`evítq_√xt_evít
();

1923  
NULL
;

1925 
	}
}

1941 
RS_lök
 *
	gªady_queue
;

1945 
	$ªadyq_öô
()

1947 
ªady_queue
 = 
NULL
;

1948 
	}
}

1952 
	$ªadyq_dump
(
FILE
 *
°ªam
)

1954 
RS_lök
 *
lök
;

1956 i‡(!
°ªam
)

1957 
°ªam
 = 
°dîr
;

1959 
	`Ârötf
(
°ªam
, "**Ñeady queue state **\n");

1961 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
)

1964 i‡(
	`RSLINK_VALID
(
lök
))

1966 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
lök
);

1968 
	`ruu_dum≥¡
(
rs
,Ñ†- (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
),

1969 
°ªam
, 
TRUE
);

1972 
	}
}

1988 
	$ªadyq_íqueue
(
RUU_°©i⁄
 *
rs
)

1990 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

1993 i‡(
rs
->
queued
)

1994 
	`∑nic
("node isálready queued");

1995 
rs
->
queued
 = 
TRUE
;

1998 
	`RSLINK_NEW
(
√w_node
, 
rs
);

1999 
√w_node
->
x
.
£q
 = 
rs
->seq;

2002 i‡(
rs
->
ö_LSQ
 || 
	`MD_OP_FLAGS
‘s->
›
Ë& (
F_LONGLAT
|
F_CTRL
))

2005 
¥ev
 = 
NULL
;

2006 
node
 = 
ªady_queue
;

2011 
¥ev
=
NULL
, 
node
=
ªady_queue
;

2012 
node
 &&Çode->
x
.
£q
 < 
rs
->seq;

2013 
¥ev
=
node
,ÇodeÚode->
√xt
);

2016 i‡(
¥ev
)

2019 
√w_node
->
√xt
 = 
¥ev
->next;

2020 
¥ev
->
√xt
 = 
√w_node
;

2025 
√w_node
->
√xt
 = 
ªady_queue
;

2026 
ªady_queue
 = 
√w_node
;

2028 
	}
}

2038 
	sCV_lök
 {

2039 
RUU_°©i⁄
 *
	mrs
;

2040 
	modï_num
;

2044 
CV_lök
 
	gCVLINK_NULL
 = { 
NULL
, 0 };

2047 
	#CVLINK_INIT
(
CV
, 
RS
,
ONUM
Ë((CV).
rs
 = (RS), (CV).
odï_num
 = (ONUM))

	)

2050 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

2055 
BITMAP_TYPE
(
MD_TOTAL_REGS
, 
u£_•ec_cv
);

2056 
CV_lök
 
	g¸óã_ve˘‹
[
MD_TOTAL_REGS
];

2057 
CV_lök
 
	g•ec_¸óã_ve˘‹
[
MD_TOTAL_REGS
];

2061 
tick_t
 
	g¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

2062 
tick_t
 
	g•ec_¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

2065 
	#CREATE_VECTOR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

2066 ? 
•ec_¸óã_ve˘‹
[
N
] \

2067 : 
¸óã_ve˘‹
[
N
])

	)

2070 
	#CREATE_VECTOR_RT
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

2071 ? 
•ec_¸óã_ve˘‹_π
[
N
] \

2072 : 
¸óã_ve˘‹_π
[
N
])

	)

2075 
	#SET_CREATE_VECTOR
(
N
, 
L
Ë(
•ec_mode
 \

2076 ? (
	`BITMAP_SET
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (
N
)),\

2077 
•ec_¸óã_ve˘‹
[
N
] = (
L
)) \

2078 : (
¸óã_ve˘‹
[
N
] = (
L
)))

	)

2082 
	$cv_öô
()

2084 
i
;

2088 
i
=0; i < 
MD_TOTAL_REGS
; i++)

2090 
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

2091 
¸óã_ve˘‹_π
[
i
] = 0;

2092 
•ec_¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

2093 
•ec_¸óã_ve˘‹_π
[
i
] = 0;

2097 
	`BITMAP_CLEAR_MAP
(
u£_•ec_cv
, 
CV_BMAP_SZ
);

2098 
	}
}

2102 
	$cv_dump
(
FILE
 *
°ªam
)

2104 
i
;

2105 
CV_lök
 
ít
;

2107 i‡(!
°ªam
)

2108 
°ªam
 = 
°dîr
;

2110 
	`Ârötf
(
°ªam
, "** create vector state **\n");

2112 
i
=0; i < 
MD_TOTAL_REGS
; i++)

2114 
ít
 = 
	`CREATE_VECTOR
(
i
);

2115 i‡(!
ít
.
rs
)

2116 
	`Ârötf
(
°ªam
, "[cv%02d]: fromárchôe˘edÑeg fûe\n", 
i
);

2118 
	`Ârötf
(
°ªam
, "[cv%02d]: from %s, idx: %d\n",

2119 
i
, (
ít
.
rs
->
ö_LSQ
 ? "LSQ" : "RUU"),

2120 ()(
ít
.
rs
 - (ít.rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
)));

2122 
	}
}

2133 
	$ruu_commô
()

2135 
i
, 
œt
, 
evíts
, 
commôãd
 = 0;

2136 
cou¡î_t
 
sim_ªt_ö¢
 = 0;

2139 
RUU_num
 > 0 && 
commôãd
 < 
ruu_commô_width
)

2141 
RUU_°©i⁄
 *
rs
 = &(
RUU
[
RUU_hód
]);

2143 i‡(!
rs
->
com∂ëed
)

2150 
evíts
 = 0;

2153 i‡(
RUU
[
RUU_hód
].
ó_comp
)

2156 i‡(
LSQ_num
 <0 || !
LSQ
[
LSQ_hód
].
ö_LSQ
)

2157 
	`∑nic
("RUU out of sync with LSQ");

2160 i‡(!
LSQ
[
LSQ_hód
].
com∂ëed
)

2166 i‡((
	`MD_OP_FLAGS
(
LSQ
[
LSQ_hód
].
›
Ë& (
F_MEM
|
F_STORE
))

2167 =(
F_MEM
|
F_STORE
))

2169 
ªs_ãm∂©e
 *
fu
;

2174 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
LSQ
[
LSQ_hód
].
›
));

2175 i‡(
fu
)

2178 i‡(
fu
->
ma°î
->
busy
)

2179 
	`∑nic
("functional unitálready in use");

2182 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

2185 i‡(
ˇche_dl1
)

2188 
œt
 =

2189 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Wrôe
, (
LSQ
[
LSQ_hód
].
addr
&~3),

2190 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2191 i‡(
œt
 > 
ˇche_dl1_œt
)

2192 
evíts
 |
PEV_CACHEMISS
;

2196 i‡(
déb
)

2199 
œt
 =

2200 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
LSQ
[
LSQ_hód
].
addr
 & ~3),

2201 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2202 i‡(
œt
 > 1)

2203 
evíts
 |
PEV_TLBMISS
;

2214 
LSQ
[
LSQ_hód
].
èg
++;

2215 
sim_¶ù
 +(
sim_cy˛e
 - 
LSQ
[
LSQ_hód
].
¶ù
);

2218 
	`±ø˚_√w°age
(
LSQ
[
LSQ_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

2219 
	`±ø˚_ídö°
(
LSQ
[
LSQ_hód
].
±ø˚_£q
);

2222 
LSQ_hód
 = (LSQ_hód + 1Ë% 
LSQ_size
;

2223 
LSQ_num
--;

2226 i‡(
¥ed


2227 && 
b¥ed_•ec_upd©e
 =
•ec_CT


2228 && (
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_CTRL
))

2230 
	`b¥ed_upd©e
(
¥ed
,

2231  
rs
->
PC
,

2232  
rs
->
√xt_PC
,

2233  
rs
->
√xt_PC
 !‘s->
PC
 +

2234 (
md_ö°_t
)),

2235  
rs
->
¥ed_PC
 !‘s->
PC
 +

2236 (
md_ö°_t
)),

2237  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

2238  
rs
->
›
,

2239  &
rs
->
dú_upd©e
);

2243 
RUU
[
RUU_hód
].
èg
++;

2244 
sim_¶ù
 +(
sim_cy˛e
 - 
RUU
[
RUU_hód
].
¶ù
);

2246 i‡(
vîbo£
)

2248 
sim_ªt_ö¢
++;

2249 
	`myÂrötf
(
°dîr
, "%10¿@ 0x%08p: ", 
sim_ªt_ö¢
, 
RUU
[
RUU_hód
].
PC
);

2250 
	`md_¥öt_ö¢
(
RUU
[
RUU_hód
].
IR
, RUU[RUU_hód].
PC
, 
°dîr
);

2251 i‡(
	`MD_OP_FLAGS
(
RUU
[
RUU_hód
].
›
Ë& 
F_MEM
)

2252 
	`myÂrötf
(
°dîr
, " mem: 0x%08p", 
RUU
[
RUU_hód
].
addr
);

2253 
	`Ârötf
(
°dîr
, "\n");

2258 
	`±ø˚_√w°age
(
RUU
[
RUU_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

2259 
	`±ø˚_ídö°
(
RUU
[
RUU_hód
].
±ø˚_£q
);

2262 
RUU_hód
 = (RUU_hód + 1Ë% 
RUU_size
;

2263 
RUU_num
--;

2266 
commôãd
++;

2268 
i
=0; i<
MAX_ODEPS
; i++)

2270 i‡(
rs
->
odï_li°
[
i
])

2271 
	`∑nic
 ("retired instruction has odeps\n");

2274 
	}
}

2284 
	$ruu_ªcovî
(
bønch_ödex
)

2286 
i
, 
RUU_ödex
 = 
RUU_èû
, 
LSQ_ödex
 = 
LSQ_èû
;

2287 
RUU_¥ev_èû
 = 
RUU_èû
, 
LSQ_¥ev_èû
 = 
LSQ_èû
;

2294 
RUU_ödex
 = (RUU_ödex + (
RUU_size
-1)) % RUU_size;

2295 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

2298 
RUU_ödex
 !
bønch_ödex
)

2301 i‡(!
RUU_num
)

2302 
	`∑nic
("empty RUU");

2305 i‡(
RUU_ödex
 =
RUU_hód
)

2306 
	`∑nic
("RUU headándÅail broken");

2309 i‡(
RUU
[
RUU_ödex
].
ó_comp
)

2312 i‡(!
LSQ_num
)

2313 
	`∑nic
("RUUánd LSQ out of sync");

2316 
i
=0; i<
MAX_ODEPS
; i++)

2318 
	`RSLINK_FREE_LIST
(
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

2320 
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

2324 
LSQ
[
LSQ_ödex
].
èg
++;

2327 
	`±ø˚_ídö°
(
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

2330 
LSQ_¥ev_èû
 = 
LSQ_ödex
;

2331 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

2332 
LSQ_num
--;

2336 
i
=0; i<
MAX_ODEPS
; i++)

2338 
	`RSLINK_FREE_LIST
(
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

2340 
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

2344 
RUU
[
RUU_ödex
].
èg
++;

2347 
	`±ø˚_ídö°
(
RUU
[
RUU_ödex
].
±ø˚_£q
);

2350 
RUU_¥ev_èû
 = 
RUU_ödex
;

2351 
RUU_ödex
 = (RUU_ödex + (
RUU_size
-1)) % RUU_size;

2352 
RUU_num
--;

2356 
RUU_èû
 = 
RUU_¥ev_èû
;

2357 
LSQ_èû
 = 
LSQ_¥ev_èû
;

2362 
	`BITMAP_CLEAR_MAP
(
u£_•ec_cv
, 
CV_BMAP_SZ
);

2365 
	}
}

2373 
åa˚r_ªcovî
();

2381 
	$ruu_wrôeback
()

2383 
i
;

2384 
RUU_°©i⁄
 *
rs
;

2387 (
rs
 = 
	`evítq_√xt_evít
()))

2390 i‡(!
	`OPERANDS_READY
(
rs
Ë||Ñs->
queued
 || !rs->
issued
 ||Ñs->
com∂ëed
)

2391 
	`∑nic
("inst completedánd !ready, !issued, or completed");

2394 
rs
->
com∂ëed
 = 
TRUE
;

2397 i‡(
rs
->
ªcovî_ö°
)

2399 i‡(
rs
->
ö_LSQ
)

2400 
	`∑nic
("mis-predictedÜoad or store?!?!?");

2403 
	`ruu_ªcovî
(
rs
 - 
RUU
);

2404 
	`åa˚r_ªcovî
();

2405 
	`b¥ed_ªcovî
(
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
);

2408 
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

2414 i‡(
¥ed


2415 && 
b¥ed_•ec_upd©e
 =
•ec_WB


2416 && !
rs
->
ö_LSQ


2417 && (
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_CTRL
))

2419 
	`b¥ed_upd©e
(
¥ed
,

2420  
rs
->
PC
,

2421  
rs
->
√xt_PC
,

2422  
rs
->
√xt_PC
 !‘s->
PC
 +

2423 (
md_ö°_t
)),

2424  
rs
->
¥ed_PC
 !‘s->
PC
 +

2425 (
md_ö°_t
)),

2426  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

2427  
rs
->
›
,

2428  &
rs
->
dú_upd©e
);

2432 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_WRITEBACK
,

2433 
rs
->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

2438 
i
=0; i<
MAX_ODEPS
; i++)

2440 i‡(
rs
->
⁄ames
[
i
] !
NA
)

2442 
CV_lök
 
lök
;

2443 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

2445 i‡(
rs
->
•ec_mode
)

2449 
lök
 = 
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

2450 i‡–
lök
.
rs


2451 && (
lök
.
rs
 =r†&&Üök.
odï_num
 =
i
))

2455 
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

2456 
•ec_¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

2465 
lök
 = 
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

2466 i‡–
lök
.
rs


2467 && (
lök
.
rs
 =r†&&Üök.
odï_num
 =
i
))

2471 
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

2472 
¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

2478 
ﬁök
=
rs
->
odï_li°
[
i
]; olök; olök=
ﬁök_√xt
)

2480 i‡(
	`RSLINK_VALID
(
ﬁök
))

2482 i‡(
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
])

2483 
	`∑nic
("output dependenceálready satisfied");

2486 
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

2489 i‡(
	`OPERANDS_READY
(
ﬁök
->
rs
))

2494 i‡(!
ﬁök
->
rs
->
ö_LSQ


2495 || ((
	`MD_OP_FLAGS
(
ﬁök
->
rs
->
›
)&(
F_MEM
|
F_STORE
))

2496 =(
F_MEM
|
F_STORE
)))

2497 
	`ªadyq_íqueue
(
ﬁök
->
rs
);

2503 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

2506 
	`RSLINK_FREE
(
ﬁök
);

2509 
rs
->
odï_li°
[
i
] = 
NULL
;

2517 
	}
}

2528 
	#MAX_STD_UNKNOWNS
 64

	)

2530 
	$lsq_ª‰esh
()

2532 
i
, 
j
, 
ödex
, 
n_°d_unknowns
;

2533 
md_addr_t
 
°d_unknowns
[
MAX_STD_UNKNOWNS
];

2538 
i
=0, 
ödex
=
LSQ_hód
, 
n_°d_unknowns
=0;

2539 
i
 < 
LSQ_num
;

2540 
i
++, 
ödex
=(ödex + 1Ë% 
LSQ_size
)

2545 (
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))

2547 i‡(!
	`STORE_ADDR_READY
(&
LSQ
[
ödex
]))

2553 i‡(!
	`OPERANDS_READY
(&
LSQ
[
ödex
]))

2559 i‡(
n_°d_unknowns
 =
MAX_STD_UNKNOWNS
)

2560 
	`Áèl
("STD unknownárray overflow, increase MAX_STD_UNKNOWNS");

2561 
°d_unknowns
[
n_°d_unknowns
++] = 
LSQ
[
ödex
].
addr
;

2566 
j
=0; j<
n_°d_unknowns
; j++)

2568 i‡(
°d_unknowns
[
j
] = 
LSQ
[
ödex
].
addr
)

2569 
°d_unknowns
[
j
] = 0;

2575 ((
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_LOAD
)) == (F_MEM|F_LOAD))

2576 && !
LSQ
[
ödex
].
queued


2577 && !
LSQ
[
ödex
].
issued


2578 && !
LSQ
[
ödex
].
com∂ëed


2579 && 
	`OPERANDS_READY
(&
LSQ
[
ödex
]))

2583 
j
=0; j<
n_°d_unknowns
; j++)

2586 i‡(
°d_unknowns
[
j
] =
LSQ
[
ödex
].
addr
)

2589 i‡(
j
 =
n_°d_unknowns
)

2592 
	`ªadyq_íqueue
(&
LSQ
[
ödex
]);

2596 
	}
}

2611 
	$ruu_issue
()

2613 
i
, 
lﬂd_œt
, 
éb_œt
, 
n_issued
;

2614 
RS_lök
 *
node
, *
√xt_node
;

2615 
ªs_ãm∂©e
 *
fu
;

2624 
node
 = 
ªady_queue
;

2625 
ªady_queue
 = 
NULL
;

2630 
n_issued
=0;

2631 
node
 && 
n_issued
 < 
ruu_issue_width
;

2632 
node
 = 
√xt_node
)

2634 
√xt_node
 = 
node
->
√xt
;

2637 i‡(
	`RSLINK_VALID
(
node
))

2639 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
node
);

2642 i‡(!
	`OPERANDS_READY
(
rs
Ë|| !rs->
queued


2643 || 
rs
->
issued
 ||Ñs->
com∂ëed
)

2644 
	`∑nic
("issued inst !ready, issued, or completed");

2647 
rs
->
queued
 = 
FALSE
;

2649 i‡(
rs
->
ö_LSQ


2650 && ((
	`MD_OP_FLAGS
(
rs
->
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE)))

2656 
rs
->
issued
 = 
TRUE
;

2657 
rs
->
com∂ëed
 = 
TRUE
;

2658 i‡(
rs
->
⁄ames
[0] ||Ñs->onames[1])

2659 
	`∑nic
("store createsÑesult");

2661 i‡(
rs
->
ªcovî_ö°
)

2662 
	`∑nic
("mis-predicted store");

2665 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_WRITEBACK
, 0);

2668 
n_issued
++;

2673 i‡(
	`MD_OP_FUCLASS
(
rs
->
›
Ë!
NA
)

2675 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
rs
->
›
));

2676 i‡(
fu
)

2679 
rs
->
issued
 = 
TRUE
;

2681 i‡(
fu
->
ma°î
->
busy
)

2682 
	`∑nic
("functional unitálready in use");

2685 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

2688 i‡(
rs
->
ö_LSQ


2689 && ((
	`MD_OP_FLAGS
(
rs
->
›
Ë& (
F_MEM
|
F_LOAD
))

2690 =(
F_MEM
|
F_LOAD
)))

2692 
evíts
 = 0;

2697 
lﬂd_œt
 = 0;

2698 
i
 = (
rs
 - 
LSQ
);

2699 i‡(
i
 !
LSQ_hód
)

2704 
i
 = (ò+ (
LSQ_size
-1)) % LSQ_size;

2707 i‡((
	`MD_OP_FLAGS
(
LSQ
[
i
].
›
Ë& 
F_STORE
)

2708 && (
LSQ
[
i
].
addr
 =
rs
->addr))

2711 
lﬂd_œt
 = 1;

2716 i‡(
i
 =
LSQ_hód
)

2722 i‡(!
lﬂd_œt
)

2724 
vÆid_addr
 = 
	`MD_VALID_ADDR
(
rs
->
addr
);

2726 i‡(!
•ec_mode
 && !
vÆid_addr
)

2727 
sim_övÆid_addrs
++;

2730 i‡(
ˇche_dl1
 && 
vÆid_addr
)

2733 
lﬂd_œt
 =

2734 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Ród
,

2735 (
rs
->
addr
 & ~3), 
NULL
, 4,

2736 
sim_cy˛e
, 
NULL
, NULL);

2737 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
)

2738 
evíts
 |
PEV_CACHEMISS
;

2743 
lﬂd_œt
 = 
fu
->
›œt
;

2748 i‡(
déb
 && 
	`MD_VALID_ADDR
(
rs
->
addr
))

2752 
éb_œt
 =

2753 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
rs
->
addr
 & ~3),

2754 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2755 i‡(
éb_œt
 > 1)

2756 
evíts
 |
PEV_TLBMISS
;

2759 
lﬂd_œt
 = 
	`MAX
(
éb_œt
,Üoad_lat);

2763 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
lﬂd_œt
);

2766 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2767 ((
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0)

2768 | 
evíts
));

2773 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
fu
->
›œt
);

2776 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2777 
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0);

2781 
n_issued
++;

2788 
	`ªadyq_íqueue
(
rs
);

2795 
rs
->
issued
 = 
TRUE
;

2798 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 1);

2801 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2802 
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0);

2805 
n_issued
++;

2816 
	`RSLINK_FREE
(
node
);

2821 ; 
node
;Çodê
√xt_node
)

2823 
√xt_node
 = 
node
->
√xt
;

2826 i‡(
	`RSLINK_VALID
(
node
))

2828 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
node
);

2831 
rs
->
queued
 = 
FALSE
;

2835 
	`ªadyq_íqueue
(
rs
);

2843 
	`RSLINK_FREE
(
node
);

2845 
	}
}

2854 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

2855 
BITMAP_TYPE
(
MD_NUM_IREGS
, 
u£_•ec_R
);

2856 
md_g¥_t
 
	g•ec_ªgs_R
;

2859 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

2860 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_F
);

2861 
md_Âr_t
 
	g•ec_ªgs_F
;

2864 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

2865 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_C
);

2866 
md_˘æ_t
 
	g•ec_ªgs_C
;

2870 
	$r•ec_dump
(
FILE
 *
°ªam
)

2872 
i
;

2874 i‡(!
°ªam
)

2875 
°ªam
 = 
°dîr
;

2877 
	`Ârötf
(
°ªam
, "** speculativeÑegister contents **\n");

2879 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

2882 
i
=0; i < 
MD_NUM_IREGS
; i++)

2884 i‡(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, 
i
))

2886 
	`md_¥öt_úeg
(
•ec_ªgs_R
, 
i
, 
°ªam
);

2887 
	`Ârötf
(
°ªam
, "\n");

2892 
i
=0; i < 
MD_NUM_FREGS
; i++)

2894 i‡(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, 
i
))

2896 
	`md_¥öt_Âªg
(
•ec_ªgs_F
, 
i
, 
°ªam
);

2897 
	`Ârötf
(
°ªam
, "\n");

2902 
i
=0; i < 
MD_NUM_CREGS
; i++)

2904 i‡(
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

2906 
	`md_¥öt_¸eg
(
•ec_ªgs_C
, 
i
, 
°ªam
);

2907 
	`Ârötf
(
°ªam
, "\n");

2910 
	}
}

2914 
	#STORE_HASH_SIZE
 32

	)

2919 
	s•ec_mem_ít
 {

2920 
•ec_mem_ít
 *
	m√xt
;

2921 
md_addr_t
 
	maddr
;

2922 
	md©a
[2];

2926 
•ec_mem_ít
 *
	g°‹e_hèbÀ
[
STORE_HASH_SIZE
];

2929 
•ec_mem_ít
 *
	gbuckë_‰ì_li°
 = 
NULL
;

2933 
md_addr_t
 
	g¥ed_PC
;

2934 
md_addr_t
 
	gªcovî_PC
;

2937 
md_addr_t
 
	g„tch_ªgs_PC
;

2938 
md_addr_t
 
	g„tch_¥ed_PC
;

2941 
	s„tch_ªc
 {

2942 
md_ö°_t
 
	mIR
;

2943 
md_addr_t
 
	mªgs_PC
, 
	m¥ed_PC
;

2944 
b¥ed_upd©e_t
 
	mdú_upd©e
;

2945 
	m°ack_ªcovî_idx
;

2946 
	m±ø˚_£q
;

2948 
„tch_ªc
 *
	g„tch_d©a
;

2949 
	g„tch_num
;

2950 
	g„tch_èû
, 
	g„tch_hód
;

2957 
	$åa˚r_ªcovî
()

2959 
i
;

2960 
•ec_mem_ít
 *
ít
, *
ít_√xt
;

2963 i‡(!
•ec_mode
)

2964 
	`∑nic
("cannotÑecover unless in speculative mode");

2967 
•ec_mode
 = 
FALSE
;

2970 
	`BITMAP_CLEAR_MAP
(
u£_•ec_R
, 
R_BMAP_SZ
);

2971 
	`BITMAP_CLEAR_MAP
(
u£_•ec_F
, 
F_BMAP_SZ
);

2972 
	`BITMAP_CLEAR_MAP
(
u£_•ec_C
, 
C_BMAP_SZ
);

2976 
i
=0; i<
STORE_HASH_SIZE
; i++)

2979 
ít
=
°‹e_hèbÀ
[
i
];É¡;É¡=
ít_√xt
)

2981 
ít_√xt
 = 
ít
->
√xt
;

2982 
ít
->
√xt
 = 
buckë_‰ì_li°
;

2983 
buckë_‰ì_li°
 = 
ít
;

2985 
°‹e_hèbÀ
[
i
] = 
NULL
;

2989 i‡(
±ø˚_a˘ive
)

2991 
„tch_num
 != 0)

2994 
	`±ø˚_ídö°
(
„tch_d©a
[
„tch_hód
].
±ø˚_£q
);

2997 
„tch_hód
 = („tch_hód+1Ë& (
ruu_ifq_size
 - 1);

2998 
„tch_num
--;

3003 
„tch_num
 = 0;

3004 
„tch_èû
 = 
„tch_hód
 = 0;

3005 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
ªcovî_PC
;

3006 
	}
}

3010 
	$åa˚r_öô
()

3012 
i
;

3015 
•ec_mode
 = 
FALSE
;

3018 
	`BITMAP_CLEAR_MAP
(
u£_•ec_R
, 
R_BMAP_SZ
);

3019 
	`BITMAP_CLEAR_MAP
(
u£_•ec_F
, 
F_BMAP_SZ
);

3020 
	`BITMAP_CLEAR_MAP
(
u£_•ec_C
, 
C_BMAP_SZ
);

3023 
i
=0; i<
STORE_HASH_SIZE
; i++)

3024 
°‹e_hèbÀ
[
i
] = 
NULL
;

3025 
	}
}

3029 
	#HASH_ADDR
(
ADDR
) \

3030 ((((
ADDR
Ë>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

3041 
md_Áu…_ty≥


3042 
	$•ec_mem_ac˚ss
(
mem_t
 *
mem
,

3043 
mem_cmd
 
cmd
,

3044 
md_addr_t
 
addr
,

3045 *
p
,

3046 
nbyãs
)

3048 
i
, 
ödex
;

3049 
•ec_mem_ít
 *
ít
, *
¥ev
;

3055 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

3058 
i
=0; i < 
nbyãs
; i++)

3059 ((*)
p
)[
i
] = 0;

3061  
md_Áu…_n⁄e
;

3065 i‡(!((
addr
 >
ld_ãxt_ba£
 &&ádd∏< (ld_ãxt_ba£+
ld_ãxt_size
)

3066 && 
cmd
 =
Ród
)

3067 || 
	`MD_VALID_ADDR
(
addr
)))

3070 
i
=0; i < 
nbyãs
; i++)

3071 ((*)
p
)[
i
] = 0;

3073  
md_Áu…_n⁄e
;

3077 
ödex
 = 
	`HASH_ADDR
(
addr
);

3078 
¥ev
=
NULL
,
ít
=
°‹e_hèbÀ
[
ödex
];É¡;ÖªvÛ¡,ítÛ¡->
√xt
)

3080 i‡(
ít
->
addr
 ==áddr)

3083 i‡(
¥ev
 !
NULL
)

3086 
¥ev
->
√xt
 = 
ít
->next;

3087 
ít
->
√xt
 = 
°‹e_hèbÀ
[
ödex
];

3088 
°‹e_hèbÀ
[
ödex
] = 
ít
;

3095 i‡(!
ít
 && 
cmd
 =
Wrôe
)

3098 i‡(!
buckë_‰ì_li°
)

3101 
buckë_‰ì_li°
 = 
	`ˇŒoc
(1, (
•ec_mem_ít
));

3102 i‡(!
buckë_‰ì_li°
)

3103 
	`Áèl
("out of virtual memory");

3105 
ít
 = 
buckë_‰ì_li°
;

3106 
buckë_‰ì_li°
 = buckë_‰ì_li°->
√xt
;

3108 i‡(!
bugcom∑t_mode
)

3111 
ít
->
√xt
 = 
°‹e_hèbÀ
[
ödex
];

3112 
°‹e_hèbÀ
[
ödex
] = 
ít
;

3113 
ít
->
addr
 =áddr;

3114 
ít
->
d©a
[0] = 0;Ént->data[1] = 0;

3119 
nbyãs
)

3122 i‡(
cmd
 =
Ród
)

3124 i‡(
ít
)

3127 *((
byã_t
 *)
p
Ë*((byã_à*)(&
ít
->
d©a
[0]));

3133 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

3139 *((
byã_t
 *)(&
ít
->
d©a
[0])Ë*((byã_à*)
p
);

3143 i‡(
cmd
 =
Ród
)

3145 i‡(
ít
)

3148 *((
hÆf_t
 *)
p
Ë*((hÆf_à*)(&
ít
->
d©a
[0]));

3154 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

3160 *((
hÆf_t
 *)&
ít
->
d©a
[0]Ë*((hÆf_à*)
p
);

3164 i‡(
cmd
 =
Ród
)

3166 i‡(
ít
)

3169 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

3175 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

3181 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

3185 i‡(
cmd
 =
Ród
)

3187 i‡(
ít
)

3190 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

3191 *(((
w‹d_t
 *)
p
)+1Ë*((w‹d_à*)&
ít
->
d©a
[1]);

3197 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

3198 *(((
w‹d_t
 *)
p
)+1) =

3199 
	`MEM_READ_WORD
(
mem
, 
addr
 + (
w‹d_t
));

3205 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

3206 *((
w‹d_t
 *)&
ít
->
d©a
[1]Ë*(((w‹d_à*)
p
)+1);

3210 
	`∑nic
("access sizeÇot supported in mis-speculative mode");

3213  
md_Áu…_n⁄e
;

3214 
	}
}

3218 
	$m•ec_dump
(
FILE
 *
°ªam
)

3220 
i
;

3221 
•ec_mem_ít
 *
ít
;

3223 i‡(!
°ªam
)

3224 
°ªam
 = 
°dîr
;

3226 
	`Ârötf
(
°ªam
, "** speculative memory contents **\n");

3228 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

3230 
i
=0; i<
STORE_HASH_SIZE
; i++)

3233 
ít
=
°‹e_hèbÀ
[
i
];É¡;É¡Û¡->
√xt
)

3235 
	`myÂrötf
(
°ªam
, "[0x%08p]: %12.0f/0x%08x:%08x\n",

3236 
ít
->
addr
, ()(*((*Î¡->
d©a
)),

3237 *((*)&
ít
->
d©a
[0]),

3238 *(((*)&
ít
->
d©a
[0]) + 1));

3241 
	}
}

3245 
	$simoo_mem_obj
(
mem_t
 *
mem
,

3246 
is_wrôe
,

3247 
md_addr_t
 
addr
,

3248 *
p
,

3249 
nbyãs
)

3251 
mem_cmd
 
cmd
;

3253 i‡(!
is_wrôe
)

3254 
cmd
 = 
Ród
;

3256 
cmd
 = 
Wrôe
;

3259 *
îr°r
;

3261 
îr°r
 = 
	`mem_vÆid
(
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

3262 i‡(
îr°r
)

3263  
îr°r
;

3267 i‡(
•ec_mode
)

3268 
	`•ec_mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

3270 
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

3273  
NULL
;

3274 
	}
}

3283 
INLINE
 

3284 
	$ruu_lök_idï
(
RUU_°©i⁄
 *
rs
,

3285 
idï_num
,

3286 
idï_«me
)

3288 
CV_lök
 
hód
;

3289 
RS_lök
 *
lök
;

3292 i‡(
idï_«me
 =
NA
)

3295 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

3300 
hód
 = 
	`CREATE_VECTOR
(
idï_«me
);

3303 i‡(!
hód
.
rs
)

3307 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

3314 
rs
->
idï_ªady
[
idï_num
] = 
FALSE
;

3317 
	`RSLINK_NEW
(
lök
, 
rs
);Üök->
x
.
›num
 = 
idï_num
;

3318 
lök
->
√xt
 = 
hód
.
rs
->
odï_li°
[hód.
odï_num
];

3319 
hód
.
rs
->
odï_li°
[hód.
odï_num
] = 
lök
;

3320 
	}
}

3323 
INLINE
 

3324 
	$ruu_ö°Æl_odï
(
RUU_°©i⁄
 *
rs
,

3325 
odï_num
,

3326 
odï_«me
)

3328 
CV_lök
 
cv
;

3331 i‡(
odï_«me
 =
NA
)

3334 
rs
->
⁄ames
[
odï_num
] = 
NA
;

3340 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

3343 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

3346 
	`CVLINK_INIT
(
cv
, 
rs
, 
odï_num
);

3347 
	`SET_CREATE_VECTOR
(
odï_«me
, 
cv
);

3348 
	}
}

3355 
	#DNA
 (0)

	)

3357 #i‡
deföed
(
TARGET_PISA
)

3360 
	#DGPR
(
N
Ë(N)

	)

3361 
	#DGPR_D
(
N
Ë((NË&~1)

	)

3364 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

3365 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

3366 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

3369 
	#DHI
 (0+32+32)

	)

3370 
	#DLO
 (1+32+32)

	)

3371 
	#DFCC
 (2+32+32)

	)

3372 
	#DTMP
 (3+32+32)

	)

3374 #ñi‡
deföed
(
TARGET_ALPHA
)

3377 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

3380 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

3383 
	#DFPCR
 (0+32+32)

	)

3384 
	#DUNIQ
 (1+32+32)

	)

3385 
	#DTMP
 (2+32+32)

	)

3388 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

3397 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

3400 #unde‡
SET_TPC


3401 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

3404 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

3405 
	#SET_CPC
(
EXPR
Ë(
ªgs
.
ªgs_PC
 = (EXPR))

	)

3410 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, (N))\

3411 ? 
•ec_ªgs_R
[
N
] \

3412 : 
ªgs
.
ªgs_R
[
N
])

	)

3413 
	#SET_GPR
(
N
,
EXPR
Ë(
•ec_mode
 \

3414 ? ((
•ec_ªgs_R
[
N
] = (
EXPR
)), \

3415 
	`BITMAP_SET
(
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)),\

3416 
•ec_ªgs_R
[
N
]) \

3417 : (
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

	)

3419 #i‡
deföed
(
TARGET_PISA
)

3424 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3425 ? 
•ec_ªgs_F
.
l
[(
N
)] \

3426 : 
ªgs
.
ªgs_F
.
l
[(
N
)])

	)

3427 
	#SET_FPR_L
(
N
,
EXPR
Ë(
•ec_mode
 \

3428 ? ((
•ec_ªgs_F
.
l
[(
N
)] = (
EXPR
)), \

3429 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3430 
•ec_ªgs_F
.
l
[(
N
)]) \

3431 : (
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

	)

3432 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3433 ? 
•ec_ªgs_F
.
f
[(
N
)] \

3434 : 
ªgs
.
ªgs_F
.
f
[(
N
)])

	)

3435 
	#SET_FPR_F
(
N
,
EXPR
Ë(
•ec_mode
 \

3436 ? ((
•ec_ªgs_F
.
f
[(
N
)] = (
EXPR
)), \

3437 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3438 
•ec_ªgs_F
.
f
[(
N
)]) \

3439 : (
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

	)

3440 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3441 ? 
•ec_ªgs_F
.
d
[(
N
) >> 1] \

3442 : 
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1])

	)

3443 
	#SET_FPR_D
(
N
,
EXPR
Ë(
•ec_mode
 \

3444 ? ((
•ec_ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)), \

3445 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3446 
•ec_ªgs_F
.
d
[(
N
) >> 1]) \

3447 : (
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

	)

3452 
	#HI
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

3453 ? 
•ec_ªgs_C
.
hi
 \

3454 : 
ªgs
.
ªgs_C
.
hi
)

	)

3455 
	#SET_HI
(
EXPR
Ë(
•ec_mode
 \

3456 ? ((
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

3457 
	`BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 0),\

3458 
•ec_ªgs_C
.
hi
) \

3459 : (
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

	)

3460 
	#LO
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

3461 ? 
•ec_ªgs_C
.
lo
 \

3462 : 
ªgs
.
ªgs_C
.
lo
)

	)

3463 
	#SET_LO
(
EXPR
Ë(
•ec_mode
 \

3464 ? ((
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

3465 
	`BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 1),\

3466 
•ec_ªgs_C
.
lo
) \

3467 : (
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

	)

3468 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

3469 ? 
•ec_ªgs_C
.
fcc
 \

3470 : 
ªgs
.
ªgs_C
.
fcc
)

	)

3471 
	#SET_FCC
(
EXPR
Ë(
•ec_mode
 \

3472 ? ((
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

3473 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 2),\

3474 
•ec_ªgs_C
.
fcc
) \

3475 : (
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

	)

3477 #ñi‡
deföed
(
TARGET_ALPHA
)

3482 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

3483 ? 
•ec_ªgs_F
.
q
[(
N
)] \

3484 : 
ªgs
.
ªgs_F
.
q
[(
N
)])

	)

3485 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
•ec_mode
 \

3486 ? ((
•ec_ªgs_F
.
q
[(
N
)] = (
EXPR
)), \

3487 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

3488 
•ec_ªgs_F
.
q
[(
N
)]) \

3489 : (
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

	)

3490 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

3491 ? 
•ec_ªgs_F
.
d
[(
N
)] \

3492 : 
ªgs
.
ªgs_F
.
d
[(
N
)])

	)

3493 
	#SET_FPR
(
N
,
EXPR
Ë(
•ec_mode
 \

3494 ? ((
•ec_ªgs_F
.
d
[(
N
)] = (
EXPR
)), \

3495 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

3496 
•ec_ªgs_F
.
d
[(
N
)]) \

3497 : (
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

	)

3502 
	#FPCR
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

3503 ? 
•ec_ªgs_C
.
Â¸
 \

3504 : 
ªgs
.
ªgs_C
.
Â¸
)

	)

3505 
	#SET_FPCR
(
EXPR
Ë(
•ec_mode
 \

3506 ? ((
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

3507 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 0),\

3508 
•ec_ªgs_C
.
Â¸
) \

3509 : (
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

	)

3510 
	#UNIQ
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

3511 ? 
•ec_ªgs_C
.
uniq
 \

3512 : 
ªgs
.
ªgs_C
.
uniq
)

	)

3513 
	#SET_UNIQ
(
EXPR
Ë(
•ec_mode
 \

3514 ? ((
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

3515 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1),\

3516 
•ec_ªgs_C
.
uniq
) \

3517 : (
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

	)

3518 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

3519 ? 
•ec_ªgs_C
.
fcc
 \

3520 : 
ªgs
.
ªgs_C
.
fcc
)

	)

3521 
	#SET_FCC
(
EXPR
Ë(
•ec_mode
 \

3522 ? ((
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

3523 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1),\

3524 
•ec_ªgs_C
.
fcc
) \

3525 : (
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

	)

3528 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

3534 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
) \

3535 (
addr
 = (
SRC
), \

3536 (
•ec_mode
 \

3537 ? ((
FAULT
Ë
	`•ec_mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))\

3538 : ((
FAULT
Ë
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))), \

3539 
SRC_V
)

	)

3541 
	#READ_BYTE
(
SRC
, 
FAULT
) \

3542 
	`__READ_SPECMEM
((
SRC
), 
ãmp_byã
, (
FAULT
))

	)

3543 
	#READ_HALF
(
SRC
, 
FAULT
) \

3544 
	`MD_SWAPH
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_hÆf
, (
FAULT
)))

	)

3545 
	#READ_WORD
(
SRC
, 
FAULT
) \

3546 
	`MD_SWAPW
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_w‹d
, (
FAULT
)))

	)

3547 #ifde‡
HOST_HAS_QWORD


3548 
	#READ_QWORD
(
SRC
, 
FAULT
) \

3549 
	`MD_SWAPQ
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_qw‹d
, (
FAULT
)))

	)

3553 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
) \

3554 (
DST_V
 = (
SRC
), 
addr
 = (
DST
), \

3555 (
•ec_mode
 \

3556 ? ((
FAULT
Ë
	`•ec_mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))\

3557 : ((
FAULT
Ë
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))))

	)

3559 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

3560 
	`__WRITE_SPECMEM
((
SRC
), (
DST
), 
ãmp_byã
, (
FAULT
))

	)

3561 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

3562 
	`__WRITE_SPECMEM
(
	`MD_SWAPH
(
SRC
), (
DST
), 
ãmp_hÆf
, (
FAULT
))

	)

3563 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

3564 
	`__WRITE_SPECMEM
(
	`MD_SWAPW
(
SRC
), (
DST
), 
ãmp_w‹d
, (
FAULT
))

	)

3565 #ifde‡
HOST_HAS_QWORD


3566 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

3567 
	`__WRITE_SPECMEM
(
	`MD_SWAPQ
(
SRC
), (
DST
), 
ãmp_qw‹d
, (
FAULT
))

	)

3571 
	#SYSCALL
(
INST
) \

3573 (
•ec_mode
 ? 
	`∑nic
("speculative syscall") : () 0), \

3574 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
))

	)

3578 
	$simoo_ªg_obj
(
ªgs_t
 *
xªgs
,

3579 
is_wrôe
,

3580 
md_ªg_ty≥
 
π
,

3581 
ªg
,

3582 
evÆ_vÆue_t
 *
vÆ
)

3584 
π
)

3586 
π_g¥
:

3587 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

3590 i‡(!
is_wrôe
)

3592 
vÆ
->
ty≥
 = 
ë_uöt
;

3593 
vÆ
->
vÆue
.
as_uöt
 = 
	`GPR
(
ªg
);

3596 
	`SET_GPR
(
ªg
, 
	`evÆ_as_uöt
(*
vÆ
));

3599 
π_Õr
:

3600 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

3604 
	`ab‹t
();

3606 i‡(!
is_wrôe
)

3608 
vÆ
->
ty≥
 = 
ë_uöt
;

3609 
vÆ
->
vÆue
.
as_uöt
 = 
	`FPR_L
(
ªg
);

3612 
	`SET_FPR_L
(
ªg
, 
	`evÆ_as_uöt
(*
vÆ
));

3616 
π_Âr
:

3618 
	`ab‹t
();

3620 i‡(!
is_wrôe
)

3621 
vÆ
->
vÆue
.
as_Êﬂt
 = 
	`FPR_F
(
ªg
);

3623 
	`SET_FPR_F
(
ªg
, 
vÆ
->
vÆue
.
as_Êﬂt
);

3627 
π_d¥
:

3629 
	`ab‹t
();

3632 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_REGS
/2)

3635 i‡(
©
 =
©_ªad
)

3636 
vÆ
->
as_doubÀ
 = 
	`FPR_D
(
ªg
 * 2);

3638 
	`SET_FPR_D
(
ªg
 * 2, 
vÆ
->
as_doubÀ
);

3644 
	`ab‹t
();

3645 
π_hi
:

3646 i‡(
©
 =
©_ªad
)

3647 
vÆ
->
as_w‹d
 = 
HI
;

3649 
	`SET_HI
(
vÆ
->
as_w‹d
);

3651 
π_lo
:

3652 i‡(
©
 =
©_ªad
)

3653 
vÆ
->
as_w‹d
 = 
LO
;

3655 
	`SET_LO
(
vÆ
->
as_w‹d
);

3657 
π_FCC
:

3658 i‡(
©
 =
©_ªad
)

3659 
vÆ
->
as_c⁄dôi⁄
 = 
FCC
;

3661 
	`SET_FCC
(
vÆ
->
as_c⁄dôi⁄
);

3665 
π_PC
:

3666 i‡(!
is_wrôe
)

3668 
vÆ
->
ty≥
 = 
ë_addr
;

3669 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
.
ªgs_PC
;

3672 
ªgs
.
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

3675 
π_NPC
:

3676 i‡(!
is_wrôe
)

3678 
vÆ
->
ty≥
 = 
ë_addr
;

3679 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
.
ªgs_NPC
;

3682 
ªgs
.
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

3686 
	`∑nic
("bogusÑegister bank");

3690  
NULL
;

3691 
	}
}

3695 
RS_lök
 
	gœ°_›
 = 
RSLINK_NULL_DATA
;

3701 
	$ruu_di•©ch
()

3703 
i
;

3704 
n_di•©ched
;

3705 
md_ö°_t
 
ö°
;

3706 
md_›code
 
›
;

3707 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

3708 
md_addr_t
 
èrgë_PC
;

3709 
md_addr_t
 
addr
;

3710 
RUU_°©i⁄
 *
rs
;

3711 
RUU_°©i⁄
 *
lsq
;

3712 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

3713 
°ack_ªcovî_idx
;

3714 
p£q
;

3715 
is_wrôe
;

3716 
made_check
;

3717 
br_èkí
, 
br_¥ed_èkí
;

3718 
„tch_ªdúe˘ed
 = 
FALSE
;

3719 
byã_t
 
ãmp_byã
 = 0;

3720 
hÆf_t
 
ãmp_hÆf
 = 0;

3721 
w‹d_t
 
ãmp_w‹d
 = 0;

3722 #ifde‡
HOST_HAS_QWORD


3723 
qw‹d_t
 
ãmp_qw‹d
 = 0;

3725 
md_Áu…_ty≥
 
Áu…
;

3727 
made_check
 = 
FALSE
;

3728 
n_di•©ched
 = 0;

3730 
n_di•©ched
 < (
ruu_decode_width
 * 
„tch_•ìd
)

3732 && 
RUU_num
 < 
RUU_size
 && 
LSQ_num
 < 
LSQ_size


3734 && 
„tch_num
 != 0

3736 && (
ruu_ö˛ude_•ec
 || !
•ec_mode
))

3739 i‡(
ruu_ö‹dî_issue


3740 && (
œ°_›
.
rs
 && 
	`RSLINK_VALID
(&last_op)

3741 && !
	`OPERANDS_READY
(
œ°_›
.
rs
)))

3748 
ö°
 = 
„tch_d©a
[
„tch_hód
].
IR
;

3749 
ªgs
.
ªgs_PC
 = 
„tch_d©a
[
„tch_hód
].regs_PC;

3750 
¥ed_PC
 = 
„tch_d©a
[
„tch_hód
].pred_PC;

3751 
dú_upd©e_±r
 = &(
„tch_d©a
[
„tch_hód
].
dú_upd©e
);

3752 
°ack_ªcovî_idx
 = 
„tch_d©a
[
„tch_hód
].stack_recover_idx;

3753 
p£q
 = 
„tch_d©a
[
„tch_hód
].
±ø˚_£q
;

3756 
	`MD_SET_OPCODE
(
›
, 
ö°
);

3759 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

3762 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_TRAP
)

3764 i‡(
RUU_num
 != 0)

3769 i‡(
•ec_mode
)

3770 
	`∑nic
("drainedánd speculative");

3774 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0; 
•ec_ªgs_R
[MD_REG_ZERO] = 0;

3775 #ifde‡
TARGET_ALPHA


3776 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0; 
•ec_ªgs_F
.d[MD_REG_ZERO] = 0.0;

3779 i‡(!
•ec_mode
)

3782 
sim_num_ö¢
++;

3786 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

3789 
Áu…
 = 
md_Áu…_n⁄e
;

3792 
›
)

3794 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

3795 
OP
: \

3797 
out1
 = 
O1
; 
out2
 = 
O2
; \

3798 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

3800 
	`SYMCAT
(
OP
,
_IMPL
); \

3801 ;

	)

3802 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

3803 
OP
: \

3805 
›
 = 
MD_NOP_OP
; \

3807 
out1
 = 
NA
; 
out2
 = NA; \

3808 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

3810 ;

	)

3811 
	#CONNECT
(
OP
Ë

	)

3817 
	#DECLARE_FAULT
(
FAULT
) \

3819 i‡(!
•ec_mode
) \

3820 
Áu…
 = (
FAULT
); \

3823 }

	)

3824 
	~"machöe.def
"

3827 
›
 = 
MD_NOP_OP
;

3829 
out1
 = 
NA
; 
out2
 = NA;

3830 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA;

3836 i‡(!
•ec_mode
 && 
vîbo£
)

3838 
	`myÂrötf
(
°dîr
, "++ %10n [xor: 0x%08x] {%d} @ 0x%08p: ",

3839 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),

3840 
ö°_£q
+1, 
ªgs
.
ªgs_PC
);

3841 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

3842 
	`Ârötf
(
°dîr
, "\n");

3846 i‡(
Áu…
 !
md_Áu…_n⁄e
)

3847 
	`Áèl
("non-speculative fault (%d) detected @ 0x%08p",

3848 
Áu…
, 
ªgs
.
ªgs_PC
);

3851 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

3853 
sim_tŸÆ_ªfs
++;

3854 i‡(!
•ec_mode
)

3855 
sim_num_ªfs
++;

3857 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

3858 
is_wrôe
 = 
TRUE
;

3861 
sim_tŸÆ_lﬂds
++;

3862 i‡(!
•ec_mode
)

3863 
sim_num_lﬂds
++;

3867 
br_èkí
 = (
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 + (
md_ö°_t
)));

3868 
br_¥ed_èkí
 = (
¥ed_PC
 !(
ªgs
.
ªgs_PC
 + (
md_ö°_t
)));

3870 i‡((
¥ed_PC
 !
ªgs
.
ªgs_NPC
 && 
¥ed_≥r„˘
)

3871 || ((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_DIRJMP
)) == (F_CTRL|F_DIRJMP)

3872 && 
èrgë_PC
 !
¥ed_PC
 && 
br_¥ed_èkí
))

3882 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
ªgs
.
ªgs_NPC
;

3884 i‡(
¥ed_≥r„˘
)

3885 
¥ed_PC
 = 
ªgs
.
ªgs_NPC
;

3887 
„tch_hód
 = (
ruu_ifq_size
-1);

3888 
„tch_num
 = 1;

3889 
„tch_èû
 = 0;

3891 i‡(!
¥ed_≥r„˘
)

3892 
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

3894 
„tch_ªdúe˘ed
 = 
TRUE
;

3898 i‡(
›
 !
MD_NOP_OP
)

3916 
rs
 = &
RUU
[
RUU_èû
];

3917 
rs
->
¶ù
 = 
sim_cy˛e
 - 1;

3918 
rs
->
IR
 = 
ö°
;

3919 
rs
->
›
 = op;

3920 
rs
->
PC
 = 
ªgs
.
ªgs_PC
;

3921 
rs
->
√xt_PC
 = 
ªgs
.
ªgs_NPC
;Ñs->
¥ed_PC
 =Öred_PC;

3922 
rs
->
ö_LSQ
 = 
FALSE
;

3923 
rs
->
ó_comp
 = 
FALSE
;

3924 
rs
->
ªcovî_ö°
 = 
FALSE
;

3925 
rs
->
dú_upd©e
 = *
dú_upd©e_±r
;

3926 
rs
->
°ack_ªcovî_idx
 = stack_recover_idx;

3927 
rs
->
•ec_mode
 = spec_mode;

3928 
rs
->
addr
 = 0;

3930 
rs
->
£q
 = ++
ö°_£q
;

3931 
rs
->
queued
 =Ñs->
issued
 =Ñs->
com∂ëed
 = 
FALSE
;

3932 
rs
->
±ø˚_£q
 = 
p£q
;

3935 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

3938 
rs
->
›
 = 
MD_AGEN_OP
;

3939 
rs
->
ó_comp
 = 
TRUE
;

3942 
lsq
 = &
LSQ
[
LSQ_èû
];

3943 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

3944 
lsq
->
IR
 = 
ö°
;

3945 
lsq
->
›
 = op;

3946 
lsq
->
PC
 = 
ªgs
.
ªgs_PC
;

3947 
lsq
->
√xt_PC
 = 
ªgs
.
ªgs_NPC
;Üsq->
¥ed_PC
 =Öred_PC;

3948 
lsq
->
ö_LSQ
 = 
TRUE
;

3949 
lsq
->
ó_comp
 = 
FALSE
;

3950 
lsq
->
ªcovî_ö°
 = 
FALSE
;

3951 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

3952 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

3953 
lsq
->
°ack_ªcovî_idx
 = 0;

3954 
lsq
->
•ec_mode
 = spec_mode;

3955 
lsq
->
addr
 =áddr;

3957 
lsq
->
£q
 = ++
ö°_£q
;

3958 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

3959 
lsq
->
±ø˚_£q
 =Ötrace_seq++;

3962 
	`±ø˚_√wu›
(
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

3963 
	`±ø˚_√w°age
(
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

3966 
	`ruu_lök_idï
(
rs
, 0, 
NA
);

3967 
	`ruu_lök_idï
(
rs
, 1, 
ö2
);

3968 
	`ruu_lök_idï
(
rs
, 2, 
ö3
);

3971 
	`ruu_ö°Æl_odï
(
rs
, 0, 
DTMP
);

3972 
	`ruu_ö°Æl_odï
(
rs
, 1, 
NA
);

3975 
	`ruu_lök_idï
(
lsq
,

3976  
STORE_OP_INDEX
 ,

3977 
ö1
);

3978 
	`ruu_lök_idï
(
lsq
,

3979  
STORE_ADDR_INDEX
 ,

3980 
DTMP
);

3981 
	`ruu_lök_idï
(
lsq
, 2, 
NA
);

3984 
	`ruu_ö°Æl_odï
(
lsq
, 0, 
out1
);

3985 
	`ruu_ö°Æl_odï
(
lsq
, 1, 
out2
);

3988 
n_di•©ched
++;

3989 
RUU_èû
 = (RUU_èû + 1Ë% 
RUU_size
;

3990 
RUU_num
++;

3991 
LSQ_èû
 = (LSQ_èû + 1Ë% 
LSQ_size
;

3992 
LSQ_num
++;

3994 i‡(
	`OPERANDS_READY
(
rs
))

3997 
	`ªadyq_íqueue
(
rs
);

4000 
	`RSLINK_INIT
(
œ°_›
, 
lsq
);

4003 i‡(((
	`MD_OP_FLAGS
(
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))

4004 && 
	`OPERANDS_READY
(
lsq
))

4008 
	`ªadyq_íqueue
(
lsq
);

4014 
	`ruu_lök_idï
(
rs
, 0, 
ö1
);

4015 
	`ruu_lök_idï
(
rs
, 1, 
ö2
);

4016 
	`ruu_lök_idï
(
rs
, 2, 
ö3
);

4019 
	`ruu_ö°Æl_odï
(
rs
, 0, 
out1
);

4020 
	`ruu_ö°Æl_odï
(
rs
, 1, 
out2
);

4023 
n_di•©ched
++;

4024 
RUU_èû
 = (RUU_èû + 1Ë% 
RUU_size
;

4025 
RUU_num
++;

4028 i‡(
	`OPERANDS_READY
(
rs
))

4031 
	`ªadyq_íqueue
(
rs
);

4033 
œ°_›
 = 
RSLINK_NULL
;

4038 
	`RSLINK_INIT
(
œ°_›
, 
rs
);

4045 
rs
 = 
NULL
;

4049 
sim_tŸÆ_ö¢
++;

4050 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4051 
sim_tŸÆ_bønches
++;

4053 i‡(!
•ec_mode
)

4057 
sim_num_ö¢
++;

4062 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4064 
sim_num_bønches
++;

4065 i‡(
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_ID
)

4067 
	`b¥ed_upd©e
(
¥ed
,

4068  
ªgs
.
ªgs_PC
,

4069  
ªgs
.
ªgs_NPC
,

4070  
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 +

4071 (
md_ö°_t
)),

4072  
¥ed_PC
 !(
ªgs
.
ªgs_PC
 +

4073 (
md_ö°_t
)),

4074  
¥ed_PC
 =
ªgs
.
ªgs_NPC
,

4075  
›
,

4076  &
rs
->
dú_upd©e
);

4081 i‡(
¥ed_PC
 !
ªgs
.
ªgs_NPC
 && !
„tch_ªdúe˘ed
)

4084 
•ec_mode
 = 
TRUE
;

4085 
rs
->
ªcovî_ö°
 = 
TRUE
;

4086 
ªcovî_PC
 = 
ªgs
.
ªgs_NPC
;

4091 
	`±ø˚_√w°age
(
p£q
, 
PST_DISPATCH
,

4092 (
¥ed_PC
 !
ªgs
.
ªgs_NPC
Ë? 
PEV_MPOCCURED
 : 0);

4093 i‡(
›
 =
MD_NOP_OP
)

4096 
	`±ø˚_ídö°
(
p£q
);

4100 
i
=0; i<
pc°©_√…
; i++)

4102 
cou¡î_t
 
√wvÆ
;

4103 
dñè
;

4106 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

4107 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

4108 i‡(
dñè
 != 0)

4110 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

4111 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

4116 
„tch_hód
 = („tch_hód+1Ë& (
ruu_ifq_size
 - 1);

4117 
„tch_num
--;

4120 
made_check
 = 
TRUE
;

4121 i‡(
	`dlôe_check_bªak
(
¥ed_PC
,

4122 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4123 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

4124 
	`dlôe_maö
(
ªgs
.
ªgs_PC
, 
¥ed_PC
, 
sim_cy˛e
, &ªgs, 
mem
);

4128 i‡(!
made_check
)

4130 i‡(
	`dlôe_check_bªak
( 0,

4131 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4132 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

4133 
	`dlôe_maö
(
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &ªgs, 
mem
);

4135 
	}
}

4144 
	$„tch_öô
()

4147 
„tch_d©a
 =

4148 (
„tch_ªc
 *)
	`ˇŒoc
(
ruu_ifq_size
, (fetch_rec));

4149 i‡(!
„tch_d©a
)

4150 
	`Áèl
("out of virtual memory");

4152 
„tch_num
 = 0;

4153 
„tch_èû
 = 
„tch_hód
 = 0;

4154 
IFQ_cou¡
 = 0;

4155 
IFQ_fcou¡
 = 0;

4156 
	}
}

4160 
	$„tch_dump
(
FILE
 *
°ªam
)

4162 
num
, 
hód
;

4164 i‡(!
°ªam
)

4165 
°ªam
 = 
°dîr
;

4167 
	`Ârötf
(
°ªam
, "** fetch stage state **\n");

4169 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

4170 
	`myÂrötf
(
°ªam
, "pred_PC: 0x%08p,Ñecover_PC: 0x%08p\n",

4171 
¥ed_PC
, 
ªcovî_PC
);

4172 
	`myÂrötf
(
°ªam
, "fetch_regs_PC: 0x%08p, fetch_pred_PC: 0x%08p\n",

4173 
„tch_ªgs_PC
, 
„tch_¥ed_PC
);

4174 
	`Ârötf
(
°ªam
, "\n");

4176 
	`Ârötf
(
°ªam
, "** fetch queue contents **\n");

4177 
	`Ârötf
(
°ªam
, "„tch_num: %d\n", 
„tch_num
);

4178 
	`Ârötf
(
°ªam
, "fetch_head: %d, fetch_tail: %d\n",

4179 
„tch_hód
, 
„tch_èû
);

4181 
num
 = 
„tch_num
;

4182 
hód
 = 
„tch_hód
;

4183 
num
)

4185 
	`Ârötf
(
°ªam
, "idx: %2d: in°: `", 
hód
);

4186 
	`md_¥öt_ö¢
(
„tch_d©a
[
hód
].
IR
, fëch_d©a[hód].
ªgs_PC
, 
°ªam
);

4187 
	`Ârötf
(
°ªam
, "'\n");

4188 
	`myÂrötf
(
°ªam
, "Ñegs_PC: 0x%08p,Öred_PC: 0x%08p\n",

4189 
„tch_d©a
[
hód
].
ªgs_PC
, fëch_d©a[hód].
¥ed_PC
);

4190 
hód
 = (hód + 1Ë& (
ruu_ifq_size
 - 1);

4191 
num
--;

4193 
	}
}

4195 
	gœ°_ö°_mis£d
 = 
FALSE
;

4196 
	gœ°_ö°_tmis£d
 = 
FALSE
;

4201 
	$ruu_„tch
()

4203 
i
, 
œt
, 
éb_œt
, 
d⁄e
 = 
FALSE
;

4204 
md_ö°_t
 
ö°
;

4205 
°ack_ªcovî_idx
;

4206 
bønch_˙t
;

4208 
i
=0, 
bønch_˙t
=0;

4210 
i
 < (
ruu_decode_width
 * 
„tch_•ìd
)

4212 && 
„tch_num
 < 
ruu_ifq_size


4214 && !
d⁄e
;

4215 
i
++)

4218 
„tch_ªgs_PC
 = 
„tch_¥ed_PC
;

4221 i‡(
ld_ãxt_ba£
 <
„tch_ªgs_PC


4222 && 
„tch_ªgs_PC
 < (
ld_ãxt_ba£
+
ld_ãxt_size
)

4223 && !(
„tch_ªgs_PC
 & ((
md_ö°_t
)-1)))

4226 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
„tch_ªgs_PC
);

4229 
œt
 = 
ˇche_û1_œt
;

4230 i‡(
ˇche_û1
)

4233 
œt
 =

4234 
	`ˇche_ac˚ss
(
ˇche_û1
, 
Ród
, 
	`IACOMPRESS
(
„tch_ªgs_PC
),

4235 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

4236 
NULL
, NULL);

4237 i‡(
œt
 > 
ˇche_û1_œt
)

4238 
œ°_ö°_mis£d
 = 
TRUE
;

4241 i‡(
ôlb
)

4245 
éb_œt
 =

4246 
	`ˇche_ac˚ss
(
ôlb
, 
Ród
, 
	`IACOMPRESS
(
„tch_ªgs_PC
),

4247 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

4248 
NULL
, NULL);

4249 i‡(
éb_œt
 > 1)

4250 
œ°_ö°_tmis£d
 = 
TRUE
;

4253 
œt
 = 
	`MAX
(
éb_œt
,Üat);

4257 i‡(
œt
 !
ˇche_û1_œt
)

4260 
ruu_„tch_issue_dñay
 +
œt
 - 1;

4268 
ö°
 = 
MD_NOP_INST
;

4274 i‡(
¥ed
)

4276 
md_›code
 
›
;

4279 
	`MD_SET_OPCODE
(
›
, 
ö°
);

4284 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4285 
„tch_¥ed_PC
 =

4286 
	`b¥ed_lookup
(
¥ed
,

4287  
„tch_ªgs_PC
,

4289  
›
,

4290  
	`MD_IS_CALL
(
›
),

4291  
	`MD_IS_RETURN
(
›
),

4292  &(
„tch_d©a
[
„tch_èû
].
dú_upd©e
),

4293  &
°ack_ªcovî_idx
);

4295 
„tch_¥ed_PC
 = 0;

4298 i‡(!
„tch_¥ed_PC
)

4301 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 + (
md_ö°_t
);

4306 
bønch_˙t
++;

4307 i‡(
bønch_˙t
 >
„tch_•ìd
)

4308 
d⁄e
 = 
TRUE
;

4315 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 + (
md_ö°_t
);

4319 
„tch_d©a
[
„tch_èû
].
IR
 = 
ö°
;

4320 
„tch_d©a
[
„tch_èû
].
ªgs_PC
 = 
„tch_ªgs_PC
;

4321 
„tch_d©a
[
„tch_èû
].
¥ed_PC
 = 
„tch_¥ed_PC
;

4322 
„tch_d©a
[
„tch_èû
].
°ack_ªcovî_idx
 = stack_recover_idx;

4323 
„tch_d©a
[
„tch_èû
].
±ø˚_£q
 =Ötrace_seq++;

4326 
	`±ø˚_√wö°
(
„tch_d©a
[
„tch_èû
].
±ø˚_£q
,

4327 
ö°
, 
„tch_d©a
[
„tch_èû
].
ªgs_PC
,

4329 
	`±ø˚_√w°age
(
„tch_d©a
[
„tch_èû
].
±ø˚_£q
,

4330 
PST_IFETCH
,

4331 ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0)

4332 | (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

4333 
œ°_ö°_mis£d
 = 
FALSE
;

4334 
œ°_ö°_tmis£d
 = 
FALSE
;

4337 
„tch_èû
 = („tch_èû + 1Ë& (
ruu_ifq_size
 - 1);

4338 
„tch_num
++;

4340 
	}
}

4344 
	$simoo_m°©e_obj
(
FILE
 *
°ªam
,

4345 *
cmd
,

4346 
ªgs_t
 *
ªgs
,

4347 
mem_t
 *
mem
)

4349 i‡(!
cmd
 || !
	`°rcmp
(cmd, "help"))

4350 
	`Ârötf
(
°ªam
,

4366 i‡(!
	`°rcmp
(
cmd
, "stats"))

4369 
	`sim_¥öt_°©s
(
°ªam
);

4371 i‡(!
	`°rcmp
(
cmd
, "res"))

4374 
	`ªs_dump
(
fu_poﬁ
, 
°ªam
);

4376 i‡(!
	`°rcmp
(
cmd
, "ruu"))

4379 
	`ruu_dump
(
°ªam
);

4381 i‡(!
	`°rcmp
(
cmd
, "lsq"))

4384 
	`lsq_dump
(
°ªam
);

4386 i‡(!
	`°rcmp
(
cmd
, "eventq"))

4389 
	`evítq_dump
(
°ªam
);

4391 i‡(!
	`°rcmp
(
cmd
, "readyq"))

4394 
	`ªadyq_dump
(
°ªam
);

4396 i‡(!
	`°rcmp
(
cmd
, "cv"))

4399 
	`cv_dump
(
°ªam
);

4401 i‡(!
	`°rcmp
(
cmd
, "rspec"))

4404 
	`r•ec_dump
(
°ªam
);

4406 i‡(!
	`°rcmp
(
cmd
, "mspec"))

4409 
	`m•ec_dump
(
°ªam
);

4411 i‡(!
	`°rcmp
(
cmd
, "fetch"))

4414 
	`„tch_dump
(
°ªam
);

4420  
NULL
;

4421 
	}
}

4426 
	$sim_maö
()

4430 
	`sig«l
(
SIGFPE
, 
SIG_IGN
);

4433 
ªgs
.
ªgs_PC
 = 
ld_¥og_íåy
;

4434 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

4437 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

4438 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.ªgs_PC + (
md_ö°_t
),

4439 
sim_cy˛e
, &
ªgs
, 
mem
);

4443 i‡(
Á°fwd_cou¡
 > 0)

4445 
icou¡
;

4446 
md_ö°_t
 
ö°
;

4447 
md_›code
 
›
;

4448 
md_addr_t
 
èrgë_PC
;

4449 
md_addr_t
 
addr
;

4450 
is_wrôe
;

4451 
byã_t
 
ãmp_byã
 = 0;

4452 
hÆf_t
 
ãmp_hÆf
 = 0;

4453 
w‹d_t
 
ãmp_w‹d
 = 0;

4454 #ifde‡
HOST_HAS_QWORD


4455 
qw‹d_t
 
ãmp_qw‹d
 = 0;

4457 
md_Áu…_ty≥
 
Áu…
;

4459 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %d in°†**\n", 
Á°fwd_cou¡
);

4461 
icou¡
=0; icou¡ < 
Á°fwd_cou¡
; icount++)

4464 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

4465 #ifde‡
TARGET_ALPHA


4466 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

4470 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

4473 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

4476 
Áu…
 = 
md_Áu…_n⁄e
;

4479 
	`MD_SET_OPCODE
(
›
, 
ö°
);

4482 
›
)

4484 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

4485 
OP
: \

4486 
	`SYMCAT
(
OP
,
_IMPL
); \

4487 ;

	)

4488 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

4489 
OP
: \

4490 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

4491 
	#CONNECT
(
OP
)

	)

4492 #unde‡
DECLARE_FAULT


4493 
	#DECLARE_FAULT
(
FAULT
) \

4494 { 
Áu…
 = (
FAULT
); ; }

	)

4495 
	~"machöe.def
"

4497 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

4500 i‡(
Áu…
 !
md_Áu…_n⁄e
)

4501 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

4504 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

4506 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

4507 
is_wrôe
 = 
TRUE
;

4511 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

4512 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4513 
addr
, 
sim_num_ö¢
, sim_num_insn))

4514 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

4517 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

4518 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

4522 
	`Ârötf
(
°dîr
, "sim: ** startingÖerformance simulation **\n");

4525 
„tch_ªgs_PC
 = 
ªgs
.
ªgs_PC
 - (
md_ö°_t
);

4526 
„tch_¥ed_PC
 = 
ªgs
.
ªgs_PC
;

4527 
ªgs
.
ªgs_PC
 =Ñegs.ªgs_PC - (
md_ö°_t
);

4534 i‡(
RUU_num
 < 
LSQ_num
)

4535 
	`∑nic
("RUU_num < LSQ_num");

4536 i‡(((
RUU_hód
 + 
RUU_num
Ë% 
RUU_size
Ë!
RUU_èû
)

4537 
	`∑nic
("RUU_head/RUU_tail wedged");

4538 i‡(((
LSQ_hód
 + 
LSQ_num
Ë% 
LSQ_size
Ë!
LSQ_èû
)

4539 
	`∑nic
("LSQ_head/LSQ_tail wedged");

4542 
	`±ø˚_check_a˘ive
(
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

4545 
	`±ø˚_√wcy˛e
(
sim_cy˛e
);

4548 
	`ruu_commô
();

4551 
	`ruu_ªÀa£_fu
();

4557 
	`ruu_wrôeback
();

4559 i‡(!
bugcom∑t_mode
)

4563 
	`lsq_ª‰esh
();

4567 
	`ruu_issue
();

4572 
	`ruu_di•©ch
();

4574 i‡(
bugcom∑t_mode
)

4578 
	`lsq_ª‰esh
();

4582 
	`ruu_issue
();

4586 i‡(!
ruu_„tch_issue_dñay
)

4587 
	`ruu_„tch
();

4589 
ruu_„tch_issue_dñay
--;

4592 
IFQ_cou¡
 +
„tch_num
;

4593 
IFQ_fcou¡
 +((
„tch_num
 =
ruu_ifq_size
) ? 1 : 0);

4594 
RUU_cou¡
 +
RUU_num
;

4595 
RUU_fcou¡
 +((
RUU_num
 =
RUU_size
) ? 1 : 0);

4596 
LSQ_cou¡
 +
LSQ_num
;

4597 
LSQ_fcou¡
 +((
LSQ_num
 =
LSQ_size
) ? 1 : 0);

4600 
sim_cy˛e
++;

4603 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

4606 
	}
}

	@sim-profile.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"symbﬁ.h
"

65 
	~"›ti⁄s.h
"

66 
	~"°©s.h
"

67 
	~"sim.h
"

75 
ªgs_t
 
	gªgs
;

78 
mem_t
 *
	gmem
 = 
NULL
;

81 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

84 
	gmax_ö°s
;

87 
	g¥of_Æl
 ;

88 
	g¥of_ic
 ;

89 
	g¥of_ö°
 ;

90 
	g¥of_bc
 ;

91 
	g¥of_am
 ;

92 
	g¥of_£g
 ;

93 
	g¥of_tsyms
 ;

94 
	g¥of_dsyms
 ;

95 
	glﬂd_loˇls
 ;

96 
	g¥of_èddr
 ;

99 
	#MAX_PCSTAT_VARS
 8

	)

100 
	gpc°©_√…
 = 0;

101 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

105 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

107 
	`›t_ªg_hódî
(
odb
,

114 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

115 &
max_ö°s
, 0,

116  
TRUE
, 
NULL
);

118 
	`›t_ªg_Êag
(
odb
, "-all", "enableállÖrofile options",

119 &
¥of_Æl
, 
FALSE
, 
TRUE
, 
NULL
);

121 
	`›t_ªg_Êag
(
odb
, "-iclass", "enable instruction classÖrofiling",

122 &
¥of_ic
, 
FALSE
, 
TRUE
, 
NULL
);

124 
	`›t_ªg_Êag
(
odb
, "-iprof", "enable instructionÖrofiling",

125 &
¥of_ö°
, 
FALSE
, 
TRUE
, 
NULL
);

127 
	`›t_ªg_Êag
(
odb
, "-brprof", "enable branch instructionÖrofiling",

128 &
¥of_bc
, 
FALSE
, 
TRUE
, 
NULL
);

130 
	`›t_ªg_Êag
(
odb
, "-amprof", "enableáddress modeÖrofiling",

131 &
¥of_am
, 
FALSE
, 
TRUE
, 
NULL
);

133 
	`›t_ªg_Êag
(
odb
, "-segprof", "enableÜoad/storeáddress segmentÖrofiling",

134 &
¥of_£g
, 
FALSE
, 
TRUE
, 
NULL
);

136 
	`›t_ªg_Êag
(
odb
, "-tsymprof", "enableÅext symbolÖrofiling",

137 &
¥of_tsyms
, 
FALSE
, 
TRUE
, 
NULL
);

139 
	`›t_ªg_Êag
(
odb
, "-taddrprof", "enableÅextáddressÖrofiling",

140 &
¥of_èddr
, 
FALSE
, 
TRUE
, 
NULL
);

142 
	`›t_ªg_Êag
(
odb
, "-dsymprof", "enable data symbolÖrofiling",

143 &
¥of_dsyms
, 
FALSE
, 
TRUE
, 
NULL
);

145 
	`›t_ªg_Êag
(
odb
, "-internal",

147 &
lﬂd_loˇls
, 
FALSE
, 
TRUE
, 
NULL
);

149 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

151 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

152  
FALSE
, 
NULL
, 
TRUE
);

153 
	}
}

157 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

159 i‡(
¥of_Æl
)

162 
¥of_ic
 = 
TRUE
;

163 
¥of_ö°
 = 
TRUE
;

164 
¥of_bc
 = 
TRUE
;

165 
¥of_am
 = 
TRUE
;

166 
¥of_£g
 = 
TRUE
;

167 
¥of_tsyms
 = 
TRUE
;

168 
¥of_dsyms
 = 
TRUE
;

169 
¥of_èddr
 = 
TRUE
;

171 
	}
}

174 
	eö°_˛ass_t
 {

175 
	mic_lﬂd
,

176 
	mic_°‹e
,

177 
	mic_unc⁄d
,

178 
	mic_c⁄d
,

179 
	mic_icomp
,

180 
	mic_fcomp
,

181 
	mic_å≠
,

182 
	mic_NUM


186 *
	gö°_˛ass_°r
[
ic_NUM
] = {

197 
°©_°©_t
 *
	gic_¥of
 = 
NULL
;

200 *
	gö°_°r
[
OP_MAX
];

203 
°©_°©_t
 *
	gö°_¥of
 = 
NULL
;

206 
	ebønch_˛ass_t
 {

207 
	mbc_unc⁄d_dú
,

208 
	mbc_c⁄d_dú
,

209 
	mbc_ˇŒ_dú
,

210 
	mbc_unc⁄d_ödú
,

211 
	mbc_c⁄d_ödú
,

212 
	mbc_ˇŒ_ödú
,

213 
	mbc_NUM


217 *
	gbønch_˛ass_°r
[
bc_NUM
] = {

227 
°©_°©_t
 *
	gbc_¥of
 = 
NULL
;

230 
°©_°©_t
 *
	gam_¥of
 = 
NULL
;

233 
	eaddr_£g_t
 {

234 
	m£g_d©a
,

235 
	m£g_hóp
,

236 
	m£g_°ack
,

237 
	m£g_ãxt
,

238 
	m£g_NUM


242 *
	gaddr_£g_°r
[
£g_NUM
] = {

250 
°©_°©_t
 *
	g£g_¥of
 = 
NULL
;

253 
addr_£g_t


254 
	$böd_to_£g
(
md_addr_t
 
addr
)

256 i‡(
ld_d©a_ba£
 <
addr
 &&ádd∏< (ld_d©a_ba£ + 
ld_d©a_size
))

257  
£g_d©a
;

258 i‡((
ld_d©a_ba£
 + 
ld_d©a_size
Ë<
addr
 &&ádd∏< 
ld_brk_poöt
)

259  
£g_hóp
;

261 i‡((
ld_°ack_ba£
 - (16*1024*1024)Ë<
addr
 &&áddr <Üd_stack_base)

262  
£g_°ack
;

263 i‡(
ld_ãxt_ba£
 <
addr
 &&ádd∏< (ld_ãxt_ba£ + 
ld_ãxt_size
))

264  
£g_ãxt
;

266 
	`∑nic
("cannot bindáddressÅo segment");

267 
	}
}

270 
°©_°©_t
 *
	gtsym_¥of
 = 
NULL
;

271 **
	gtsym_«mes
 = 
NULL
;

274 
°©_°©_t
 *
	gdsym_¥of
 = 
NULL
;

275 **
	gdsym_«mes
 = 
NULL
;

278 
°©_°©_t
 *
	gèddr_¥of
 = 
NULL
;

281 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

282 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

283 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

286 
	#STATVAL
(
STAT
) \

287 ((
STAT
)->
sc
 =
sc_öt
 \

288 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

289 : ((
STAT
)->
sc
 =
sc_uöt
 \

290 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

291 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

292 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

293 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

297 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

299 
i
;

301 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

303 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

304 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

306 &
sim_num_ªfs
, 0, 
NULL
);

307 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

309 &
sim_ñ≠£d_time
, 0, 
NULL
);

310 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

312 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

314 i‡(
¥of_ic
)

317 
ic_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_class_prof",

320  
ic_NUM
,

322  (
PF_COUNT
|
PF_PDF
),

323  
NULL
,

324  
ö°_˛ass_°r
,

325  
NULL
);

328 i‡(
¥of_ö°
)

330 
i
;

331 
buf
[512];

334 
i
=0; i < 
OP_MAX
-1; i++)

336 
	`•rötf
(
buf
, "%-8†%-6s", 
md_›2«me
[
i
+1], 
md_›2f‹m©
[i+1]);

337 
ö°_°r
[
i
] = 
	`my°rdup
(
buf
);

341 
ö°_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_prof",

344  
OP_MAX
-1,

346  (
PF_COUNT
|
PF_PDF
),

347  
NULL
,

348  
ö°_°r
,

349  
NULL
);

352 i‡(
¥of_bc
)

355 
bc_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_branch_prof",

358  
bc_NUM
,

360  (
PF_COUNT
|
PF_PDF
),

361  
NULL
,

362  
bønch_˛ass_°r
,

363  
NULL
);

366 i‡(
¥of_am
)

369 
am_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_mode_prof",

372  
md_amode_NUM
,

374  (
PF_COUNT
|
PF_PDF
),

375  
NULL
,

376  
md_amode_°r
,

377  
NULL
);

380 i‡(
¥of_£g
)

383 
£g_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_seg_prof",

386  
£g_NUM
,

388  (
PF_COUNT
|
PF_PDF
),

389  
NULL
,

390  
addr_£g_°r
,

391  
NULL
);

394 i‡(
¥of_tsyms
 && 
sym_¡extsyms
 != 0)

396 
i
;

399 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

402 
tsym_«mes
 = (**)
	`ˇŒoc
(
sym_¡extsyms
, (*));

404 
i
=0; i < 
sym_¡extsyms
; i++)

405 
tsym_«mes
[
i
] = 
sym_ãxtsyms
[i]->
«me
;

408 
tsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_text_sym_prof",

411  
sym_¡extsyms
,

413  (
PF_COUNT
|
PF_PDF
),

414  
NULL
,

415  
tsym_«mes
,

416  
NULL
);

419 i‡(
¥of_dsyms
 && 
sym_nd©asyms
 != 0)

421 
i
;

424 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

427 
dsym_«mes
 = (**)
	`ˇŒoc
(
sym_nd©asyms
, (*));

429 
i
=0; i < 
sym_nd©asyms
; i++)

430 
dsym_«mes
[
i
] = 
sym_d©asyms
[i]->
«me
;

433 
dsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_data_sym_prof",

436  
sym_nd©asyms
,

438  (
PF_COUNT
|
PF_PDF
),

439  
NULL
,

440  
dsym_«mes
,

441  
NULL
);

444 i‡(
¥of_èddr
)

450 
èddr_¥of
 = 
	`°©_ªg_sdi°
(
sdb
, "sim_text_addr_prof",

453  (
PF_COUNT
|
PF_PDF
),

455  
NULL
);

458 
i
=0; i<
pc°©_√…
; i++)

460 
buf
[512], 
buf1
[512];

461 
°©_°©_t
 *
°©
;

466 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

467 i‡(!
°©
)

468 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

471 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

472 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

473 
°©
->
«me
);

476 
pc°©_°©s
[
i
] = 
°©
;

477 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

480 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

481 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

482 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

484  (
PF_COUNT
|
PF_PDF
),

486  
NULL
);

488 
	`ld_ªg_°©s
(
sdb
);

489 
	`mem_ªg_°©s
(
mem
, 
sdb
);

490 
	}
}

494 
	$sim_öô
()

496 
sim_num_ªfs
 = 0;

499 
	`ªgs_öô
(&
ªgs
);

502 
mem
 = 
	`mem_¸óã
("mem");

503 
	`mem_öô
(
mem
);

504 
	}
}

508 
	$¥ofûe_m°©e_obj
(
FILE
 *
°ªam
,

509 *
cmd
,

510 
ªgs_t
 *
ªgs
,

511 
mem_t
 *
mem
)

514 
	`sim_¥öt_°©s
(
°ªam
);

517  
NULL
;

518 
	}
}

522 
	$sim_lﬂd_¥og
(*
‚ame
,

523 
¨gc
, **
¨gv
,

524 **
ívp
)

527 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

530 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
¥ofûe_m°©e_obj
);

531 
	}
}

536 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

539 
	}
}

543 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

545 
	}
}

549 
	$sim_unöô
()

552 
	}
}

564 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

567 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

570 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

571 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

573 #i‡
deföed
(
TARGET_PISA
)

576 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

577 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

578 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

579 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

580 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

581 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

584 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

585 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

586 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

587 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

588 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

589 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

591 #ñi‡
deföed
(
TARGET_ALPHA
)

594 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

595 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

596 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

597 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

600 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

601 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

602 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

603 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

606 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

610 
	#READ_BYTE
(
SRC
, 
FAULT
) \

611 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

612 
	#READ_HALF
(
SRC
, 
FAULT
) \

613 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

614 
	#READ_WORD
(
SRC
, 
FAULT
) \

615 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

616 #ifde‡
HOST_HAS_QWORD


617 
	#READ_QWORD
(
SRC
, 
FAULT
) \

618 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

621 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

622 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

623 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

624 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

625 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

626 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

627 #ifde‡
HOST_HAS_QWORD


628 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

629 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

633 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

637 
	gfsm
 = 0;

641 
	$sim_maö
()

643 
i
;

644 
md_ö°_t
 
ö°
;

645 
md_addr_t
 
addr
;

646 
is_wrôe
;

647 
md_›code
 
›
;

648 
Êags
;

649 
md_Áu…_ty≥
 
Áu…
;

651 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

654 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

657 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

658 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

659 
sim_num_ö¢
, &
ªgs
, 
mem
);

661 
TRUE
)

664 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

665 #ifde‡
TARGET_ALPHA


666 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

670 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

672 i‡(
vîbo£
)

674 
	`myÂrötf
(
°dîr
, "%10¿@ 0x%08p: ", 
sim_num_ö¢
, 
ªgs
.
ªgs_PC
);

675 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

676 
	`Ârötf
(
°dîr
, "\n");

681 
sim_num_ö¢
++;

684 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

687 
Áu…
 = 
md_Áu…_n⁄e
;

690 
	`MD_SET_OPCODE
(
›
, 
ö°
);

693 
›
)

695 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

696 
OP
: \

697 
	`SYMCAT
(
OP
,
_IMPL
); \

698 ;

	)

699 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

700 
OP
: \

701 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

702 
	#CONNECT
(
OP
)

	)

703 
	#DECLARE_FAULT
(
FAULT
) \

704 { 
Áu…
 = (
FAULT
); ; }

	)

705 
	~"machöe.def
"

707 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

710 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

712 
sim_num_ªfs
++;

713 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

714 
is_wrôe
 = 
TRUE
;

720 
Êags
 = 
	`MD_OP_FLAGS
(
›
);

722 i‡(
¥of_ic
)

724 
ö°_˛ass_t
 
ic
;

727 i‡(
Êags
 & 
F_LOAD
)

728 
ic
 = 
ic_lﬂd
;

729 i‡(
Êags
 & 
F_STORE
)

730 
ic
 = 
ic_°‹e
;

731 i‡(
Êags
 & 
F_UNCOND
)

732 
ic
 = 
ic_unc⁄d
;

733 i‡(
Êags
 & 
F_COND
)

734 
ic
 = 
ic_c⁄d
;

735 i‡(
Êags
 & 
F_ICOMP
)

736 
ic
 = 
ic_icomp
;

737 i‡(
Êags
 & 
F_FCOMP
)

738 
ic
 = 
ic_fcomp
;

739 i‡(
Êags
 & 
F_TRAP
)

740 
ic
 = 
ic_å≠
;

742 
	`∑nic
("instruction hasÇo class");

745 
	`°©_add_ßm∂e
(
ic_¥of
, ()
ic
);

748 i‡(
¥of_ö°
)

751 
	`°©_add_ßm∂e
(
ö°_¥of
, ()
›
 - 1);

754 i‡(
¥of_bc
)

756 
bønch_˛ass_t
 
bc
;

759 i‡(
Êags
 & 
F_CTRL
)

761 i‡((
Êags
 & (
F_CALL
|
F_DIRJMP
)) == (F_CALL|F_DIRJMP))

762 
bc
 = 
bc_ˇŒ_dú
;

763 i‡((
Êags
 & (
F_CALL
|
F_INDIRJMP
)) == (F_CALL|F_INDIRJMP))

764 
bc
 = 
bc_ˇŒ_ödú
;

765 i‡((
Êags
 & (
F_UNCOND
|
F_DIRJMP
)) == (F_UNCOND|F_DIRJMP))

766 
bc
 = 
bc_unc⁄d_dú
;

767 i‡((
Êags
 & (
F_UNCOND
|
F_INDIRJMP
))== (F_UNCOND|F_INDIRJMP))

768 
bc
 = 
bc_unc⁄d_ödú
;

769 i‡((
Êags
 & (
F_COND
|
F_DIRJMP
)) == (F_COND|F_DIRJMP))

770 
bc
 = 
bc_c⁄d_dú
;

771 i‡((
Êags
 & (
F_COND
|
F_INDIRJMP
)) == (F_COND|F_INDIRJMP))

772 
bc
 = 
bc_c⁄d_ödú
;

774 
	`∑nic
("branch hasÇo class");

777 
	`°©_add_ßm∂e
(
bc_¥of
, ()
bc
);

781 i‡(
¥of_am
)

783 
md_amode_ty≥
 
am
;

786 
	`MD_AMODE_PREPROBE
(
›
, 
fsm
);

789 i‡(
Êags
 & 
F_MEM
)

792 
	`MD_AMODE_PROBE
(
am
, 
›
, 
fsm
);

795 
	`°©_add_ßm∂e
(
am_¥of
, ()
am
);

798 
	`MD_AMODE_POSTPROBE
(
fsm
);

802 i‡(
¥of_£g
)

804 i‡(
Êags
 & 
F_MEM
)

807 
	`°©_add_ßm∂e
(
£g_¥of
, ()
	`böd_to_£g
(
addr
));

811 i‡(
¥of_tsyms
)

813 
tödex
;

816 
	`sym_böd_addr
(
ªgs
.
ªgs_PC
, &
tödex
, 
FALSE
, 
sdb_ãxt
);

818 i‡(
tödex
 >= 0)

820 i‡(
tödex
 > 
sym_¡extsyms
)

821 
	`∑nic
("bogusÅext symbol index");

823 
	`°©_add_ßm∂e
(
tsym_¥of
, 
tödex
);

828 i‡(
¥of_dsyms
)

830 
dödex
;

832 i‡(
Êags
 & 
F_MEM
)

835 
	`sym_böd_addr
(
addr
, &
dödex
, 
FALSE
, 
sdb_d©a
);

837 i‡(
dödex
 >= 0)

839 i‡(
dödex
 > 
sym_nd©asyms
)

840 
	`∑nic
("bogus data symbol index");

842 
	`°©_add_ßm∂e
(
dsym_¥of
, 
dödex
);

848 i‡(
¥of_èddr
)

851 
	`°©_add_ßm∂e
(
èddr_¥of
, 
ªgs
.
ªgs_PC
);

855 
i
=0; i<
pc°©_√…
; i++)

857 
cou¡î_t
 
√wvÆ
;

858 
dñè
;

861 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

862 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

863 i‡(
dñè
 != 0)

865 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

866 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

872 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

873 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

874 
addr
, 
sim_num_ö¢
, sim_num_insn))

875 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

878 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

879 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

882 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

885 
	}
}

	@sim-safe.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"sim.h
"

76 
ªgs_t
 
	gªgs
;

79 
mem_t
 *
	gmem
 = 
NULL
;

82 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

85 
	gmax_ö°s
;

89 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

91 
	`›t_ªg_hódî
(
odb
,

100 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

101 &
max_ö°s
, 0,

102  
TRUE
, 
NULL
);

104 
	}
}

108 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

111 
	}
}

115 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

117 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

119 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

120 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

122 &
sim_num_ªfs
, 0, 
NULL
);

123 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

125 &
sim_ñ≠£d_time
, 0, 
NULL
);

126 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

128 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

129 
	`ld_ªg_°©s
(
sdb
);

130 
	`mem_ªg_°©s
(
mem
, 
sdb
);

131 
	}
}

135 
	$sim_öô
()

137 
sim_num_ªfs
 = 0;

140 
	`ªgs_öô
(&
ªgs
);

143 
mem
 = 
	`mem_¸óã
("mem");

144 
	`mem_öô
(
mem
);

145 
	}
}

149 
	$sim_lﬂd_¥og
(*
‚ame
,

150 
¨gc
, **
¨gv
,

151 **
ívp
)

154 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

157 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

158 
	}
}

162 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

165 
	}
}

169 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

172 
	}
}

176 
	$sim_unöô
()

179 
	}
}

191 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

194 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

197 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

198 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

200 #i‡
deföed
(
TARGET_PISA
)

203 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

204 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

205 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

206 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

207 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

208 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

211 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

212 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

213 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

214 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

215 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

216 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

218 #ñi‡
deföed
(
TARGET_ALPHA
)

221 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

222 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

223 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(N)])

	)

224 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(N)] = (EXPR))

	)

227 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

228 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

229 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

230 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

233 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

237 
	#READ_BYTE
(
SRC
, 
FAULT
) \

238 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

239 
	#READ_HALF
(
SRC
, 
FAULT
) \

240 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

241 
	#READ_WORD
(
SRC
, 
FAULT
) \

242 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

243 #ifde‡
HOST_HAS_QWORD


244 
	#READ_QWORD
(
SRC
, 
FAULT
) \

245 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

248 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

249 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

250 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

251 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

252 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

253 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

254 #ifde‡
HOST_HAS_QWORD


255 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

256 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

260 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

264 
	$sim_maö
()

266 
md_ö°_t
 
ö°
;

267 
md_addr_t
 
addr
;

268 
md_›code
 
›
;

269 
is_wrôe
;

270 
md_Áu…_ty≥
 
Áu…
;

272 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

275 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

278 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

279 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),

280 
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, &ªgs, 
mem
);

282 
TRUE
)

285 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

286 #ifde‡
TARGET_ALPHA


287 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

291 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

294 
sim_num_ö¢
++;

297 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

300 
Áu…
 = 
md_Áu…_n⁄e
;

303 
	`MD_SET_OPCODE
(
›
, 
ö°
);

306 
›
)

308 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

309 
OP
: \

310 
	`SYMCAT
(
OP
,
_IMPL
); \

311 ;

	)

312 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

313 
OP
: \

314 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

315 
	#CONNECT
(
OP
)

	)

316 
	#DECLARE_FAULT
(
FAULT
) \

317 { 
Áu…
 = (
FAULT
); ; }

	)

318 
	~"machöe.def
"

320 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

323 i‡(
Áu…
 !
md_Áu…_n⁄e
)

324 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

326 i‡(
vîbo£
)

328 
	`myÂrötf
(
°dîr
, "%10n [xor: 0x%08x] @ 0x%08p: ",

329 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),Ñegs.
ªgs_PC
);

330 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

331 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

332 
	`myÂrötf
(
°dîr
, " mem: 0x%08p", 
addr
);

333 
	`Ârötf
(
°dîr
, "\n");

337 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

339 
sim_num_ªfs
++;

340 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

341 
is_wrôe
 = 
TRUE
;

345 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

346 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

347 
addr
, 
sim_num_ö¢
, sim_num_insn))

348 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

351 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

352 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

355 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

358 
	}
}

	@sim.h

52 #i‚de‡
SIM_H


53 
	#SIM_H


	)

55 
	~<°dio.h
>

56 
	~<£tjmp.h
>

57 
	~<time.h
>

59 
	~"›ti⁄s.h
"

60 
	~"°©s.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

65 
sim_dump_°©s
;

68 
sim_exô_now
;

71 
jmp_buf
 
sim_exô_buf
;

74 
sim_sw≠_byãs
;

75 
sim_sw≠_w‹ds
;

78 
cou¡î_t
 
sim_num_ö¢
;

81 
time_t
 
sim_°¨t_time
;

82 
time_t
 
sim_íd_time
;

83 
sim_ñ≠£d_time
;

86 
›t_odb_t
 *
sim_odb
;

89 
°©_sdb_t
 *
sim_sdb
;

92 *
sim_eio_‚ame
;

93 *
sim_chk±_‚ame
;

94 
FILE
 *
sim_eio_fd
;

97 
FILE
 *
sim_¥ogfd
;

105 
sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
);

110 
sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
);

113 
sim_ªg_°©s
(
°©_sdb_t
 *
sdb
);

116 
sim_öô
();

119 
sim_lﬂd_¥og
(*
‚ame
, 
¨gc
, **
¨gv
, **
ívp
);

124 
sim_aux_c⁄fig
(
FILE
 *
°ªam
);

127 
sim_maö
();

132 
sim_aux_°©s
(
FILE
 *
°ªam
);

135 
sim_unöô
();

139 
sim_¥öt_°©s
(
FILE
 *
fd
);

	@stats.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<limôs.h
>

55 
	~<m©h.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"evÆ.h
"

61 
	~"°©s.h
"

64 
evÆ_vÆue_t


65 
	$°©_evÆ_idít
(
evÆ_°©e_t
 *
es
)

67 
°©_sdb_t
 *
sdb
 = 
es
->
u£r_±r
;

68 
°©_°©_t
 *
°©
;

69 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

70 
evÆ_vÆue_t
 
vÆ
;

73 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

75 i‡(!
	`°rcmp
(
°©
->
«me
, 
es
->
tok_buf
))

81 i‡(!
°©
)

84 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

85  
îr_vÆue
;

90 
°©
->
sc
)

92 
sc_öt
:

93 
vÆ
.
ty≥
 = 
ë_öt
;

94 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

96 
sc_uöt
:

97 
vÆ
.
ty≥
 = 
ë_uöt
;

98 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

100 #ifde‡
HOST_HAS_QWORD


101 
sc_qw‹d
:

103 
vÆ
.
ty≥
 = 
ë_doubÀ
;

104 #ifde‡
_MSC_VER


105 
vÆ
.
vÆue
.
as_doubÀ
 = ()(
sqw‹d_t
)*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

107 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

110 
sc_sqw‹d
:

112 
vÆ
.
ty≥
 = 
ë_doubÀ
;

113 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
;

116 
sc_Êﬂt
:

117 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

118 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

120 
sc_doubÀ
:

121 
vÆ
.
ty≥
 = 
ë_doubÀ
;

122 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

124 
sc_di°
:

125 
sc_sdi°
:

126 
	`Áèl
("stat distributionsÇotállowed in formulaÉxpressions");

128 
sc_f‹muœ
:

131 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

132 *
ídp
;

134 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

135 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

138 
vÆ
 = 
îr_vÆue
;

141 
	`evÆ_dñëe
(
es
);

145 
	`∑nic
("bogus stat class");

148  
vÆ
;

149 
	}
}

152 
°©_sdb_t
 *

153 
	$°©_√w
()

155 
°©_sdb_t
 *
sdb
;

157 
sdb
 = (
°©_sdb_t
 *)
	`ˇŒoc
(1, (stat_sdb_t));

158 i‡(!
sdb
)

159 
	`Áèl
("out of virtual memory");

161 
sdb
->
°©s
 = 
NULL
;

162 
sdb
->
evÆu©‹
 = 
	`evÆ_√w
(
°©_evÆ_idít
, sdb);

164  
sdb
;

165 
	}
}

169 
	$°©_dñëe
(
°©_sdb_t
 *
sdb
)

171 
i
;

172 
°©_°©_t
 *
°©
, *
°©_√xt
;

173 
buckë_t
 *
buckë
, *
buckë_√xt
;

176 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà
°©_√xt
)

178 
°©_√xt
 = 
°©
->
√xt
;

179 
°©
->
√xt
 = 
NULL
;

182 
°©
->
sc
)

184 
sc_öt
:

185 
sc_uöt
:

186 #ifde‡
HOST_HAS_QWORD


187 
sc_qw‹d
:

188 
sc_sqw‹d
:

190 
sc_Êﬂt
:

191 
sc_doubÀ
:

192 
sc_f‹muœ
:

195 
sc_di°
:

197 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_di°
.
¨r
);

198 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 = 
NULL
;

200 
sc_sdi°
:

202 
i
=0; i<
HTAB_SZ
; i++)

204 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

205 
buckë
 !
NULL
;

206 
buckë
 = 
buckë_√xt
)

208 
buckë_√xt
 = 
buckë
->
√xt
;

209 
buckë
->
√xt
 = 
NULL
;

210 
	`‰ì
(
buckë
);

212 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
] = 
NULL
;

215 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
);

216 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = 
NULL
;

219 
	`∑nic
("bogus stat class");

222 
	`‰ì
(
°©
);

224 
sdb
->
°©s
 = 
NULL
;

225 
	`evÆ_dñëe
(
sdb
->
evÆu©‹
);

226 
sdb
->
evÆu©‹
 = 
NULL
;

227 
	`‰ì
(
sdb
);

228 
	}
}

232 
	$add_°©
(
°©_sdb_t
 *
sdb
,

233 
°©_°©_t
 *
°©
)

235 
°©_°©_t
 *
ñt
, *
¥ev
;

238 
¥ev
=
NULL
, 
ñt
=
sdb
->
°©s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

242 i‡(
¥ev
 !
NULL
)

243 
¥ev
->
√xt
 = 
°©
;

245 
sdb
->
°©s
 = 
°©
;

246 
°©
->
√xt
 = 
NULL
;

247 
	}
}

250 
°©_°©_t
 *

251 
	$°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

252 *
«me
,

253 *
desc
,

254 *
v¨
,

255 
öô_vÆ
,

256 *
f‹m©
)

258 
°©_°©_t
 *
°©
;

260 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

261 i‡(!
°©
)

262 
	`Áèl
("out of virtual memory");

264 
°©
->
«me
 = 
	`my°rdup
(name);

265 
°©
->
desc
 = 
	`my°rdup
(desc);

266 
°©
->
f‹m©
 = format ? format : "%12d";

267 
°©
->
sc
 = 
sc_öt
;

268 
°©
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

269 
°©
->
v¨ü¡
.
f‹_öt
.
öô_vÆ
 = init_val;

272 
	`add_°©
(
sdb
, 
°©
);

275 *
v¨
 = 
öô_vÆ
;

277  
°©
;

278 
	}
}

281 
°©_°©_t
 *

282 
	$°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

283 *
«me
,

284 *
desc
,

285 *
v¨
,

286 
öô_vÆ
,

287 *
f‹m©
)

289 
°©_°©_t
 *
°©
;

291 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

292 i‡(!
°©
)

293 
	`Áèl
("out of virtual memory");

295 
°©
->
«me
 = 
	`my°rdup
(name);

296 
°©
->
desc
 = 
	`my°rdup
(desc);

297 
°©
->
f‹m©
 = format ? format : "%12u";

298 
°©
->
sc
 = 
sc_uöt
;

299 
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

300 
°©
->
v¨ü¡
.
f‹_uöt
.
öô_vÆ
 = init_val;

303 
	`add_°©
(
sdb
, 
°©
);

306 *
v¨
 = 
öô_vÆ
;

308  
°©
;

309 
	}
}

311 #ifde‡
HOST_HAS_QWORD


313 
°©_°©_t
 *

314 
	$°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

315 *
«me
,

316 *
desc
,

317 
qw‹d_t
 *
v¨
,

318 
qw‹d_t
 
öô_vÆ
,

319 *
f‹m©
)

321 
°©_°©_t
 *
°©
;

323 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

324 i‡(!
°©
)

325 
	`Áèl
("out of virtual memory");

327 
°©
->
«me
 = 
	`my°rdup
(name);

328 
°©
->
desc
 = 
	`my°rdup
(desc);

329 
°©
->
f‹m©
 = format ? format : "%12lu";

330 
°©
->
sc
 = 
sc_qw‹d
;

331 
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
 = var;

332 
°©
->
v¨ü¡
.
f‹_qw‹d
.
öô_vÆ
 = init_val;

335 
	`add_°©
(
sdb
, 
°©
);

338 *
v¨
 = 
öô_vÆ
;

340  
°©
;

341 
	}
}

344 
°©_°©_t
 *

345 
	$°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

346 *
«me
,

347 *
desc
,

348 
sqw‹d_t
 *
v¨
,

349 
sqw‹d_t
 
öô_vÆ
,

350 *
f‹m©
)

352 
°©_°©_t
 *
°©
;

354 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

355 i‡(!
°©
)

356 
	`Áèl
("out of virtual memory");

358 
°©
->
«me
 = 
	`my°rdup
(name);

359 
°©
->
desc
 = 
	`my°rdup
(desc);

360 
°©
->
f‹m©
 = format ? format : "%12ld";

361 
°©
->
sc
 = 
sc_sqw‹d
;

362 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
 = var;

363 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
öô_vÆ
 = init_val;

366 
	`add_°©
(
sdb
, 
°©
);

369 *
v¨
 = 
öô_vÆ
;

371  
°©
;

372 
	}
}

376 
°©_°©_t
 *

377 
	$°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

378 *
«me
,

379 *
desc
,

380 *
v¨
,

381 
öô_vÆ
,

382 *
f‹m©
)

384 
°©_°©_t
 *
°©
;

386 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

387 i‡(!
°©
)

388 
	`Áèl
("out of virtual memory");

390 
°©
->
«me
 = 
	`my°rdup
(name);

391 
°©
->
desc
 = 
	`my°rdup
(desc);

392 
°©
->
f‹m©
 = format ? format : "%12.4f";

393 
°©
->
sc
 = 
sc_Êﬂt
;

394 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

395 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
öô_vÆ
 = init_val;

398 
	`add_°©
(
sdb
, 
°©
);

401 *
v¨
 = 
öô_vÆ
;

403  
°©
;

404 
	}
}

407 
°©_°©_t
 *

408 
	$°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

409 *
«me
,

410 *
desc
,

411 *
v¨
,

412 
öô_vÆ
,

413 *
f‹m©
)

415 
°©_°©_t
 *
°©
;

417 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

418 i‡(!
°©
)

419 
	`Áèl
("out of virtual memory");

421 
°©
->
«me
 = 
	`my°rdup
(name);

422 
°©
->
desc
 = 
	`my°rdup
(desc);

423 
°©
->
f‹m©
 = format ? format : "%12.4f";

424 
°©
->
sc
 = 
sc_doubÀ
;

425 
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

426 
°©
->
v¨ü¡
.
f‹_doubÀ
.
öô_vÆ
 = init_val;

429 
	`add_°©
(
sdb
, 
°©
);

432 *
v¨
 = 
öô_vÆ
;

434  
°©
;

435 
	}
}

443 
°©_°©_t
 *

444 
	$°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

445 *
«me
,

446 *
desc
,

447 
öô_vÆ
,

448 
¨r_sz
,

449 
buckë_sz
,

450 
pf
,

451 *
f‹m©
,

452 **
im≠
,

453 
¥öt_‚_t
 
¥öt_‚
)

455 
i
;

456 
°©_°©_t
 *
°©
;

457 *
¨r
;

459 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

460 i‡(!
°©
)

461 
	`Áèl
("out of virtual memory");

463 
°©
->
«me
 = 
	`my°rdup
(name);

464 
°©
->
desc
 = 
	`my°rdup
(desc);

465 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

466 
°©
->
sc
 = 
sc_di°
;

467 
°©
->
v¨ü¡
.
f‹_di°
.
öô_vÆ
 = init_val;

468 
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
 =árr_sz;

469 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
 = bucket_sz;

470 
°©
->
v¨ü¡
.
f‹_di°
.
pf
 =Öf;

471 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
 = imap;

472 
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
 =Örint_fn;

473 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 = 0;

475 
¨r
 = (*)
	`ˇŒoc
(
¨r_sz
, ());

476 i‡(!
¨r
)

477 
	`Áèl
("out of virtual memory");

478 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 =árr;

481 
	`add_°©
(
sdb
, 
°©
);

484 
i
=0; i < 
¨r_sz
; i++)

485 
¨r
[
i
] = 
öô_vÆ
;

487  
°©
;

488 
	}
}

497 
°©_°©_t
 *

498 
	$°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

499 *
«me
,

500 *
desc
,

501 
öô_vÆ
,

502 
pf
,

503 *
f‹m©
,

504 
¥öt_‚_t
 
¥öt_‚
)

506 
°©_°©_t
 *
°©
;

507 
buckë_t
 **
ßº
;

509 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

510 i‡(!
°©
)

511 
	`Áèl
("out of virtual memory");

513 
°©
->
«me
 = 
	`my°rdup
(name);

514 
°©
->
desc
 = 
	`my°rdup
(desc);

515 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

516 
°©
->
sc
 = 
sc_sdi°
;

517 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
 = init_val;

518 
°©
->
v¨ü¡
.
f‹_sdi°
.
pf
 =Öf;

519 
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
 =Örint_fn;

522 
ßº
 = (
buckë_t
 **)
	`ˇŒoc
(
HTAB_SZ
, (bucket_t *));

523 i‡(!
ßº
)

524 
	`Áèl
("out of virtual memory");

525 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = sarr;

528 
	`add_°©
(
sdb
, 
°©
);

530  
°©
;

531 
	}
}

535 
	$°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

536 
md_addr_t
 
ödex
,

537 
nßm∂es
)

539 
°©
->
sc
)

541 
sc_di°
:

543 
i
;

546 
i
 = 
ödex
 / 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
;

549 i‡(
i
 >
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
)

550 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 +
nßm∂es
;

552 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] +
nßm∂es
;

555 
sc_sdi°
:

557 
buckë_t
 *
buckë
;

558 
hash
 = 
	`HTAB_HASH
(
ödex
);

560 i‡(
hash
 < 0 || hash >
HTAB_SZ
)

561 
	`∑nic
("hashÅable index overflow");

564 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

565 
buckë
 !
NULL
;

566 
buckë
 = buckë->
√xt
)

568 i‡(
buckë
->
ödex
 == index)

571 i‡(!
buckë
)

574 
buckë
 = (
buckë_t
 *)
	`ˇŒoc
(1, (bucket_t));

575 i‡(!
buckë
)

576 
	`Áèl
("out of virtual memory");

577 
buckë
->
√xt
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

578 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
] = 
buckë
;

579 
buckë
->
ödex
 = index;

580 
buckë
->
cou¡
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
;

582 
buckë
->
cou¡
 +
nßm∂es
;

586 
	`∑nic
("stat variable isÇotánárray distribution");

588 
	}
}

592 
	$°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

593 
md_addr_t
 
ödex
)

595 
	`°©_add_ßm∂es
(
°©
, 
ödex
, 1);

596 
	}
}

605 
°©_°©_t
 *

606 
	$°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

607 *
«me
,

608 *
desc
,

609 *
f‹muœ
,

610 *
f‹m©
)

612 
°©_°©_t
 *
°©
;

614 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

615 i‡(!
°©
)

616 
	`Áèl
("out of virtual memory");

618 
°©
->
«me
 = 
	`my°rdup
(name);

619 
°©
->
desc
 = 
	`my°rdup
(desc);

620 
°©
->
f‹m©
 = format ? format : "%12.4f";

621 
°©
->
sc
 = 
sc_f‹muœ
;

622 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
 = 
	`my°rdup
(formula);

625 
	`add_°©
(
sdb
, 
°©
);

627  
°©
;

628 
	}
}

633 
	$com∑ª_‚
(*
p1
, *
p2
)

635 
buckë_t
 **
pb1
 = 
p1
, **
pb2
 = 
p2
;

638 i‡((*
pb1
)->
ödex
 < (*
pb2
)->index)

640 i‡((*
pb1
)->
ödex
 > (*
pb2
)->index)

644 
	}
}

648 
	$¥öt_di°
(
°©_°©_t
 *
°©
,

649 
FILE
 *
fd
)

651 
i
, 
bcou¡
, 
imax
, 
imö
;

652 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

653 
pf
 = 
°©
->
v¨ü¡
.
f‹_di°
.pf;

656 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

657 
imax
 = 0; 
imö
 = 
UINT_MAX
;

658 
i
=0; i<
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
; i++)

660 
bcou¡
++;

661 
btŸÆ
 +
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

663 
bsqsum
 +(()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] *

664 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

665 
bavg
 = 
btŸÆ
 / 
	`MAX
(()
bcou¡
, 1.0);

666 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

667 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

671 
	`Ârötf
(
fd
, "\n");

672 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

673 
	`Ârötf
(
fd
, "%s.array_size = %u\n",

674 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
¨r_sz
);

675 
	`Ârötf
(
fd
, "%s.bucket_size = %u\n",

676 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

678 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

679 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

680 i‡(
bcou¡
 > 0)

682 
	`Ârötf
(
fd
, "%s.imö = %u\n", 
°©
->
«me
, 0U);

683 
	`Ârötf
(
fd
, "%s.imax = %u\n", 
°©
->
«me
, 
bcou¡
);

687 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

688 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

690 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
	`MAX
(
bcou¡
, 1.0));

691 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

692 
	`Ârötf
(
fd
, "%s.overflows = %u\n",

693 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
ovîÊows
);

695 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

696 
	`Ârötf
(
fd
, "# %14s ", "index");

697 i‡(
pf
 & 
PF_COUNT
)

698 
	`Ârötf
(
fd
, "%10s ", "count");

699 i‡(
pf
 & 
PF_PDF
)

700 
	`Ârötf
(
fd
, "%6s ", "pdf");

701 i‡(
pf
 & 
PF_CDF
)

702 
	`Ârötf
(
fd
, "%6s ", "cdf");

703 
	`Ârötf
(
fd
, "\n");

705 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

707 i‡(
bcou¡
 > 0)

710 
bsum
 = 0.0;

711 
i
=0; i<
bcou¡
; i++)

713 
bsum
 +()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

714 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
)

716 
°©
->
v¨ü¡
.
f‹_di°
.
	`¥öt_‚
(stat,

717 
i
,

718 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

719 
bsum
,

720 
btŸÆ
);

724 i‡(
°©
->
f‹m©
 =
NULL
)

726 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

727 
	`Ârötf
(
fd
, "%-16†", 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
]);

729 
	`Ârötf
(
fd
, "%16u ",

730 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

731 i‡(
pf
 & 
PF_COUNT
)

732 
	`Ârötf
(
fd
, "%10u ", 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

733 i‡(
pf
 & 
PF_PDF
)

734 
	`Ârötf
(
fd
, "%6.2f ",

735 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

736 
	`MAX
(
btŸÆ
, 1.0) * 100.0);

737 i‡(
pf
 & 
PF_CDF
)

738 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

742 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

744 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

745 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

746 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
],

747 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

748 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

749 
	`MAX
(
btŸÆ
, 1.0) * 100.0,

750 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

752 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

753 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
,

754 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

755 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

756 
	`MAX
(
btŸÆ
, 1.0) * 100.0,

757 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

760 
	`Áèl
("distribution formatÇot yet implemented");

762 
	`Ârötf
(
fd
, "\n");

767 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

768 
	}
}

772 
	$¥öt_sdi°
(
°©_°©_t
 *
°©
,

773 
FILE
 *
fd
)

775 
i
, 
bcou¡
;

776 
md_addr_t
 
imax
, 
imö
;

777 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

778 
buckë_t
 *
buckë
;

779 
pf
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.pf;

782 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

783 
imax
 = 0; 
imö
 = 
UINT_MAX
;

784 
i
=0; i<
HTAB_SZ
; i++)

786 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

787 
buckë
 !
NULL
;

788 
buckë
 = buckë->
√xt
)

790 
bcou¡
++;

791 
btŸÆ
 +
buckë
->
cou¡
;

793 
bsqsum
 +(()
buckë
->
cou¡
 * ()bucket->count);

794 
bavg
 = 
btŸÆ
 / ()
bcou¡
;

795 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

796 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

797 i‡(
buckë
->
ödex
 < 
imö
)

798 
imö
 = 
buckë
->
ödex
;

799 i‡(
buckë
->
ödex
 > 
imax
)

800 
imax
 = 
buckë
->
ödex
;

805 
	`Ârötf
(
fd
, "\n");

806 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

807 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

808 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

809 i‡(
bcou¡
 > 0)

811 
	`myÂrötf
(
fd
, "%s.imö = 0x%p\n", 
°©
->
«me
, 
imö
);

812 
	`myÂrötf
(
fd
, "%s.imax = 0x%p\n", 
°©
->
«me
, 
imax
);

816 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

817 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

819 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
bcou¡
);

820 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

821 
	`Ârötf
(
fd
, "%s.ovîÊow†0\n", 
°©
->
«me
);

823 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

824 
	`Ârötf
(
fd
, "# %14s ", "index");

825 i‡(
pf
 & 
PF_COUNT
)

826 
	`Ârötf
(
fd
, "%10s ", "count");

827 i‡(
pf
 & 
PF_PDF
)

828 
	`Ârötf
(
fd
, "%6s ", "pdf");

829 i‡(
pf
 & 
PF_CDF
)

830 
	`Ârötf
(
fd
, "%6s ", "cdf");

831 
	`Ârötf
(
fd
, "\n");

833 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

835 i‡(
bcou¡
 > 0)

837 
bödex
;

838 
buckë_t
 **
b¨r
;

841 
b¨r
 = (
buckë_t
 **)
	`ˇŒoc
(
bcou¡
, (bucket_t *));

842 i‡(!
b¨r
)

843 
	`Áèl
("out of virtual memory");

844 
bödex
=0,
i
=0; i<
HTAB_SZ
; i++)

846 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

847 
buckë
 !
NULL
;

848 
buckë
 = buckë->
√xt
)

850 
b¨r
[
bödex
++] = 
buckë
;

855 
	`qs‹t
(
b¨r
, 
bcou¡
, (
buckë_t
 *), (*)
com∑ª_‚
);

858 
bsum
 = 0.0;

859 
i
=0; i<
bcou¡
; i++)

861 
bsum
 +()
b¨r
[
i
]->
cou¡
;

862 i‡(
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
)

864 
°©
->
v¨ü¡
.
f‹_sdi°
.
	`¥öt_‚
(stat,

865 
b¨r
[
i
]->
ödex
,

866 
b¨r
[
i
]->
cou¡
,

867 
bsum
,

868 
btŸÆ
);

872 i‡(
°©
->
f‹m©
 =
NULL
)

874 
	`myÂrötf
(
fd
, "0x%∞", 
b¨r
[
i
]->
ödex
);

875 i‡(
pf
 & 
PF_COUNT
)

876 
	`Ârötf
(
fd
, "%10u ", 
b¨r
[
i
]->
cou¡
);

877 i‡(
pf
 & 
PF_PDF
)

878 
	`Ârötf
(
fd
, "%6.2f ",

879 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

880 i‡(
pf
 & 
PF_CDF
)

881 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

885 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

887 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

888 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

889 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0)*100.0,

890 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

892 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
))

894 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

895 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

896 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0)*100.0);

898 i‡(
pf
 =
PF_COUNT
)

900 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

901 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
);

904 
	`Áèl
("distribution formatÇot yet implemented");

906 
	`Ârötf
(
fd
, "\n");

911 
	`‰ì
(
b¨r
);

914 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

915 
	}
}

919 
	$°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

920 
°©_°©_t
 *
°©
,

921 
FILE
 *
fd
)

923 
evÆ_vÆue_t
 
vÆ
;

925 
°©
->
sc
)

927 
sc_öt
:

928 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

929 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_öt
.
v¨
);

930 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

932 
sc_uöt
:

933 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

934 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_uöt
.
v¨
);

935 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

937 #ifde‡
HOST_HAS_QWORD


938 
sc_qw‹d
:

940 
buf
[128];

942 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

943 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_qw‹d
.
v¨
);

944 
	`Ârötf
(
fd
, "%†# %s", 
buf
, 
°©
->
desc
);

947 
sc_sqw‹d
:

949 
buf
[128];

951 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

952 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_sqw‹d
.
v¨
);

953 
	`Ârötf
(
fd
, "%†# %s", 
buf
, 
°©
->
desc
);

957 
sc_Êﬂt
:

958 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

959 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, ()*°©->
v¨ü¡
.
f‹_Êﬂt
.
v¨
);

960 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

962 
sc_doubÀ
:

963 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

964 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_doubÀ
.
v¨
);

965 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

967 
sc_di°
:

968 
	`¥öt_di°
(
°©
, 
fd
);

970 
sc_sdi°
:

971 
	`¥öt_sdi°
(
°©
, 
fd
);

973 
sc_f‹muœ
:

976 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

977 *
ídp
;

979 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

980 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

981 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

982 
	`Ârötf
(
fd
, "<îr‹: %s>", 
evÆ_îr_°r
[
evÆ_îr‹
]);

984 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, 
	`evÆ_as_doubÀ
(
vÆ
));

985 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

988 
	`evÆ_dñëe
(
es
);

992 
	`∑nic
("bogus stat class");

994 
	`Ârötf
(
fd
, "\n");

995 
	}
}

999 
	$°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

1000 
FILE
 *
fd
)

1002 
°©_°©_t
 *
°©
;

1004 i‡(!
sdb
)

1010 
°©
=
sdb
->
°©s
; sèà!
NULL
; sèt=°©->
√xt
)

1011 
	`°©_¥öt_°©
(
sdb
, 
°©
, 
fd
);

1012 
	}
}

1015 
°©_°©_t
 *

1016 
	$°©_föd_°©
(
°©_sdb_t
 *
sdb
,

1017 *
°©_«me
)

1019 
°©_°©_t
 *
°©
;

1021 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

1023 i‡(!
	`°rcmp
(
°©
->
«me
, 
°©_«me
))

1026  
°©
;

1027 
	}
}

1029 #ifde‡
TESTIT


1032 
	$maö
()

1034 
°©_sdb_t
 *
sdb
;

1035 
°©_°©_t
 *
°©
, *
°©1
, *
°©2
, *
°©3
, *
°©4
, *
°©5
;

1036 
™_öt
;

1037 
a_uöt
;

1038 
a_Êﬂt
;

1039 
a_doubÀ
;

1040 *
my_im≠
[8] = {

1045 
sdb
 = 
	`°©_√w
();

1048 
	`°©_ªg_öt
(
sdb
, "stat.an_int", "An integer stat variable.",

1049 &
™_öt
, 1, 
NULL
);

1050 
	`°©_ªg_uöt
(
sdb
, "stat.a_uint", "An unsigned integer stat variable.",

1051 &
a_uöt
, 2, "%u (unsigned)");

1052 
	`°©_ªg_Êﬂt
(
sdb
, "stat.a_float", "A float stat variable.",

1053 &
a_Êﬂt
, 3, 
NULL
);

1054 
	`°©_ªg_doubÀ
(
sdb
, "stat.a_double", "A double stat variable.",

1055 &
a_doubÀ
, 4, 
NULL
);

1056 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_formula", "A double stat formula.",

1057 "°©.a_Êﬂà/ sèt.a_uöt", 
NULL
);

1058 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_formula1", "A double stat formula #1.",

1059 "2 * (°©.a_f‹muœ / (1.5 * sèt.™_öt))", 
NULL
);

1060 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_bad_formula", "A double stat formula w/error.",

1061 "°©.a_Êﬂà/ (°©.a_uöà- 2)", 
NULL
);

1062 
°©
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist", "Anárray distribution.",

1063 0, 8, 1, 
PF_ALL
, 
NULL
, NULL, NULL);

1064 
°©1
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist1", "Anárray distribution #1.",

1065 0, 8, 4, 
PF_ALL
, 
NULL
, NULL, NULL);

1066 
°©2
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist2", "Anárray distribution #2.",

1067 0, 8, 1, (
PF_PDF
|
PF_CDF
), 
NULL
, NULL, NULL);

1068 
°©3
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist3", "Anárray distribution #3.",

1069 0, 8, 1, 
PF_ALL
, 
NULL
, 
my_im≠
, NULL);

1070 
°©4
 = 
	`°©_ªg_sdi°
(
sdb
, "stat.a_sdist", "A sparseárray distribution.",

1071 0, 
PF_ALL
, 
NULL
, NULL);

1072 
°©5
 = 
	`°©_ªg_sdi°
(
sdb
, "stat.a_sdist1",

1074 0, 
PF_ALL
, "0x%08lx %10lu %6.2f %6.2f",

1075 
NULL
);

1078 
	`Ârötf
(
°dout
, "** Initial stats...\n");

1079 
	`°©_¥öt_°©s
(
sdb
, 
°dout
);

1082 
™_öt
++;

1083 
a_uöt
++;

1084 
a_Êﬂt
 *= 2;

1085 
a_doubÀ
 *= 4;

1087 
	`°©_add_ßm∂e
(
°©
, 8);

1088 
	`°©_add_ßm∂e
(
°©
, 8);

1089 
	`°©_add_ßm∂e
(
°©
, 1);

1090 
	`°©_add_ßm∂e
(
°©
, 3);

1091 
	`°©_add_ßm∂e
(
°©
, 4);

1092 
	`°©_add_ßm∂e
(
°©
, 4);

1093 
	`°©_add_ßm∂e
(
°©
, 7);

1095 
	`°©_add_ßm∂e
(
°©1
, 32);

1096 
	`°©_add_ßm∂e
(
°©1
, 32);

1097 
	`°©_add_ßm∂e
(
°©1
, 1);

1098 
	`°©_add_ßm∂e
(
°©1
, 12);

1099 
	`°©_add_ßm∂e
(
°©1
, 17);

1100 
	`°©_add_ßm∂e
(
°©1
, 18);

1101 
	`°©_add_ßm∂e
(
°©1
, 30);

1103 
	`°©_add_ßm∂e
(
°©2
, 8);

1104 
	`°©_add_ßm∂e
(
°©2
, 8);

1105 
	`°©_add_ßm∂e
(
°©2
, 1);

1106 
	`°©_add_ßm∂e
(
°©2
, 3);

1107 
	`°©_add_ßm∂e
(
°©2
, 4);

1108 
	`°©_add_ßm∂e
(
°©2
, 4);

1109 
	`°©_add_ßm∂e
(
°©2
, 7);

1111 
	`°©_add_ßm∂e
(
°©3
, 8);

1112 
	`°©_add_ßm∂e
(
°©3
, 8);

1113 
	`°©_add_ßm∂e
(
°©3
, 1);

1114 
	`°©_add_ßm∂e
(
°©3
, 3);

1115 
	`°©_add_ßm∂e
(
°©3
, 4);

1116 
	`°©_add_ßm∂e
(
°©3
, 4);

1117 
	`°©_add_ßm∂e
(
°©3
, 7);

1119 
	`°©_add_ßm∂e
(
°©4
, 800);

1120 
	`°©_add_ßm∂e
(
°©4
, 800);

1121 
	`°©_add_ßm∂e
(
°©4
, 1123);

1122 
	`°©_add_ßm∂e
(
°©4
, 3332);

1123 
	`°©_add_ßm∂e
(
°©4
, 4000);

1124 
	`°©_add_ßm∂es
(
°©4
, 4001, 18);

1125 
	`°©_add_ßm∂e
(
°©4
, 7);

1127 
	`°©_add_ßm∂e
(
°©5
, 800);

1128 
	`°©_add_ßm∂e
(
°©5
, 800);

1129 
	`°©_add_ßm∂e
(
°©5
, 1123);

1130 
	`°©_add_ßm∂e
(
°©5
, 3332);

1131 
	`°©_add_ßm∂e
(
°©5
, 4000);

1132 
	`°©_add_ßm∂es
(
°©5
, 4001, 18);

1133 
	`°©_add_ßm∂e
(
°©5
, 7);

1136 
	`Ârötf
(
°dout
, "** Final stats...\n");

1137 
	`°©_¥öt_°©s
(
sdb
, 
°dout
);

1140 
	`°©_dñëe
(
sdb
);

1141 
	`exô
(0);

1142 
	}
}

	@stats.h

52 #i‚de‡
STAT_H


53 
	#STAT_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"machöe.h
"

59 
	~"evÆ.h
"

73 
	e°©_˛ass_t
 {

74 
	msc_öt
 = 0,

75 
	msc_uöt
,

76 #ifde‡
HOST_HAS_QWORD


77 
	msc_qw‹d
,

78 
	msc_sqw‹d
,

80 
	msc_Êﬂt
,

81 
	msc_doubÀ
,

82 
	msc_di°
,

83 
	msc_sdi°
,

84 
	msc_f‹muœ
,

85 
	msc_NUM


89 
	#HTAB_SZ
 1024

	)

90 
	#HTAB_HASH
(
I
Ë((((IË>> 8Ë^ (I)Ë& (
HTAB_SZ
 - 1))

	)

93 
	sbuckë_t
 {

94 
buckë_t
 *
	m√xt
;

95 
md_addr_t
 
	mödex
;

96 
	mcou¡
;

100 
	g°©_°©_t
;

103 
	#PF_COUNT
 0x0001

	)

104 
	#PF_PDF
 0x0002

	)

105 
	#PF_CDF
 0x0004

	)

106 
	#PF_ALL
 (
PF_COUNT
|
PF_PDF
|
PF_CDF
)

	)

112 (*
	t¥öt_‚_t
)(
	t°©_°©_t
 *
	t°©
,

113 
	tmd_addr_t
 
	tödex
,

114 
	tcou¡
,

115 
	tsum
,

116 
	ttŸÆ
);

119 
	s°©_°©_t
 {

120 
°©_°©_t
 *
	m√xt
;

121 *
	m«me
;

122 *
	mdesc
;

123 *
	mf‹m©
;

124 
°©_˛ass_t
 
	msc
;

125 
	u°©_v¨ü¡_t
 {

127 
	s°©_f‹_öt_t
 {

128 *
	mv¨
;

129 
	möô_vÆ
;

130 } 
	mf‹_öt
;

132 
	s°©_f‹_uöt_t
 {

133 *
	mv¨
;

134 
	möô_vÆ
;

135 } 
	mf‹_uöt
;

136 #ifde‡
HOST_HAS_QWORD


138 
	s°©_f‹_qw‹d_t
 {

139 
qw‹d_t
 *
	mv¨
;

140 
qw‹d_t
 
	möô_vÆ
;

141 } 
	mf‹_qw‹d
;

143 
	s°©_f‹_sqw‹d_t
 {

144 
sqw‹d_t
 *
	mv¨
;

145 
sqw‹d_t
 
	möô_vÆ
;

146 } 
	mf‹_sqw‹d
;

149 
	s°©_f‹_Êﬂt_t
 {

150 *
	mv¨
;

151 
	möô_vÆ
;

152 } 
	mf‹_Êﬂt
;

154 
	s°©_f‹_doubÀ_t
 {

155 *
	mv¨
;

156 
	möô_vÆ
;

157 } 
	mf‹_doubÀ
;

159 
	s°©_f‹_di°_t
 {

160 
	möô_vÆ
;

161 *
	m¨r
;

162 
	m¨r_sz
;

163 
	mbuckë_sz
;

164 
	mpf
;

165 **
	mim≠
;

166 
¥öt_‚_t
 
	m¥öt_‚
;

167 
	movîÊows
;

168 } 
	mf‹_di°
;

170 
	s°©_f‹_sdi°_t
 {

171 
	möô_vÆ
;

172 
buckë_t
 **
	mßº
;

173 
	mpf
;

174 
¥öt_‚_t
 
	m¥öt_‚
;

175 } 
	mf‹_sdi°
;

177 
	s°©_f‹_f‹muœ_t
 {

178 *
	mf‹muœ
;

179 } 
	mf‹_f‹muœ
;

180 } 
	mv¨ü¡
;

184 
	s°©_sdb_t
 {

185 
°©_°©_t
 *
	m°©s
;

186 
evÆ_°©e_t
 *
	mevÆu©‹
;

190 
evÆ_vÆue_t


191 
°©_evÆ_idít
(
evÆ_°©e_t
 *
es
);

194 
°©_sdb_t
 *
°©_√w
();

198 
°©_dñëe
(
°©_sdb_t
 *
sdb
);

201 
°©_°©_t
 *

202 
°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

203 *
«me
,

204 *
desc
,

205 *
v¨
,

206 
öô_vÆ
,

207 *
f‹m©
);

210 
°©_°©_t
 *

211 
°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

212 *
«me
,

213 *
desc
,

214 *
v¨
,

215 
öô_vÆ
,

216 *
f‹m©
);

218 #ifde‡
HOST_HAS_QWORD


220 
°©_°©_t
 *

221 
°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

222 *
«me
,

223 *
desc
,

224 
qw‹d_t
 *
v¨
,

225 
qw‹d_t
 
öô_vÆ
,

226 *
f‹m©
);

229 
°©_°©_t
 *

230 
°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

231 *
«me
,

232 *
desc
,

233 
sqw‹d_t
 *
v¨
,

234 
sqw‹d_t
 
öô_vÆ
,

235 *
f‹m©
);

239 
°©_°©_t
 *

240 
°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

241 *
«me
,

242 *
desc
,

243 *
v¨
,

244 
öô_vÆ
,

245 *
f‹m©
);

248 
°©_°©_t
 *

249 
°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

250 *
«me
,

251 *
desc
,

252 *
v¨
,

253 
öô_vÆ
,

254 *
f‹m©
);

262 
°©_°©_t
 *

263 
°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

264 *
«me
,

265 *
desc
,

266 
öô_vÆ
,

267 
¨r_sz
,

268 
buckë_sz
,

269 
pf
,

270 *
f‹m©
,

271 **
im≠
,

272 
¥öt_‚_t
 
¥öt_‚
);

281 
°©_°©_t
 *

282 
°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

283 *
«me
,

284 *
desc
,

285 
öô_vÆ
,

286 
pf
,

287 *
f‹m©
,

288 
¥öt_‚_t
 
¥öt_‚
);

292 
°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

293 
md_addr_t
 
ödex
,

294 
nßm∂es
);

298 
°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

299 
md_addr_t
 
ödex
);

308 
°©_°©_t
 *

309 
°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

310 *
«me
,

311 *
desc
,

312 *
f‹muœ
,

313 *
f‹m©
);

317 
°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

318 
°©_°©_t
 *
°©
,

319 
FILE
 *
fd
);

323 
°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

324 
FILE
 *
fd
);

328 
°©_°©_t
 *

329 
°©_föd_°©
(
°©_sdb_t
 *
sdb
,

330 *
°©_«me
);

	@symbol.h

52 #i‚de‡
SYMBOL_H


53 
	#SYMBOL_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

61 
	esym_£g_t
 {

62 
	mss_d©a
,

63 
	mss_ãxt
,

64 
	mss_NUM


68 
	ssym_sym_t
 {

69 *
	m«me
;

70 
sym_£g_t
 
	m£g
;

71 
	möôülized
;

72 
	mpub
;

73 
	mloˇl
;

74 
md_addr_t
 
	maddr
;

75 
	msize
;

79 
sym_sym_t
 *
sym_db
;

82 
sym_nsyms
;

83 
sym_sym_t
 **
sym_syms
;

86 
sym_sym_t
 **
sym_syms_by_«me
;

89 
sym_¡extsyms
;

90 
sym_sym_t
 **
sym_ãxtsyms
;

93 
sym_sym_t
 **
sym_ãxtsyms_by_«me
;

96 
sym_nd©asyms
;

97 
sym_sym_t
 **
sym_d©asyms
;

100 
sym_sym_t
 **
sym_d©asyms_by_«me
;

104 
sym_lﬂdsyms
(*
‚ame
,

105 
lﬂd_loˇls
);

109 
sym_dumpsym
(
sym_sym_t
 *
sym
,

110 
FILE
 *
fd
);

114 
sym_dumpsyms
(
FILE
 *
fd
);

118 
sym_dump°©e
(
FILE
 *
fd
);

121 
	esym_db_t
 {

122 
	msdb_™y
,

123 
	msdb_ãxt
,

124 
	msdb_d©a
,

125 
	msdb_NUM


132 
sym_sym_t
 *

133 
sym_böd_addr
(
md_addr_t
 
addr
,

134 *
pödex
,

135 
exa˘
,

136 
sym_db_t
 
db
);

141 
sym_sym_t
 *

142 
sym_böd_«me
(*
«me
,

143 *
pödex
,

144 
sym_db_t
 
db
);

	@syscall.h

52 #i‚de‡
SYSCALL_H


53 
	#SYSCALL_H


	)

55 
	~<sys/ty≥s.h
>

56 #ifde‡
_MSC_VER


57 
	~<time.h
>

59 
	~<sys/time.h
>

62 
	~"ho°.h
"

63 
	~"misc.h
"

64 
	~"machöe.h
"

93 
sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

94 
mem_ac˚ss_‚
 
mem_‚
,

95 
mem_t
 *
mem
,

96 
md_ö°_t
 
ö°
,

97 
åa˚abÀ
);

	@sysprobe.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #i‚de‡
_MSC_VER


55 
	~<uni°d.h
>

57 
	#ac˚ss
 
_ac˚ss


	)

58 
	#X_OK
 4

	)

61 
	~"ho°.h
"

62 
	~"misc.h
"

64 *
	ggzù_∑ths
[] =

72 
NULL


75 
	#HOST_ONLY


	)

76 
	~"ídün.c
"

78 
	#CAT
(
a
,
b
Ë®
	)
b

80 
	#MSB
 0x80000000

	)

82 
	$Á°_SRL
()

84 
w‹d_t
 
ui
;

86 i‡((
ui
) != 4)

89  
FALSE
;

92 
ui
 = (
w‹d_t
)
MSB
;

93 i‡(((
ui
 >> 1Ë& 
MSB
) != 0)

96  
FALSE
;

101  
TRUE
;

103 
	}
}

106 
	$Á°_SRA
()

108 
sw‹d_t
 
si
;

110 i‡((
si
) != 4)

113  
FALSE
;

116 
si
 = (
sw‹d_t
)
MSB
;

117 i‡((
si
 >> 1Ë& 
MSB
)

120  
TRUE
;

125  
FALSE
;

127 
	}
}

130 
	$maö
(
¨gc
, **
¨gv
)

132 
lôée_byãs
 = 0, 
lôée_w‹ds
 = 0;

134 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-s"))

136 
	`ídün_ho°_byã_‹dî
())

138 
ídün_big
:

139 
	`Ârötf
(
°dout
, "big\n");

141 
ídün_lôée
:

142 
	`Ârötf
(
°dout
, "little\n");

144 
ídün_unknown
:

145 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

146 
	`exô
(1);

148 
	`ab‹t
();

151 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-libs"))

153 #ifde‡
BFD_LOADER


154 
	`Ârötf
(
°dout
, "-lbfd -liberty ");

157 #ifde‡
löux


159 #ñi‡
	`deföed
(
__USLC__
Ë|| (deföed(
__svr4__
Ë&& deföed(
__i386__
Ë&& deföed(
__unix__
))

160 
	`Ârötf
(
°dout
, "-L/usr/ucblib -lucb ");

164 
	`Ârötf
(
°dout
, " \n");

166 i‡(
¨gc
 =1 || (¨g¯=2 && !
	`°rcmp
(
¨gv
[1], "-flags")))

168 
	`ídün_ho°_byã_‹dî
())

170 
ídün_big
:

171 
	`Ârötf
(
°dout
, "-DBYTES_BIG_ENDIAN ");

173 
ídün_lôée
:

174 
	`Ârötf
(
°dout
, "-DBYTES_LITTLE_ENDIAN ");

175 
lôée_byãs
 = 1;

177 
ídün_unknown
:

178 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

179 
	`exô
(1);

181 
	`ab‹t
();

184 
	`ídün_ho°_w‹d_‹dî
())

186 
ídün_big
:

187 
	`Ârötf
(
°dout
, "-DWORDS_BIG_ENDIAN ");

189 
ídün_lôée
:

190 
	`Ârötf
(
°dout
, "-DWORDS_LITTLE_ENDIAN ");

191 
lôée_w‹ds
 = 1;

193 
ídün_unknown
:

194 
	`Ârötf
(
°dîr
, "\nerror: cannot determine word order!\n");

195 
	`exô
(1);

197 
	`ab‹t
();

200 #ifde‡
_AIX


201 
	`Ârötf
(
°dout
, "-D_ALL_SOURCE ");

204 #i‡(
	`deföed
(
hpux
Ë|| deföed(
__hpux
)Ë&& !deföed(
__GNUC__
)

205 
	`Ârötf
(
°dout
, "-D_INCLUDE_HPUX_SOURCE -D_INCLUDE_XOPEN_SOURCE -D_INCLUDE_AES_SOURCE ");

208 #i‚de‡
__GNUC__


212 
i
 = 5, 
j
;

214 
j
 = 
	`CAT
(-,-
i
);

216 i‡(
j
 == 4)

219 
	`Ârötf
(
°dout
, "-DOLD_SYMCAT ");

221 i‡(
j
 == 5)

230 
	`Ârötf
(
°dîr
, "\nerror: cannot grok symbol concat method!\n");

231 
	`exô
(1);

236 #i‚de‡
SLOW_SHIFTS


238 i‡(
	`Á°_SRL
())

239 
	`Ârötf
(
°dout
, "-DFAST_SRL ");

240 i‡(
	`Á°_SRA
())

241 
	`Ârötf
(
°dout
, "-DFAST_SRA ");

245 #i‚de‡
GZIP_PATH


247 
i
;

249 
i
=0; 
gzù_∑ths
[i] !
NULL
; i++)

251 i‡(
	`ac˚ss
(
gzù_∑ths
[
i
], 
X_OK
) == 0)

253 
	`Ârötf
(
°dout
, "-DGZIP_PATH=\"%s\" ", 
gzù_∑ths
[
i
]);

261 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-t"))

263 
	`Ârötf
(
°dout
, "sizeof(int) = %d\n", ());

264 
	`Ârötf
(
°dout
, "sizeof(long) = %d\n", ());

269 i‡(
lôée_byãs
 !
lôée_w‹ds
)

271 
	`Ârötf
(
°dîr
,

273 
	`exô
(1);

275 
	`exô
(0);

277 
	}
}

	@target-alpha/alpha.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

63 #i‡!
deföed
(
BYTES_LITTLE_ENDIAN
Ë|| !deföed(
WORDS_LITTLE_ENDIAN
)

64 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
lôée
-
ídün
 
machöes
...

69 #i‡!
deföed
(
HOST_HAS_QWORD
)

70 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
ho°s
 
wôh
 
buûtö
 
qw‹d
 
suµ‹t
...

71 #îr‹ 
Try
 
buûdög
 
wôh
 
GNU
 
GCC
, 
as
 
ô
 
suµ‹ts
 
qw‹ds
 
⁄
 
mo°
 
machöes
.

75 
md_ö°_t
 
	gMD_NOP_INST
 = 0x43ff041f;

78 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

79 
	gmd_›off£t
[
OP_MAX
];

82 
	gmd_›mask
[
OP_MAX
] = {

84 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

85 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËMASK,

	)

86 
	#CONNECT
(
OP
)

	)

87 
	~"machöe.def
"

91 
	gmd_›shi·
[
OP_MAX
] = {

93 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

94 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËSHIFT,

	)

95 
	#CONNECT
(
OP
)

	)

96 
	~"machöe.def
"

100 *
	gmd_›2«me
[
OP_MAX
] = {

101 
NULL
,

102 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

103 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

104 
	#CONNECT
(
OP
)

	)

105 
	~"machöe.def
"

109 *
	gmd_›2f‹m©
[
OP_MAX
] = {

110 
NULL
,

111 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

112 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

113 
	#CONNECT
(
OP
)

	)

114 
	~"machöe.def
"

118 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

119 
FUCœmd_NA
,

120 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

121 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœmd_NA
,

	)

122 
	#CONNECT
(
OP
)

	)

123 
	~"machöe.def
"

127 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

128 
NULL
,

142 *
	gmd_amode_°r
[
md_amode_NUM
] =

153 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

158 { "$r0", 
π_g¥
, 0 },

159 { "$v0", 
π_g¥
, 0 },

160 { "$r1", 
π_g¥
, 1 },

161 { "$r2", 
π_g¥
, 2 },

162 { "$r3", 
π_g¥
, 3 },

163 { "$r4", 
π_g¥
, 4 },

164 { "$r5", 
π_g¥
, 5 },

165 { "$r6", 
π_g¥
, 6 },

166 { "$r7", 
π_g¥
, 7 },

167 { "$îr", 
π_g¥
, 7 },

168 { "$r8", 
π_g¥
, 8 },

169 { "$r9", 
π_g¥
, 9 },

170 { "$r10", 
π_g¥
, 10 },

171 { "$r11", 
π_g¥
, 11 },

172 { "$r12", 
π_g¥
, 12 },

173 { "$r13", 
π_g¥
, 13 },

174 { "$r14", 
π_g¥
, 14 },

175 { "$r15", 
π_g¥
, 15 },

176 { "$Â", 
π_g¥
, 15 },

177 { "$r16", 
π_g¥
, 16 },

178 { "$a0", 
π_g¥
, 16 },

179 { "$r17", 
π_g¥
, 17 },

180 { "$a1", 
π_g¥
, 17 },

181 { "$r18", 
π_g¥
, 18 },

182 { "$a2", 
π_g¥
, 18 },

183 { "$r19", 
π_g¥
, 19 },

184 { "$a3", 
π_g¥
, 19 },

185 { "$r20", 
π_g¥
, 20 },

186 { "$a4", 
π_g¥
, 20 },

187 { "$r21", 
π_g¥
, 21 },

188 { "$a5", 
π_g¥
, 21 },

189 { "$r22", 
π_g¥
, 22 },

190 { "$r23", 
π_g¥
, 23 },

191 { "$r24", 
π_g¥
, 24 },

192 { "$r25", 
π_g¥
, 25 },

193 { "$r26", 
π_g¥
, 26 },

194 { "$ø", 
π_g¥
, 26 },

195 { "$r27", 
π_g¥
, 27 },

196 { "$r28", 
π_g¥
, 28 },

197 { "$r29", 
π_g¥
, 29 },

198 { "$gp", 
π_g¥
, 29 },

199 { "$r30", 
π_g¥
, 30 },

200 { "$•", 
π_g¥
, 30 },

201 { "$r31", 
π_g¥
, 31 },

202 { "$zîo", 
π_g¥
, 31 },

205 { "$f0", 
π_Âr
, 0 },

206 { "$f1", 
π_Âr
, 1 },

207 { "$f2", 
π_Âr
, 2 },

208 { "$f3", 
π_Âr
, 3 },

209 { "$f4", 
π_Âr
, 4 },

210 { "$f5", 
π_Âr
, 5 },

211 { "$f6", 
π_Âr
, 6 },

212 { "$f7", 
π_Âr
, 7 },

213 { "$f8", 
π_Âr
, 8 },

214 { "$f9", 
π_Âr
, 9 },

215 { "$f10", 
π_Âr
, 10 },

216 { "$f11", 
π_Âr
, 11 },

217 { "$f12", 
π_Âr
, 12 },

218 { "$f13", 
π_Âr
, 13 },

219 { "$f14", 
π_Âr
, 14 },

220 { "$f15", 
π_Âr
, 15 },

221 { "$f16", 
π_Âr
, 16 },

222 { "$f17", 
π_Âr
, 17 },

223 { "$f18", 
π_Âr
, 18 },

224 { "$f19", 
π_Âr
, 19 },

225 { "$f20", 
π_Âr
, 20 },

226 { "$f21", 
π_Âr
, 21 },

227 { "$f22", 
π_Âr
, 22 },

228 { "$f23", 
π_Âr
, 23 },

229 { "$f24", 
π_Âr
, 24 },

230 { "$f25", 
π_Âr
, 25 },

231 { "$f26", 
π_Âr
, 26 },

232 { "$f27", 
π_Âr
, 27 },

233 { "$f28", 
π_Âr
, 28 },

234 { "$f29", 
π_Âr
, 29 },

235 { "$f30", 
π_Âr
, 30 },

236 { "$f31", 
π_Âr
, 31 },

239 { "$l0", 
π_Õr
, 0 },

240 { "$l1", 
π_Õr
, 1 },

241 { "$l2", 
π_Õr
, 2 },

242 { "$l3", 
π_Õr
, 3 },

243 { "$l4", 
π_Õr
, 4 },

244 { "$l5", 
π_Õr
, 5 },

245 { "$l6", 
π_Õr
, 6 },

246 { "$l7", 
π_Õr
, 7 },

247 { "$l8", 
π_Õr
, 8 },

248 { "$l9", 
π_Õr
, 9 },

249 { "$l10", 
π_Õr
, 10 },

250 { "$l11", 
π_Õr
, 11 },

251 { "$l12", 
π_Õr
, 12 },

252 { "$l13", 
π_Õr
, 13 },

253 { "$l14", 
π_Õr
, 14 },

254 { "$l15", 
π_Õr
, 15 },

255 { "$l16", 
π_Õr
, 16 },

256 { "$l17", 
π_Õr
, 17 },

257 { "$l18", 
π_Õr
, 18 },

258 { "$l19", 
π_Õr
, 19 },

259 { "$l20", 
π_Õr
, 20 },

260 { "$l21", 
π_Õr
, 21 },

261 { "$l22", 
π_Õr
, 22 },

262 { "$l23", 
π_Õr
, 23 },

263 { "$l24", 
π_Õr
, 24 },

264 { "$l25", 
π_Õr
, 25 },

265 { "$l26", 
π_Õr
, 26 },

266 { "$l27", 
π_Õr
, 27 },

267 { "$l28", 
π_Õr
, 28 },

268 { "$l29", 
π_Õr
, 29 },

269 { "$l30", 
π_Õr
, 30 },

270 { "$l31", 
π_Õr
, 31 },

273 { "$Â¸", 
π_˘æ
, 0 },

274 { "$uniq", 
π_˘æ
, 1 },

277 { "$pc", 
π_PC
, 0 },

278 { "$≈c", 
π_NPC
, 0 },

281 { 
NULL
, 
π_g¥
, 0 }

286 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

288 
i
;

290 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

292 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

293  
md_ªg_«mes
[
i
].
°r
;

297  
NULL
;

298 
	}
}

301 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

302 
is_wrôe
,

303 
md_ªg_ty≥
 
π
,

304 
ªg
,

305 
evÆ_vÆue_t
 *
vÆ
)

307 
π
)

309 
π_g¥
:

310 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

313 i‡(!
is_wrôe
)

315 
vÆ
->
ty≥
 = 
ë_qw‹d
;

316 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_R
[
ªg
];

319 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

322 
π_Õr
:

323 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

326 i‡(!
is_wrôe
)

328 
vÆ
->
ty≥
 = 
ë_qw‹d
;

329 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_F
.
q
[
ªg
];

332 
ªgs
->
ªgs_F
.
q
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

335 
π_Âr
:

336 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

339 i‡(!
is_wrôe
)

341 
vÆ
->
ty≥
 = 
ë_doubÀ
;

342 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

345 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

348 
π_˘æ
:

349 
ªg
)

352 i‡(!
is_wrôe
)

354 
vÆ
->
ty≥
 = 
ë_qw‹d
;

355 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
Â¸
;

358 
ªgs
->
ªgs_C
.
Â¸
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

362 i‡(!
is_wrôe
)

364 
vÆ
->
ty≥
 = 
ë_qw‹d
;

365 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
uniq
;

368 
ªgs
->
ªgs_C
.
uniq
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

376 
π_PC
:

377 i‡(!
is_wrôe
)

379 
vÆ
->
ty≥
 = 
ë_addr
;

380 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

383 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

386 
π_NPC
:

387 i‡(!
is_wrôe
)

389 
vÆ
->
ty≥
 = 
ë_addr
;

390 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

393 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

397 
	`∑nic
("bogusÑegister bank");

401  
NULL
;

402 
	}
}

406 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

408 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx",

409 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

410 
	}
}

413 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

415 
i
;

417 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

419 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

420 
	`Ârötf
(
°ªam
, " ");

421 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

422 
	`Ârötf
(
°ªam
, "\n");

424 
	}
}

428 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

430 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx/%f",

431 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
q
[ªg],Ñegs.q[ªg],Ñegs.
d
[reg]);

432 
	}
}

435 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

437 
i
;

440 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

442 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

443 
	`Ârötf
(
°ªam
, "\n");

445 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

446 
	`Ârötf
(
°ªam
, "\n");

448 
	}
}

451 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

454 
ªg
)

457 
	`myÂrötf
(
°ªam
, "FPCR: 0x%012lx", 
ªgs
.
Â¸
);

461 
	`myÂrötf
(
°ªam
, "UNIQ: 0x%012lx", 
ªgs
.
uniq
);

465 
	`∑nic
("bogus controlÑegister index");

467 
	}
}

470 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

472 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

473 
	`Ârötf
(
°ªam
, " ");

474 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

476 
	}
}

479 
w‹d_t


480 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

482 
i
;

483 
qw‹d_t
 
checksum
 = 0;

485 
i
=0; i < (
MD_NUM_IREGS
-1); i++)

486 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

488 
i
=0; i < (
MD_NUM_FREGS
-1); i++)

489 
checksum
 ^
ªgs
->
ªgs_F
.
q
[
i
];

491 
checksum
 ^
ªgs
->
ªgs_C
.
Â¸
;

492 
checksum
 ^
ªgs
->
ªgs_C
.
uniq
;

493 
checksum
 ^
ªgs
->
ªgs_PC
;

494 
checksum
 ^
ªgs
->
ªgs_NPC
;

496  (
w‹d_t
)((
checksum
 >> 32) ^ checksum);

497 
	}
}

501 
	gmd_›2Êags
[
OP_MAX
] = {

502 
NA
,

503 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

504 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

505 
	#CONNECT
(
OP
)

	)

506 
	~"machöe.def
"

512 
	$md_öô_decodî
()

514 
max_off£t
 = 0;

515 
off£t
 = 0;

517 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

518 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

519 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

520 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

521 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

522 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

524 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

525 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

526 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

527 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

528 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

529 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

531 
	#CONNECT
(
OP
) \

532 
off£t
 = 
max_off£t
+1; 
md_›off£t
[
OP
] = off£t;

	)

534 
	~"machöe.def
"

536 i‡(
max_off£t
 >
MD_MAX_MASK
)

537 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", 
max_off£t
);

538 
	}
}

542 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

543 
md_addr_t
 
pc
,

544 
FILE
 *
°ªam
)

546 
md_›code
 
›
;

549 i‡(!
°ªam
)

550 
°ªam
 = 
°dîr
;

553 
	`MD_SET_OPCODE
(
›
, 
ö°
);

556 i‡(
›
 <
OP_NA
 || o∞>
OP_MAX
)

559 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x>", 
ö°
);

563 *
s
;

566 
	`Ârötf
(
°ªam
, "%†", 
	`MD_OP_NAME
(
›
));

568 
s
 = 
	`MD_OP_FORMAT
(
›
);

569 *
s
) {

570 *
s
) {

572 
	`Ârötf
(
°ªam
, "r%d", 
RA
);

575 
	`Ârötf
(
°ªam
, "r%d", 
RB
);

578 
	`Ârötf
(
°ªam
, "r%d", 
RC
);

581 
	`Ârötf
(
°ªam
, "f%d", 
RA
);

584 
	`Ârötf
(
°ªam
, "f%d", 
RB
);

587 
	`Ârötf
(
°ªam
, "f%d", 
RC
);

590 
	`Ârötf
(
°ªam
, "%d", (
sw‹d_t
)
	`SEXT
(
OFS
));

593 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT
(
OFS
) << 2) + 4);

596 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT21
(
TARG
) << 2) + 4);

599 
	`Ârötf
(
°ªam
, "%d", (
w‹d_t
)
IMM
);

603 
	`Âutc
(*
s
, 
°ªam
);

605 
s
++;

608 
	}
}

	@target-alpha/alpha.h

52 #i‚de‡
ALPHA_H


53 
	#ALPHA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

69 
	#TARGET_ALPHA


	)

72 #i‡
deföed
(
BYTES_BIG_ENDIAN
)

73 
	#MD_CROSS_ENDIAN


	)

77 
	#NA
 0

	)

84 
	#MD_QWORD_ADDRS


	)

87 
qw‹d_t
 
	tmd_addr_t
;

95 
	#MD_PAGE_SIZE
 8192

	)

96 
	#MD_LOG_PAGE_SIZE
 13

	)

103 
	emd_Áu…_ty≥
 {

104 
	mmd_Áu…_n⁄e
 = 0,

105 
	mmd_Áu…_ac˚ss
,

106 
	mmd_Áu…_Æignmít
,

107 
	mmd_Áu…_ovîÊow
,

108 
	mmd_Áu…_div0
,

109 
	mmd_Áu…_övÆid
,

111 
	mmd_Áu…_bªak
,

112 
	mmd_Áu…_unim∂
,

113 
	mmd_Áu…_öã∫Æ


122 
	#MD_NUM_IREGS
 32

	)

125 
	#MD_NUM_FREGS
 32

	)

128 
	#MD_NUM_CREGS
 2

	)

131 
	#MD_TOTAL_REGS
 \

132 –32 + 32 + 2 + 1 + 1 + 1)

	)

135 
qw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

139 
qw‹d_t
 
	mq
[
MD_NUM_FREGS
];

140 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
];

141 } 
	tmd_Âr_t
;

145 
qw‹d_t
 
	mÂ¸
;

146 
qw‹d_t
 
	muniq
;

147 } 
	tmd_˘æ_t
;

150 
	emd_ªg_«mes
 {

151 
	mMD_REG_V0
 = 0,

152 
	mMD_REG_ERR
 = 7,

153 
	mMD_REG_FP
 = 15,

154 
	mMD_REG_A0
 = 16,

155 
	mMD_REG_A1
 = 17,

156 
	mMD_REG_A2
 = 18,

157 
	mMD_REG_A3
 = 19,

158 
	mMD_REG_A4
 = 20,

159 
	mMD_REG_A5
 = 21,

160 
	mMD_REG_RA
 = 26,

161 
	mMD_REG_GP
 = 29,

162 
	mMD_REG_SP
 = 30,

163 
	mMD_REG_ZERO
 = 31

172 
w‹d_t
 
	tmd_ö°_t
;

175 
md_ö°_t
 
MD_NOP_INST
;

178 #ifde‡
MD_CROSS_ENDIAN


180 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

181 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

182 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

183 
	#MD_SWAPI
(
X
Ë
	`SWAP_WORD
(X)

	)

187 
	#MD_SWAPH
(
X
Ë(X)

	)

188 
	#MD_SWAPW
(
X
Ë(X)

	)

189 
	#MD_SWAPQ
(
X
Ë(X)

	)

190 
	#MD_SWAPD
(
X
Ë(X)

	)

191 
	#MD_SWAPI
(
X
Ë(X)

	)

196 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

197 { (
INST
Ë
	`MEM_READ_WORD
((
MEM
), (
PC
)); }

	)

204 
	#MD_MAX_ENVIRON
 16384

	)

212 
	#MD_TOP_OP
(
INST
Ë(((INSTË>> 26Ë& 0x3f)

	)

213 
	#MD_SET_OPCODE
(
OP
, 
INST
) \

214 { 
OP
 = 
md_mask2›
[
	`MD_TOP_OP
(
INST
)]; \

215 
md_›mask
[
OP
]) \

216 
OP
 = 
md_mask2›
[((
INST
 >> 
md_›shi·
[OP]Ë& 
md_›mask
[OP]) \

217 + 
md_›off£t
[
OP
]]; }

	)

221 
	#MD_MAX_MASK
 2048

	)

224 
	emd_›code
 {

225 
	mOP_NA
 = 0,

226 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

227 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

228 
	#CONNECT
(
OP
)

	)

229 
	~"machöe.def
"

230 
	mOP_MAX


234 
md_›code
 
md_mask2›
[];

235 
md_›off£t
[];

236 
md_›mask
[];

237 
md_›shi·
[];

240 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

241 *
md_›2«me
[];

244 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

245 *
md_›2f‹m©
[];

248 
	emd_fu_˛ass
 {

249 
	mFUCœmd_NA
 = 0,

250 
	mI¡ALU
,

251 
	mI¡MULT
,

252 
	mI¡DIV
,

253 
	mFlﬂtADD
,

254 
	mFlﬂtCMP
,

255 
	mFlﬂtCVT
,

256 
	mFlﬂtMULT
,

257 
	mFlﬂtDIV
,

258 
	mFlﬂtSQRT
,

259 
	mRdP‹t
,

260 
	mWrP‹t
,

261 
	mNUM_FU_CLASSES


265 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

266 
md_fu_˛ass
 
md_›2fu
[];

269 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

270 *
md_fu2«me
[];

273 
	#F_ICOMP
 0x00000001

	)

274 
	#F_FCOMP
 0x00000002

	)

275 
	#F_CTRL
 0x00000004

	)

276 
	#F_UNCOND
 0x00000008

	)

277 
	#F_COND
 0x00000010

	)

278 
	#F_MEM
 0x00000020

	)

279 
	#F_LOAD
 0x00000040

	)

280 
	#F_STORE
 0x00000080

	)

281 
	#F_DISP
 0x00000100

	)

282 
	#F_RR
 0x00000200

	)

283 
	#F_DIRECT
 0x00000400

	)

284 
	#F_TRAP
 0x00000800

	)

285 
	#F_LONGLAT
 0x00001000

	)

286 
	#F_DIRJMP
 0x00002000

	)

287 
	#F_INDIRJMP
 0x00004000

	)

288 
	#F_CALL
 0x00008000

	)

289 
	#F_FPCOND
 0x00010000

	)

290 
	#F_IMM
 0x00020000

	)

293 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

294 
md_›2Êags
[];

298 
	#RA
 ((
ö°
 >> 21Ë& 0x1fË

	)

299 
	#RB
 ((
ö°
 >> 16Ë& 0x1fË

	)

300 
	#RC
 (
ö°
 & 0x1fË

	)

303 
	#IMM
 ((
qw‹d_t
)((
ö°
 >> 13Ë& 0xff))

	)

306 
	#TARG
 (
ö°
 & 0x1fffff)

	)

309 
	#OFS
 (
ö°
 & 0xffff)

	)

312 
	#SEXT
(
X
) \

313 (((
X
Ë& 0x8000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xffffffffffff0000)Ë: (sqw‹d_t)(X))

	)

315 
	#SEXT21
(
X
) \

316 (((
X
Ë& 0x100000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xfffffffff„00000)Ë: (sqw‹d_t)(X))

	)

318 
	#SEXT32
(
X
) \

319 (((
X
Ë& 0x80000000Ë? ((
sqw‹d_t
)(X)|
	`LL
(0xffffffff00000000)Ë: (sqw‹d_t)(X))

	)

322 
	#ARITH_OVFL
(
RESULT
, 
OP1
, 
OP2
Ë((RESULTË< (OP1Ë|| (RESULTË< (OP2))

	)

325 
	#IEEEFP_DBL_SIGN
(
Q
Ë((QË>> 63)

	)

326 
	#IEEEFP_DBL_EXPONENT
(
Q
Ë(((QË>> 52Ë& 0x7ff)

	)

327 
	#IEEEFP_DBL_FRACTION
(
Q
Ë((QË& 
	`ULL
(0xfffffffffffff))

	)

328 
	#IS_IEEEFP_DBL_NAN
(
Q
) \

329 ((
	`IEEEFP_DBL_EXPONENT
(
Q
Ë=0x7ffË&& (
	`IEEEFP_DBL_FRACTION
(Q)))

	)

332 #i‚de‡
SET_TPC


333 
	#SET_TPC
(
PC
Ë()0

	)

342 
	#OSF_SYS_exô
 1

	)

343 
	#MD_EXIT_SYSCALL
(
REGS
) \

344 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_exô
)

	)

347 
	#OSF_SYS_wrôe
 4

	)

348 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

349 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_wrôe
 \

350 && ((
REGS
)->
ªgs_R
[
MD_REG_A0
] == 1 \

351 || (
REGS
)->
ªgs_R
[
MD_REG_A0
] = 2))

	)

354 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[
MD_REG_A0
])

	)

357 
	#MD_IS_CALL
(
OP
Ë((OPË=
JSR
 || (OPË=
BSR
)

	)

360 
	#MD_IS_RETURN
(
OP
Ë((OPË=
RETN
)

	)

363 
	#MD_IS_INDIR
(
OP
) \

364 ((
OP
Ë=
JMP
 || (OPË=
JSR
 || (OPË=
RETN
 || (OPË=
JSR_COROUTINE
)

	)

367 
	emd_amode_ty≥
 {

368 
	mmd_amode_imm
,

369 
	mmd_amode_gp
,

370 
	mmd_amode_•
,

371 
	mmd_amode_Â
,

372 
	mmd_amode_di•
,

373 
	mmd_amode_º
,

374 
	mmd_amode_NUM


376 *
md_amode_°r
[
md_amode_NUM
];

379 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
Ë{ (FSMË0; }

	)

382 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

384 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

386 i‡((
RB
Ë=
MD_REG_GP
) \

387 (
AM
Ë
md_amode_gp
; \

388 i‡((
RB
Ë=
MD_REG_SP
) \

389 (
AM
Ë
md_amode_•
; \

390 i‡((
RB
Ë=
MD_REG_FP
) \

391 (
AM
Ë
md_amode_Â
; \

393 (
AM
Ë
md_amode_di•
; \

395 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

396 (
AM
Ë
md_amode_º
; \

398 
	`∑nic
("cannot decodeáddressing mode"); \

399 }

	)

402 
	#MD_AMODE_POSTPROBE
(
FSM
Ë

	)

410 
	#MD_EIO_FILE_FORMAT
 
EIO_ALPHA_FORMAT


	)

412 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

413 
	`exo_√w
(
ec_li°
, \

414  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

415  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

416  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

417  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
Â¸
),\

418  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
uniq
),\

419 
NULL
)

	)

421 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

422 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

424 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

425 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
q
[
IDX
])

	)

427 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

429 i‡(!
exo
 \

430 || 
exo
->
ec
 !
ec_li°
 \

431 || !
exo
->
as_li°
.
hód
 \

432 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

433 || !
exo
->
as_li°
.
hód
->
√xt
 \

434 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

435 || !
exo
->
as_li°
.
hód
->
√xt
->next \

436 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

437 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

438 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

439 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

440 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

441 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xà!
NULL
) \

442 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

443 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

444 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
; \

445 (
REGS
)->
ªgs_NPC
 = \

446 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
; \

447 (
REGS
)->
ªgs_C
.
Â¸
 = \

448 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

449 (
REGS
)->
ªgs_C
.
uniq
 = \

450 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

452 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

453 ((
REGS
)->
ªgs_R
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

455 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

456 ((
REGS
)->
ªgs_F
.
q
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

458 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

459 ((
REGS
)->
ªgs_R
[
IDX
] !(
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

461 
	#MD_FIRST_IN_REG
 0

	)

462 
	#MD_LAST_IN_REG
 21

	)

464 
	#MD_FIRST_OUT_REG
 0

	)

465 
	#MD_LAST_OUT_REG
 21

	)

473 
qw‹d_t
 
	texo_addªss_t
;

476 
qw‹d_t
 
	texo_öãgî_t
;

479 
	texo_Êﬂt_t
;

487 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

488 
	#sc_cou¡î
 
sc_sqw‹d


	)

489 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

492 
	#°©_ªg_addr
 
°©_ªg_qw‹d


	)

500 
	emd_ªg_ty≥
 {

501 
	mπ_g¥
,

502 
	mπ_Õr
,

503 
	mπ_Âr
,

504 
	mπ_d¥
,

505 
	mπ_˘æ
,

506 
	mπ_PC
,

507 
	mπ_NPC
,

508 
	mπ_NUM


512 
	smd_ªg_«mes_t
 {

513 *
	m°r
;

514 
md_ªg_ty≥
 
	mfûe
;

515 
	mªg
;

519 
md_ªg_«mes_t
 
md_ªg_«mes
[];

522 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

525 
	gevÆ_vÆue_t
;

526 
	gªgs_t
;

528 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

529 
is_wrôe
,

530 
md_ªg_ty≥
 
π
,

531 
ªg
,

532 
evÆ_vÆue_t
 *
vÆ
);

535 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

536 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

539 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

540 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

543 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

544 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

547 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

555 
	#MD_AGEN_OP
 
ADDQ


	)

558 
	#MD_NOP_OP
 
OP_NA


	)

562 
	#MD_VALID_ADDR
(
ADDR
) \

563 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

564 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_brk_poöt
) \

565 || ((
ADDR
Ë>(
ld_°ack_ba£
 - 16*1024*1024Ë&& (ADDRË<Üd_°ack_ba£))

	)

573 
	#MD_BR_SHIFT
 2

	)

581 
md_öô_decodî
();

585 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

586 
md_addr_t
 
pc
,

587 
FILE
 *
°ªam
);

600 
qw‹d_t
 
	tMD_ADDR_TYPE
;

601 
qw‹d_t
 
	tMD_PTR_TYPE
;

602 
w‹d_t
 
	tMD_INST_TYPE
;

603 
	#MD_INST_SIZE
 (
MD_INST_TYPE
)

	)

606 
	#MD_TEXT_BASE
 0x20000000ULL

	)

607 
	#MD_STACK_BASE
 (
MD_TEXT_BASE
 - (409600+4096))

	)

610 íum { 
	mREG_V0
, 
	mREG_A0
=16, 
	mREG_A1
, 
	mREG_A2
, 
	mREG_A3
, 
	mREG_A4
, 
	mREG_A5
, 
	mREG_ERR
=7,

611 
	mREG_GP
=29, 
	mREG_SP
, 
	mREG_ZERO
, 
	mREG_RA
=26 };

614 
	#MD_TOTAL_REGS
 \

615 (
MD_NUM_REGS
+MD_NUM_REGS+ 1+ 1+ 1+ 1)

	)

618 #i‚de‡
NO_ICHECKS


624 #i‚de‡
IFAIL


625 
	#IFAIL
(
S
Ë
	`Áèl
(S)

	)

629 
	#OVER
(
X
,
Y
) (((((X) > 0) && ((Y) > 0) \

630 && (
MAXINT_VAL
 - (
X
Ë< (
Y
))) \

631 ? 
	`IFAIL
("+ overflow") : ()0), \

632 ((((
X
Ë< 0Ë&& ((
Y
) < 0) \

633 && (-
MAXINT_VAL
 - (
X
Ë> (
Y
))) \

634 ? 
	`IFAIL
("+ undîÊow"Ë: ()0))

	)

637 
	#UNDER
(
X
,
Y
) (((((X) > 0) && ((Y) < 0) \

638 && (
MAXINT_VAL
 + (
Y
Ë< (
X
))) \

639 ? 
	`IFAIL
("- overflow") : ()0), \

640 ((((
X
Ë< 0Ë&& ((
Y
) > 0) \

641 && (-
MAXINT_VAL
 + (
Y
Ë> (
X
))) \

642 ? 
	`IFAIL
("- undîÊow"Ë: ()0))

	)

645 
	#DIV0
(
N
Ë(((NË=0Ë? 
	`IFAIL
("dividêby 0"Ë: ()0)

	)

648 
	#INTALIGN
(
N
) (((N) & 01) \

649 ? 
	`IFAIL
("bad INTÑegi°îálignmít"Ë: ()0)

	)

652 
	#FPALIGN
(
N
) (((N) & 01) \

653 ? 
	`IFAIL
("bad FPÑegi°îálignmít"Ë: ()0)

	)

656 
	#TALIGN
(
TARG
) (((TARG) & 0x7) \

657 ? 
	`IFAIL
("bad jum∞Æignmít"Ë: ()0)

	)

662 
	#OVER
(
X
,
Y
Ë(()0)

	)

663 
	#UNDER
(
X
,
Y
Ë(()0)

	)

664 
	#DIV0
(
N
Ë(()0)

	)

665 
	#INTALIGN
(
N
Ë(()0)

	)

666 
	#FPALIGN
(
N
Ë(()0)

	)

667 
	#TALIGN
(
TARG
Ë(()0)

	)

674 
	#IDIV
(
A
, 
B
Ë((AË/ (B))

	)

675 
	#IMOD
(
A
, 
B
Ë((AË% (B))

	)

676 
	#FDIV
(
A
, 
B
Ë((AË/ (B))

	)

677 
	#FINT
(
A
Ë(()A)

	)

	@target-alpha/config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@target-alpha/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	~"Æpha.h
"

59 
	#ECOFF_EB_MAGIC
 0x0160

	)

60 
	#ECOFF_EB_OTHER
 0x6001

	)

61 
	#ECOFF_EL_MAGIC
 0x0162

	)

62 
	#ECOFF_EL_OTHER
 0x6201

	)

63 
	#ECOFF_ALPHAMAGIC
 0603

	)

65 
	secoff_fûehdr
 {

66 
hÆf_t
 
	mf_magic
;

67 
hÆf_t
 
	mf_ns˙s
;

68 
sw‹d_t
 
	mf_timd©
;

69 
qw‹d_t
 
	mf_sym±r
;

70 
sw‹d_t
 
	mf_nsyms
;

71 
hÆf_t
 
	mf_›thdr
;

72 
hÆf_t
 
	mf_Êags
;

75 
	secoff_aouthdr
 {

76 
hÆf_t
 
	mmagic
;

77 
hÆf_t
 
	mv°amp
;

78 
hÆf_t
 
	mbldªv
;

79 
hÆf_t
 
	m∑d˚Œ
;

80 
qw‹d_t
 
	mtsize
;

81 
qw‹d_t
 
	mdsize
;

82 
qw‹d_t
 
	mbsize
;

83 
qw‹d_t
 
	míåy
;

84 
qw‹d_t
 
	mãxt_°¨t
;

85 
qw‹d_t
 
	md©a_°¨t
;

86 
qw‹d_t
 
	mbss_°¨t
;

87 
sw‹d_t
 
	mg¥mask
;

88 
sw‹d_t
 
	mÂrmask
;

89 
qw‹d_t
 
	mgp_vÆue
;

92 
	secoff_s˙hdr
 {

93 
	ms_«me
[8];

94 
qw‹d_t
 
	ms_∑ddr
;

95 
qw‹d_t
 
	ms_vaddr
;

96 
qw‹d_t
 
	ms_size
;

97 
qw‹d_t
 
	ms_s˙±r
;

98 
qw‹d_t
 
	ms_ªÕå
;

99 
qw‹d_t
 
	ms_ n›å
;

100 
hÆf_t
 
	ms_ƒñoc
;

101 
hÆf_t
 
	ms_∆¬o
;

102 
sw‹d_t
 
	ms_Êags
;

105 
	secoff_symhdr_t
 {

106 
hÆf_t
 
	mmagic
;

107 
hÆf_t
 
	mv°amp
;

109 
sw‹d_t
 
	mûöeMax
;

110 
sw‹d_t
 
	midnMax
;

111 
sw‹d_t
 
	mùdMax
;

112 
sw‹d_t
 
	misymMax
;

113 
sw‹d_t
 
	mi›tMax
;

114 
sw‹d_t
 
	müuxMax
;

115 
sw‹d_t
 
	missMax
;

116 
sw‹d_t
 
	missExtMax
;

117 
sw‹d_t
 
	mifdMax
;

118 
sw‹d_t
 
	m¸fd
;

119 
sw‹d_t
 
	mõxtMax
;

120 
qw‹d_t
 
	mcbLöe
;

121 
qw‹d_t
 
	mcbLöeOff£t
;

122 
qw‹d_t
 
	mcbDnOff£t
;

123 
qw‹d_t
 
	mcbPdOff£t
;

124 
qw‹d_t
 
	mcbSymOff£t
;

125 
qw‹d_t
 
	mcbO±Off£t
;

126 
qw‹d_t
 
	mcbAuxOff£t
;

127 
qw‹d_t
 
	mcbSsOff£t
;

128 
qw‹d_t
 
	mcbSsExtOff£t
;

129 
qw‹d_t
 
	mcbFdOff£t
;

130 
qw‹d_t
 
	mcbRfdOff£t
;

131 
qw‹d_t
 
	mcbExtOff£t
;

132 } 
	tecoff_HDRR
;

134 
	#ECOFF_magicSym
 0x1992

	)

136 
	secoff_fdr
 {

137 
w‹d_t
 
	madr
;

138 
sw‹d_t
 
	mrss
;

139 
sw‹d_t
 
	missBa£
;

140 
sw‹d_t
 
	mcbSs
;

141 
sw‹d_t
 
	misymBa£
;

142 
sw‹d_t
 
	mcsym
;

143 
sw‹d_t
 
	mûöeBa£
;

144 
sw‹d_t
 
	m˛öe
;

145 
sw‹d_t
 
	mi›tBa£
;

146 
sw‹d_t
 
	mc›t
;

147 
hÆf_t
 
	mùdFú°
;

148 
hÆf_t
 
	m˝d
;

149 
sw‹d_t
 
	müuxBa£
;

150 
sw‹d_t
 
	mˇux
;

151 
sw‹d_t
 
	mrfdBa£
;

152 
sw‹d_t
 
	m¸fd
;

153 
	mœng
 :5;

154 
	mfMîge
 :1;

155 
	mfRódö
 :1;

156 
	mfBigídün
 :1;

157 
	mª£rved
 :24;

158 
sw‹d_t
 
	mcbLöeOff£t
;

159 
sw‹d_t
 
	mcbLöe
;

160 } 
	tecoff_FDR
;

162 
	secoff_pdr
 {

163 
w‹d_t
 
	madr
;

164 
sw‹d_t
 
	misym
;

165 
sw‹d_t
 
	mûöe
;

166 
sw‹d_t
 
	mªgmask
;

167 
sw‹d_t
 
	mªgoff£t
;

168 
sw‹d_t
 
	mi›t
;

169 
sw‹d_t
 
	m‰egmask
;

170 
sw‹d_t
 
	m‰egoff£t
;

171 
sw‹d_t
 
	m‰ameoff£t
;

172 
hÆf_t
 
	m‰amîeg
;

173 
hÆf_t
 
	mp¸eg
;

174 
sw‹d_t
 
	m Low
;

175 
sw‹d_t
 
	m High
;

176 
sw‹d_t
 
	mcbLöeOff£t
;

177 } 
	tecoff_PDR
;

179 
	secoff_SYMR
 {

180 
qw‹d_t
 
	mvÆue
;

181 
sw‹d_t
 
	miss
;

182 
	m°
 :6;

183 
	msc
 :5;

184 
	mª£rved
 :1;

185 
	mödex
 :20;

186 } 
	tecoff_SYMR
;

188 
	secoff_EXTR
 {

189 
ecoff_SYMR
 
	masym
;

190 
sw‹d_t
 
	mifd
;

191 
sw‹d_t
 
	mª£rved
;

192 } 
	tecoff_EXTR
;

194 
	#ECOFF_R_SN_TEXT
 1

	)

195 
	#ECOFF_R_SN_RDATA
 2

	)

196 
	#ECOFF_R_SN_DATA
 3

	)

197 
	#ECOFF_R_SN_SDATA
 4

	)

198 
	#ECOFF_R_SN_SBSS
 5

	)

199 
	#ECOFF_R_SN_BSS
 6

	)

201 
	#ECOFF_STYP_TEXT
 0x0020

	)

202 
	#ECOFF_STYP_RDATA
 0x0100

	)

203 
	#ECOFF_STYP_DATA
 0x0040

	)

204 
	#ECOFF_STYP_SDATA
 0x0200

	)

205 
	#ECOFF_STYP_SBSS
 0x0400

	)

206 
	#ECOFF_STYP_BSS
 0x0080

	)

207 
	#ECOFF_STYP_INIT
 0x80000000

	)

209 
	#ECOFF_STYP_FINI
 0x01000000

	)

210 
	#ECOFF_STYP_RCONST
 0x02200000

	)

211 
	#ECOFF_STYP_LITA
 0x04000000

	)

212 
	#ECOFF_STYP_LIT8
 0x08000000

	)

213 
	#ECOFF_STYP_LIT4
 0x10000000

	)

214 
	#ECOFF_STYP_XDATA
 0x02400000

	)

215 
	#ECOFF_STYP_PDATA
 0x02800000

	)

217 
	#ECOFF_°Nû
 0

	)

218 
	#ECOFF_°GlobÆ
 1

	)

219 
	#ECOFF_°Sètic
 2

	)

220 
	#ECOFF_°P¨am
 3

	)

221 
	#ECOFF_°Loˇl
 4

	)

222 
	#ECOFF_°Labñ
 5

	)

223 
	#ECOFF_°Proc
 6

	)

224 
	#ECOFF_°Block
 7

	)

225 
	#ECOFF_°End
 8

	)

226 
	#ECOFF_°Membî
 9

	)

227 
	#ECOFF_°Ty≥def
 10

	)

228 
	#ECOFF_°Fûe
 11

	)

229 
	#ECOFF_°RegRñoc
 12

	)

230 
	#ECOFF_°F‹w¨d
 13

	)

231 
	#ECOFF_°SèticProc
 14

	)

232 
	#ECOFF_°C⁄°™t
 15

	)

	@target-alpha/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-Æpha/ecoff.h
"

72 
	#TEXT_TAIL_PADDING
 0

	)

75 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

78 
	gld_ãxt_size
 = 0;

81 
md_addr_t
 
	gld_d©a_ba£
 = 0;

84 
md_addr_t
 
	gld_brk_poöt
 = 0;

87 
	gld_d©a_size
 = 0;

90 
md_addr_t
 
	gld_°ack_ba£
 = 0;

93 
	gld_°ack_size
 = 0;

96 
md_addr_t
 
	gld_°ack_mö
 = -1;

99 *
	gld_¥og_‚ame
 = 
NULL
;

102 
md_addr_t
 
	gld_¥og_íåy
 = 0;

105 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

108 
	gld_èrgë_big_ídün
;

112 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

114 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

116 &
ld_ãxt_ba£
,Üd_text_base, "0x%010p");

117 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

119 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

120 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

122 &
ld_d©a_ba£
,Üd_data_base, "0x%010p");

123 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

125 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

126 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

128 &
ld_°ack_ba£
,Üd_stack_base, "0x%010p");

130 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

132 &
ld_°ack_mö
,Üd_stack_min, "0x%010p");

134 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

136 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

137 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

139 &
ld_¥og_íåy
,Üd_prog_entry, "0x%010p");

140 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

142 &
ld_ívú⁄_ba£
,Üd_environ_base, "0x%010p");

143 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

145 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

146 
	}
}

152 
	$ld_lﬂd_¥og
(*
‚ame
,

153 
¨gc
, **
¨gv
,

154 **
ívp
,

155 
ªgs_t
 *
ªgs
,

156 
mem_t
 *
mem
,

157 
zîo_bss_£gs
)

159 
i
;

160 
qw‹d_t
 
ãmp
;

161 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

163 i‡(
	`eio_vÆid
(
‚ame
))

165 i‡(
¨gc
 != 1)

167 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

168 
	`exô
(1);

171 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

173 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

176 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

179 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

180 
	`Áèl
("bad initial checkpoint in EIO file");

183 i‡(
sim_chk±_‚ame
 !
NULL
)

185 
cou¡î_t
 
ª°‹e_i˙t
;

187 
FILE
 *
chk±_fd
;

189 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

190 
sim_chk±_‚ame
);

192 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

193 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

194 
sim_chk±_‚ame
);

197 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

200 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

203 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

204 
ª°‹e_i˙t
);

205 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

209 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

210 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

215 #ifde‡
MD_CROSS_ENDIAN


218 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

219 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

220 
	`w¨n
("****************************************");

221 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

222 
	`w¨n
("****************************************");

224 
	`Áèl
("SimpleScalar/Alpha only supports binaryÉxecution on\n"

230 i‡(
sim_chk±_‚ame
 !
NULL
)

231 
	`Áèl
("checkpoints only supported while EIOÅracing");

233 #ifde‡
BFD_LOADER


236 
bfd
 *
abfd
;

237 
a£˘i⁄
 *
£˘
;

241 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

242 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

243 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

246 
ld_ívú⁄_ba£
 = 
•
;

249 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

250 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

251 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

256 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

258 
	`bfd_˛o£
(
abfd
);

259 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

263 
ld_¥og_‚ame
 = 
¨gv
[0];

266 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

268 
	`debug
("processing %d sections in `%s'...",

269 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

272 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

274 *
p
;

276 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

277 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

278 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

281 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

282 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

283 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

284 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

287 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

288 i‡(!
p
)

289 
	`Áèl
("cannotállocate %d bytes for section `%s'",

290 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

291 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

293 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

294 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

295 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

296 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

299 
	`mem_bc›y
(
mem_‚
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

300 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

303 
	`‰ì
(
p
);

306 i‡(
zîo_bss_£gs


307 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

308 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

309 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

312 
	`mem_bzîo
(
mem_‚
,

313 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

314 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

319 
	`debug
("ignoring section `%s' duringÜoad...",

320 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

324 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

327 
ld_ãxt_size
 =

328 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

329 - 
MD_TEXT_BASE
)

330 + 
TEXT_TAIL_PADDING
;

334 
	`mem_bzîo
(
mem_‚
,

335 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

336 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

337 
TEXT_TAIL_PADDING
);

341 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

342 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

343 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

344 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

345 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

348 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

349 
d©a_bªak
)

350 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

351 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

356 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

357 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

358 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

363 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

364 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

365 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

366 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

369 i‡(!
	`bfd_˛o£
(
abfd
))

370 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

376 
FILE
 *
fobj
;

377 
Êoc
;

378 
ecoff_fûehdr
 
fhdr
;

379 
ecoff_aouthdr
 
ahdr
;

380 
ecoff_s˙hdr
 
shdr
;

383 
ld_¥og_‚ame
 = 
¨gv
[0];

386 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

387 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

389 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

391 i‡(!
fobj
)

392 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

394 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

395 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

398 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_ALPHAMAGIC
))

399 
ld_èrgë_big_ídün
 = 
FALSE
;

400 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_MAGIC
)

401 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_MAGIC
)

402 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_OTHER
)

403 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_OTHER
))

404 
	`Áèl
("AÕh®simuœt‹ c™nŸÑu¿PISA bö¨y `%s'", 
¨gv
[0]);

406 
	`Áèl
("bad magicÇumber inÉxecutable `%s' (notánÉxecutable)",

407 
¨gv
[0]);

409 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

410 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

412 
ld_ãxt_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
ãxt_°¨t
);

413 
ld_ãxt_size
 = 
	`MD_SWAPQ
(
ahdr
.
tsize
);

414 
ld_¥og_íåy
 = 
	`MD_SWAPQ
(
ahdr
.
íåy
);

415 
ld_d©a_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
d©a_°¨t
);

416 
ld_d©a_size
 = 
	`MD_SWAPQ
(
ahdr
.
dsize
Ë+ MD_SWAPQ◊hdr.
bsize
);

417 
ªgs
->
ªgs_R
[
MD_REG_GP
] = 
	`MD_SWAPQ
(
ahdr
.
gp_vÆue
);

420 
d©a_bªak
 = 
ld_d©a_ba£
 + 
ld_d©a_size
;

425 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
	`MD_SWAPH
(
fhdr
.
f_›thdr
), 0);

427 
	`debug
("processing %d sections in `%s'...",

428 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
), 
¨gv
[0]);

431 
Êoc
 = 
	`·ñl
(
fobj
);

432 
i
 = 0; i < 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
); i++)

434 *
p
;

436 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

437 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

438 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

439 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

440 
Êoc
 = 
	`·ñl
(
fobj
);

442 
	`MD_SWAPW
(
shdr
.
s_Êags
))

444 
ECOFF_STYP_TEXT
:

445 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

446 i‡(!
p
)

447 
	`Áèl
("out of virtual memory");

449 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

450 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

451 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

452 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

455 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

456 
	`MD_SWAPQ
(
shdr
.
s_vaddr
), 
p
, MD_SWAPQ(shdr.
s_size
));

460 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

461 
	`MD_SWAPQ
(
shdr
.
s_vaddr
Ë+ MD_SWAPQ(shdr.
s_size
),

462 
TEXT_TAIL_PADDING
);

466 
	`‰ì
(
p
);

469 
Text_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

470 
Text_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

471 
Text_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
) / 4;

473 
Text_size
 += 10;

474 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

479 
ECOFF_STYP_INIT
:

480 
ECOFF_STYP_FINI
:

481 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

483 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

484 i‡(!
p
)

485 
	`Áèl
("out of virtual memory");

487 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

488 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

489 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

490 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

493 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

494 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

495 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

498 
	`‰ì
(
p
);

501 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

504 
ECOFF_STYP_LITA
:

505 
ECOFF_STYP_LIT8
:

506 
ECOFF_STYP_LIT4
:

507 
ECOFF_STYP_XDATA
:

508 
ECOFF_STYP_PDATA
:

509 
ECOFF_STYP_RCONST
:

512 
ECOFF_STYP_RDATA
:

517 
Rd©a_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

518 
Rd©a_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
);

519 
Rd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

522 
ECOFF_STYP_DATA
:

524 
D©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

527 
ECOFF_STYP_SDATA
:

529 
Sd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

531 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

533 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

534 i‡(!
p
)

535 
	`Áèl
("out of virtual memory");

537 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

538 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

539 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

540 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

543 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

544 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

545 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

548 
	`‰ì
(
p
);

551 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

554 
ECOFF_STYP_BSS
:

555 
ECOFF_STYP_SBSS
:

560 
	`w¨n
("£˘i⁄ `%s' ign‹ed...", 
shdr
.
s_«me
);

565 i‡(
	`f˛o£
(
fobj
))

566 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

572 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

573 
	`Áèl
("executable is missingá `.text' section");

574 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

575 
	`Áèl
("executable is missingá `.data' section");

576 i‡(!
ld_¥og_íåy
)

577 
	`Áèl
("programÉntryÖointÇot specified");

580 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

581 i‡(
sim_sw≠_byãs
)

586 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

587 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

589 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

592 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

593 i‡(
sim_sw≠_w‹ds
)

598 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

599 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

601 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

607 
ld_°ack_ba£
 = 
ld_ãxt_ba£
 - (409600+4096);

609 
•
 = 
	`ROUND_DOWN
(
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

611 
•
 = 
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
;

612 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

615 
ld_ívú⁄_ba£
 = 
•
;

618 
ãmp
 = 
	`MD_SWAPQ
(
¨gc
);

619 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
qw‹d_t
));

620 
ªgs
->
ªgs_R
[
MD_REG_A0
] = 
ãmp
;

621 
•
 +(
qw‹d_t
);

624 
¨gv_addr
 = 
•
;

625 
ªgs
->
ªgs_R
[
MD_REG_A1
] = 
¨gv_addr
;

626 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

629 
ívp_addr
 = 
•
;

630 
i
=0; 
ívp
[i]; i++)

631 
•
 +(
md_addr_t
);

632 
•
 +(
md_addr_t
);

635 
i
=0; i<
¨gc
; i++)

638 
ãmp
 = 
	`MD_SWAPQ
(
•
);

639 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

640 &
ãmp
, (
md_addr_t
));

642 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

643 
•
 +
	`°æí
(
¨gv
[
i
])+1;

646 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

647 &
nuŒ_±r
, (
md_addr_t
));

650 
i
 = 0; 
ívp
[i]; i++)

653 
ãmp
 = 
	`MD_SWAPQ
(
•
);

654 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

655 &
ãmp
, (
md_addr_t
));

657 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

658 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

661 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

662 &
nuŒ_±r
, (
md_addr_t
));

665 i‡(
•
 > 
ld_°ack_ba£
)

670 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON inálpha.h");

674 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

677 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

679 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

680 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

682 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

683 
ld_ãxt_ba£
, 
ld_ãxt_size
);

684 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

685 
ld_d©a_ba£
, 
ld_d©a_size
);

686 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

687 
ld_°ack_ba£
, 
ld_°ack_size
);

688 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

689 
	}
}

	@target-alpha/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"lﬂdî.h
"

58 
	~"symbﬁ.h
"

60 #ifde‡
BFD_LOADER


61 
	~<bfd.h
>

63 
	~"èrgë-Æpha/ecoff.h
"

69 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

72 
	gsym_nsyms
 = 0;

73 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

76 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

79 
	gsym_¡extsyms
 = 0;

80 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

83 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

86 
	gsym_nd©asyms
 = 0;

87 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

90 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

93 
	gsyms_lﬂded
 = 
FALSE
;

95 #ifde‡
PRINT_SYMS


98 
	$Êags2°r
(
Êags
)

100 
buf
[256];

101 *
p
;

103 i‡(!
Êags
)

106 
p
 = 
buf
;

107 *
p
 = '\0';

109 i‡(
Êags
 & 
BSF_LOCAL
)

111 *
p
++ = 'L';

112 *
p
++ = '|';

114 i‡(
Êags
 & 
BSF_GLOBAL
)

116 *
p
++ = 'G';

117 *
p
++ = '|';

119 i‡(
Êags
 & 
BSF_DEBUGGING
)

121 *
p
++ = 'D';

122 *
p
++ = '|';

124 i‡(
Êags
 & 
BSF_FUNCTION
)

126 *
p
++ = 'F';

127 *
p
++ = '|';

129 i‡(
Êags
 & 
BSF_KEEP
)

131 *
p
++ = 'K';

132 *
p
++ = '|';

134 i‡(
Êags
 & 
BSF_KEEP_G
)

136 *
p
++ = 'k'; *p++ = '|';

138 i‡(
Êags
 & 
BSF_WEAK
)

140 *
p
++ = 'W';

141 *
p
++ = '|';

143 i‡(
Êags
 & 
BSF_SECTION_SYM
)

145 *
p
++ = 'S'; *p++ = '|';

147 i‡(
Êags
 & 
BSF_OLD_COMMON
)

149 *
p
++ = 'O';

150 *
p
++ = '|';

152 i‡(
Êags
 & 
BSF_NOT_AT_END
)

154 *
p
++ = 'N';

155 *
p
++ = '|';

157 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

159 *
p
++ = 'C';

160 *
p
++ = '|';

162 i‡(
Êags
 & 
BSF_WARNING
)

164 *
p
++ = 'w';

165 *
p
++ = '|';

167 i‡(
Êags
 & 
BSF_INDIRECT
)

169 *
p
++ = 'I';

170 *
p
++ = '|';

172 i‡(
Êags
 & 
BSF_FILE
)

174 *
p
++ = 'f';

175 *
p
++ = '|';

178 i‡(
p
 =
buf
)

179 
	`∑nic
("no flags detected");

181 *--
p
 = '\0';

182  
buf
;

183 
	}
}

188 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

190  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

191 
	}
}

195 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

197  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

198 
	}
}

200 
	#RELEVANT_SCOPE
(
SYM
) \

202 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

204 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

205 && (
SYM
)->
«me
[0] != '$') \

207 
lﬂd_loˇls
 \

209 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

210 && (
SYM
)->
«me
[0] == '$') \

212 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

213 && (
SYM
)->
«me
[0] ='$'))))

	)

218 
	$sym_lﬂdsyms
(*
‚ame
,

219 
lﬂd_loˇls
)

221 
i
, 
debug_˙t
;

222 #ifde‡
BFD_LOADER


223 
bfd
 *
abfd
;

224 
asymbﬁ
 **
syms
;

225 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

227 
Àn
;

228 
FILE
 *
fobj
;

229 
ecoff_fûehdr
 
fhdr
;

230 
ecoff_aouthdr
 
ahdr
;

231 
ecoff_symhdr_t
 
symhdr
;

232 *
°πab
 = 
NULL
;

233 
ecoff_EXTR
 *
exå
;

236 i‡(
syms_lﬂded
)

243 #ifde‡
BFD_LOADER


246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

247 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

248 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

253 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

255 
	`bfd_˛o£
(
abfd
);

256 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

260 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

261 
	`∑nic
("binaryÉndian changed");

263 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

266 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

267 i‡(
°‹age
 <= 0)

268 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

270 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

271 i‡(!
syms
)

272 
	`Áèl
("out of virtual memory");

274 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

275 i‡(
nsyms
 <= 0)

276 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

283 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

284 
i
=0; i < 
nsyms
; i++)

286 
asymbﬁ
 *
sym
 = 
syms
[
i
];

290 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

294 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

296 && 
	`RELEVANT_SCOPE
(
sym
))

299 
sym_nd©asyms
++;

300 #ifde‡
PRINT_SYMS


301 
	`Ârötf
(
°dîr
,

303 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

304 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

308 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

310 && 
	`RELEVANT_SCOPE
(
sym
))

313 
sym_¡extsyms
++;

314 #ifde‡
PRINT_SYMS


315 
	`Ârötf
(
°dîr
,

317 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

318 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

324 #ifde‡
PRINT_SYMS


325 
	`Ârötf
(
°dîr
,

327 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

328 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

332 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

333 i‡(
sym_nsyms
 <= 0)

334 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

337 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

338 i‡(!
sym_db
)

339 
	`Áèl
("out of virtual memory");

342 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

344 
asymbﬁ
 *
sym
 = 
syms
[
i
];

348 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

352 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

354 && 
	`RELEVANT_SCOPE
(
sym
))

357 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

358 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

359 
sym_db
[
debug_˙t
].
öôülized
 =

360 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

362 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

363 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

364 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

365 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

367 
debug_˙t
++;

370 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

372 && 
	`RELEVANT_SCOPE
(
sym
))

375 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

376 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

377 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

378 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

379 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

380 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

382 
debug_˙t
++;

390 i‡(
debug_˙t
 !
sym_nsyms
)

391 
	`∑nic
("couldÇotÜocateáll counted symbols");

394 
	`‰ì
(
syms
);

398 i‡(!
	`bfd_˛o£
(
abfd
))

399 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

404 #i‡
	`deföed
(
_MSC_VER
)

405 
fobj
 = 
	`f›í
(
‚ame
, "rb");

407 
fobj
 = 
	`f›í
(
‚ame
, "r");

409 i‡(!
fobj
)

410 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

412 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

413 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

416 i‡(
fhdr
.
f_magic
 !
ECOFF_ALPHAMAGIC
)

417 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

419 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

420 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

423 
	`f£ek
(
fobj
, ()
fhdr
.
f_sym±r
, 0);

425 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

426 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

428 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

429 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

432 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

433 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

434 i‡(!
°πab
)

435 
	`Áèl
("out of virtual memory");

438 
	`f£ek
(
fobj
, ()
symhdr
.
cbSsExtOff£t
 , 0);

439 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

440 
	`Áèl
("error whileÑeading symbolÅableÇames");

443 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

444 i‡(
Àn
 <= 0)

445 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

446 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

447 i‡(!
sym_db
)

448 
	`Áèl
("out of virtual memory");

451 
exå
 =

452 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

453 i‡(!
exå
)

454 
	`Áèl
("out of virtual memory");

456 
	`f£ek
(
fobj
, ()
symhdr
.
cbExtOff£t
, 0);

457 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

458 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

460 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

463 
i
=0; i < 
symhdr
.
õxtMax
; i++)

465 
°r_off£t
;

467 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

470 
	`¥ötf
("ext %2d: ifd = %2d, iss = %3d, value = %8x, st = %3x, "

472 
i
, 
exå
[i].
ifd
,

473 
exå
[
i
].
asym
.
iss
,Éxå[i].asym.
vÆue
,

474 
exå
[
i
].
asym
.
°
,Éxå[i].asym.
sc
,

475 
exå
[
i
].
asym
.
ödex
);

476 
	`¥ötf
(" %08x %2d %2d %s\n",

477 
exå
[
i
].
asym
.
vÆue
,

478 
exå
[
i
].
asym
.
°
,

479 
exå
[
i
].
asym
.
sc
,

480 &
°πab
[
°r_off£t
]);

483 
exå
[
i
].
asym
.
°
)

485 
ECOFF_°GlobÆ
:

486 
ECOFF_°Sètic
:

488 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

489 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

490 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

492 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

493 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

494 
sym_nsyms
++;

495 
sym_nd©asyms
++;

498 
ECOFF_°Proc
:

499 
ECOFF_°SèticProc
:

500 
ECOFF_°Labñ
:

502 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

503 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

504 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

505 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

506 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

507 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

508 
sym_nsyms
++;

509 
sym_¡extsyms
++;

515 
	`Ârötf
(
°dîr
, "** skùpög: %s...\n", &
°πab
[
°r_off£t
]);

520 
	`‰ì
(
exå
);

523 i‡(
	`f˛o£
(
fobj
))

524 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

533 
sym_syms
 =

534 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

535 i‡(!
sym_syms
)

536 
	`Áèl
("out of virtual memory");

538 
sym_syms_by_«me
 =

539 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

540 i‡(!
sym_syms_by_«me
)

541 
	`Áèl
("out of virtual memory");

543 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

545 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

546 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

547 
debug_˙t
++;

550 i‡(
debug_˙t
 !
sym_nsyms
)

551 
	`∑nic
("couldÇotÜocateáll symbols");

554 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

557 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

560 
sym_ãxtsyms
 =

561 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

562 i‡(!
sym_ãxtsyms
)

563 
	`Áèl
("out of virtual memory");

565 
sym_ãxtsyms_by_«me
 =

566 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

567 i‡(!
sym_ãxtsyms_by_«me
)

568 
	`Áèl
("out of virtual memory");

570 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

572 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

574 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

575 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

576 
debug_˙t
++;

580 i‡(
debug_˙t
 !
sym_¡extsyms
)

581 
	`∑nic
("couldÇotÜocateállÅext symbols");

584 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

587 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

588 (
sym_sym_t
 *), (*)
ncmp
);

591 
sym_d©asyms
 =

592 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

593 i‡(!
sym_d©asyms
)

594 
	`Áèl
("out of virtual memory");

596 
sym_d©asyms_by_«me
 =

597 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

598 i‡(!
sym_d©asyms_by_«me
)

599 
	`Áèl
("out of virtual memory");

601 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

603 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

605 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

606 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

607 
debug_˙t
++;

611 i‡(
debug_˙t
 !
sym_nd©asyms
)

612 
	`∑nic
("couldÇotÜocateáll data symbols");

615 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

618 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

619 (
sym_sym_t
 *), (*)
ncmp
);

622 
i
=0; i<
sym_¡extsyms
; i++)

624 
sym_ãxtsyms
[
i
]->
size
 =

625 (
i
 !(
sym_¡extsyms
 - 1)

626 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

627 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

629 
i
=0; i<
sym_nd©asyms
; i++)

631 
sym_d©asyms
[
i
]->
size
 =

632 (
i
 !(
sym_nd©asyms
 - 1)

633 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

634 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

638 
syms_lﬂded
 = 
TRUE
;

639 
	}
}

643 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

644 
FILE
 *
fd
)

646 
	`myÂrötf
(
fd
,

648 
sym
->
«me
,

649 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

650 
sym
->
öôülized
 ? "y" : "n",

651 
sym
->
pub
 ? "y" : "n",

652 
sym
->
loˇl
 ? "y" : "n",

653 
sym
->
addr
,

654 
sym
->
size
);

655 
	}
}

659 
	$sym_dumpsyms
(
FILE
 *
fd
)

661 
i
;

663 
i
=0; i < 
sym_nsyms
; i++)

664 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

665 
	}
}

669 
	$sym_dump°©e
(
FILE
 *
fd
)

671 
i
;

673 i‡(
fd
 =
NULL
)

674 
fd
 = 
°dîr
;

676 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

677 
i
=0; i < 
sym_nsyms
; i++)

678 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

680 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

681 
i
=0; i < 
sym_nsyms
; i++)

682 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

684 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

685 
i
=0; i < 
sym_¡extsyms
; i++)

686 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

688 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

689 
i
=0; i < 
sym_¡extsyms
; i++)

690 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

692 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

693 
i
=0; i < 
sym_nd©asyms
; i++)

694 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

696 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

697 
i
=0; i < 
sym_nd©asyms
; i++)

698 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

699 
	}
}

705 
sym_sym_t
 *

706 
	$sym_böd_addr
(
md_addr_t
 
addr
,

707 *
pödex
,

708 
exa˘
,

709 
sym_db_t
 
db
)

711 
nsyms
, 
low
, 
high
, 
pos
;

712 
sym_sym_t
 **
syms
;

714 
db
)

716 
sdb_™y
:

717 
syms
 = 
sym_syms
;

718 
nsyms
 = 
sym_nsyms
;

720 
sdb_ãxt
:

721 
syms
 = 
sym_ãxtsyms
;

722 
nsyms
 = 
sym_¡extsyms
;

724 
sdb_d©a
:

725 
syms
 = 
sym_d©asyms
;

726 
nsyms
 = 
sym_nd©asyms
;

729 
	`∑nic
("bogus symbol database");

733 i‡(!
nsyms
)

735 i‡(
pödex
)

736 *
pödex
 = -1;

737  
NULL
;

741 
low
 = 0;

742 
high
 = 
nsyms
-1;

743 
pos
 = (
low
 + 
high
) >> 1;

745 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

747 || (!
exa˘


748 && 
syms
[
pos
]->
addr
 <=áddr

749 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

751 i‡(
addr
 < 
syms
[
pos
]->addr)

752 
high
 = 
pos
 - 1;

754 
low
 = 
pos
 + 1;

755 i‡(
high
 >
low
)

756 
pos
 = (
low
 + 
high
) >> 1;

759 i‡(
pödex
)

760 *
pödex
 = -1;

761  
NULL
;

766 i‡(
pödex
)

767 *
pödex
 = 
pos
;

768  
syms
[
pos
];

769 
	}
}

774 
sym_sym_t
 *

775 
	$sym_böd_«me
(*
«me
,

776 *
pödex
,

777 
sym_db_t
 
db
)

779 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

780 
sym_sym_t
 **
syms
;

782 
db
)

784 
sdb_™y
:

785 
syms
 = 
sym_syms_by_«me
;

786 
nsyms
 = 
sym_nsyms
;

788 
sdb_ãxt
:

789 
syms
 = 
sym_ãxtsyms_by_«me
;

790 
nsyms
 = 
sym_¡extsyms
;

792 
sdb_d©a
:

793 
syms
 = 
sym_d©asyms_by_«me
;

794 
nsyms
 = 
sym_nd©asyms
;

797 
	`∑nic
("bogus symbol database");

801 i‡(!
nsyms
)

803 i‡(
pödex
)

804 *
pödex
 = -1;

805  
NULL
;

809 
low
 = 0;

810 
high
 = 
nsyms
-1;

811 
pos
 = (
low
 + 
high
) >> 1;

812 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

814 i‡(
cmp
 > 0)

815 
high
 = 
pos
 - 1;

817 
low
 = 
pos
 + 1;

818 i‡(
high
 >
low
)

819 
pos
 = (
low
 + 
high
) >> 1;

822 i‡(
pödex
)

823 *
pödex
 = -1;

824  
NULL
;

829 i‡(
pödex
)

830 *
pödex
 = 
pos
;

831  
syms
[
pos
];

832 
	}
}

	@target-alpha/syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

57 #i‚de‡
MIN_SYSCALL_MODE


58 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN32__
Ë|| deföed(
MD_CROSS_ENDIAN
)

59 
	#MIN_SYSCALL_MODE


	)

64 #ifde‡
_MSC_VER


65 
	~<io.h
>

67 
	~<uni°d.h
>

69 
	~<f˙é.h
>

70 
	~<sys/ty≥s.h
>

71 #i‚de‡
_MSC_VER


72 
	~<sys/∑øm.h
>

74 
	~<î∫o.h
>

75 
	~<time.h
>

76 #i‚de‡
_MSC_VER


77 
	~<sys/time.h
>

79 #i‚de‡
_MSC_VER


80 
	~<sys/ªsour˚.h
>

82 
	~<sig«l.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/fûe.h
>

86 
	~<sys/°©.h
>

87 #i‚de‡
_MSC_VER


88 
	~<sys/uio.h
>

90 
	~<£tjmp.h
>

91 #i‚de‡
_MSC_VER


92 
	~<sys/times.h
>

94 
	~<limôs.h
>

95 #i‚de‡
_MSC_VER


96 
	~<sys/io˘l.h
>

98 #i‡
deföed
(
__FªeBSD__
)

99 
	~<utime.h
>

100 
	~<dúít.h
>

102 #i‡
deföed
(
löux
)

103 
	~<utime.h
>

104 
	~<dúít.h
>

105 
	~<sys/vfs.h
>

107 #i‡
deföed
(
_AIX
)

108 
	~<sys/°©fs.h
>

110 #i‚de‡
_MSC_VER


111 
	~<sys/mou¡.h
>

114 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

115 #i‚de‡
_MSC_VER


116 
	~<sys/£À˘.h
>

119 #ifde‡
löux


120 
	~<sgây.h
>

121 
	~<√töë/t˝.h
>

122 
	~<√töë/udp.h
>

123 
	~<√töë/ö.h
>

126 #ifde‡
__FªeBSD__


127 
	~<√töë/t˝.h
>

128 
	~<√töë/udp.h
>

129 
	~<√töë/ö.h
>

132 #i‡
deföed
(
__svr4__
)

133 
	~<sys/dúít.h
>

134 
	~<sys/fûio.h
>

135 #ñi‡
deföed
(
__osf__
)

136 
	~<dúít.h
>

141 
gëdúíåõs
(
fd
, *
buf
, 
nbyãs
, *
ba£p
);

144 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

145 
	~<sys/°©vfs.h
>

146 
	#°©fs
 
°©vfs


	)

147 
	~<sys/time.h
>

148 
	~<utime.h
>

149 
	~<sgây.h
>

150 
	~<√töë/ö.h
>

151 
	~<√töë/t˝.h
>

154 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

155 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

156 
	~<dúít.h
>

158 
	~<sys/dú.h
>

162 #unde‡
NL0


163 #unde‡
NL1


164 #unde‡
CR0


165 #unde‡
CR1


166 #unde‡
CR2


167 #unde‡
CR3


168 #unde‡
TAB0


169 #unde‡
TAB1


170 #unde‡
TAB2


171 #unde‡
XTABS


172 #unde‡
BS0


173 #unde‡
BS1


174 #unde‡
FF0


175 #unde‡
FF1


176 #unde‡
ECHO


177 #unde‡
NOFLSH


178 #unde‡
TOSTOP


179 #unde‡
FLUSHO


180 #unde‡
PENDIN


183 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

184 #unde‡
CR0


187 #ifde‡
__FªeBSD__


188 
	~<ãrmios.h
>

191 #i‚de‡
_MSC_VER


192 
	~<ãrmio.h
>

196 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

198 #unde‡
HUPCL


199 #unde‡
ECHO


200 #unde‡
B50


201 #unde‡
B75


202 #unde‡
B110


203 #unde‡
B134


204 #unde‡
B150


205 #unde‡
B200


206 #unde‡
B300


207 #unde‡
B600


208 #unde‡
B1200


209 #unde‡
B1800


210 #unde‡
B2400


211 #unde‡
B4800


212 #unde‡
B9600


213 #unde‡
B19200


214 #unde‡
B38400


215 #unde‡
NL0


216 #unde‡
NL1


217 #unde‡
CR0


218 #unde‡
CR1


219 #unde‡
CR2


220 #unde‡
CR3


221 #unde‡
TAB0


222 #unde‡
TAB1


223 #unde‡
BS0


224 #unde‡
BS1


225 #unde‡
FF0


226 #unde‡
FF1


227 #unde‡
EXTA


228 #unde‡
EXTB


229 #unde‡
B900


230 #unde‡
B3600


231 #unde‡
B7200


232 #unde‡
XTABS


233 
	~<sgây.h
>

234 
	~<utime.h
>

237 
	~<sys/sockë.h
>

238 
	~<sys/pﬁl.h
>

240 #ifde‡
_MSC_VER


241 
	#ac˚ss
 
_ac˚ss


	)

242 
	#chmod
 
_chmod


	)

243 
	#chdú
 
_chdú


	)

244 
	#u∆ök
 
_u∆ök


	)

245 
	#›í
 
_›í


	)

246 
	#¸ót
 
_¸ót


	)

247 
	#pùe
 
_pùe


	)

248 
	#dup
 
_dup


	)

249 
	#dup2
 
_dup2


	)

250 
	#°©
 
_°©


	)

251 
	#f°©
 
_f°©


	)

252 
	#l£ek
 
_l£ek


	)

253 
	#ªad
 
_ªad


	)

254 
	#wrôe
 
_wrôe


	)

255 
	#˛o£
 
_˛o£


	)

256 
	#gëpid
 
_gëpid


	)

257 
	#utime
 
_utime


	)

258 
	~<sys/utime.h
>

261 
	~"ho°.h
"

262 
	~"misc.h
"

263 
	~"machöe.h
"

264 
	~"ªgs.h
"

265 
	~"mem‹y.h
"

266 
	~"lﬂdî.h
"

267 
	~"sim.h
"

268 
	~"ídün.h
"

269 
	~"eio.h
"

270 
	~"sysˇŒ.h
"

272 
	#OSF_SYS_sysˇŒ
 0

	)

274 
	#OSF_SYS_f‹k
 2

	)

275 
	#OSF_SYS_ªad
 3

	)

277 
	#OSF_SYS_ﬁd_›í
 5

	)

278 
	#OSF_SYS_˛o£
 6

	)

279 
	#OSF_SYS_waô4
 7

	)

280 
	#OSF_SYS_ﬁd_¸ót
 8

	)

281 
	#OSF_SYS_lök
 9

	)

282 
	#OSF_SYS_u∆ök
 10

	)

283 
	#OSF_SYS_execv
 11

	)

284 
	#OSF_SYS_chdú
 12

	)

285 
	#OSF_SYS_fchdú
 13

	)

286 
	#OSF_SYS_mknod
 14

	)

287 
	#OSF_SYS_chmod
 15

	)

288 
	#OSF_SYS_chown
 16

	)

289 
	#OSF_SYS_obªak
 17

	)

290 
	#OSF_SYS_gëfs°©
 18

	)

291 
	#OSF_SYS_l£ek
 19

	)

292 
	#OSF_SYS_gëpid
 20

	)

293 
	#OSF_SYS_mou¡
 21

	)

294 
	#OSF_SYS_unmou¡
 22

	)

295 
	#OSF_SYS_£tuid
 23

	)

296 
	#OSF_SYS_gëuid
 24

	)

297 
	#OSF_SYS_exec_wôh_lﬂdî
 25

	)

298 
	#OSF_SYS_±ø˚
 26

	)

299 #ifde‡ 
COMPAT_43


300 
	#OSF_SYS_ƒecvmsg
 27

	)

301 
	#OSF_SYS_n£ndmsg
 28

	)

302 
	#OSF_SYS_ƒecv‰om
 29

	)

303 
	#OSF_SYS_«c˚±
 30

	)

304 
	#OSF_SYS_ngë≥î«me
 31

	)

305 
	#OSF_SYS_ngësock«me
 32

	)

307 
	#OSF_SYS_ªcvmsg
 27

	)

308 
	#OSF_SYS_£ndmsg
 28

	)

309 
	#OSF_SYS_ªcv‰om
 29

	)

310 
	#OSF_SYS_ac˚±
 30

	)

311 
	#OSF_SYS_gë≥î«me
 31

	)

312 
	#OSF_SYS_gësock«me
 32

	)

314 
	#OSF_SYS_ac˚ss
 33

	)

315 
	#OSF_SYS_chÊags
 34

	)

316 
	#OSF_SYS_fchÊags
 35

	)

317 
	#OSF_SYS_sync
 36

	)

318 
	#OSF_SYS_kûl
 37

	)

319 
	#OSF_SYS_ﬁd_°©
 38

	)

320 
	#OSF_SYS_£çgid
 39

	)

321 
	#OSF_SYS_ﬁd_l°©
 40

	)

322 
	#OSF_SYS_dup
 41

	)

323 
	#OSF_SYS_pùe
 42

	)

324 
	#OSF_SYS_£t_¥ogøm_©åibuãs
 43

	)

325 
	#OSF_SYS_¥ofû
 44

	)

326 
	#OSF_SYS_›í
 45

	)

328 
	#OSF_SYS_gëgid
 47

	)

329 
	#OSF_SYS_sig¥ocmask
 48

	)

330 
	#OSF_SYS_gëlogö
 49

	)

331 
	#OSF_SYS_£éogö
 50

	)

332 
	#OSF_SYS_ac˘
 51

	)

333 
	#OSF_SYS_sig≥ndög
 52

	)

334 
	#OSF_SYS_io˘l
 54

	)

335 
	#OSF_SYS_ªboŸ
 55

	)

336 
	#OSF_SYS_ªvoke
 56

	)

337 
	#OSF_SYS_symlök
 57

	)

338 
	#OSF_SYS_ªadlök
 58

	)

339 
	#OSF_SYS_execve
 59

	)

340 
	#OSF_SYS_umask
 60

	)

341 
	#OSF_SYS_chroŸ
 61

	)

342 
	#OSF_SYS_ﬁd_f°©
 62

	)

343 
	#OSF_SYS_gëpgΩ
 63

	)

344 
	#OSF_SYS_gë∑gesize
 64

	)

345 
	#OSF_SYS_mªm≠
 65

	)

346 
	#OSF_SYS_vf‹k
 66

	)

347 
	#OSF_SYS_°©
 67

	)

348 
	#OSF_SYS_l°©
 68

	)

349 
	#OSF_SYS_sbrk
 69

	)

350 
	#OSF_SYS_s°k
 70

	)

351 
	#OSF_SYS_mm≠
 71

	)

352 
	#OSF_SYS_ovadvi£
 72

	)

353 
	#OSF_SYS_munm≠
 73

	)

354 
	#OSF_SYS_m¥Ÿe˘
 74

	)

355 
	#OSF_SYS_madvi£
 75

	)

356 
	#OSF_SYS_ﬁd_vh™gup
 76

	)

357 
	#OSF_SYS_kmodˇŒ
 77

	)

358 
	#OSF_SYS_möc‹e
 78

	)

359 
	#OSF_SYS_gëgroups
 79

	)

360 
	#OSF_SYS_£tgroups
 80

	)

361 
	#OSF_SYS_ﬁd_gëpgΩ
 81

	)

362 
	#OSF_SYS_£çgΩ
 82

	)

363 
	#OSF_SYS_£tôimî
 83

	)

364 
	#OSF_SYS_ﬁd_waô
 84

	)

365 
	#OSF_SYS_èbÀ
 85

	)

366 
	#OSF_SYS_gëôimî
 86

	)

367 
	#OSF_SYS_gëho°«me
 87

	)

368 
	#OSF_SYS_£tho°«me
 88

	)

369 
	#OSF_SYS_gëdèbÀsize
 89

	)

370 
	#OSF_SYS_dup2
 90

	)

371 
	#OSF_SYS_f°©
 91

	)

372 
	#OSF_SYS_f˙é
 92

	)

373 
	#OSF_SYS_£À˘
 93

	)

374 
	#OSF_SYS_pﬁl
 94

	)

375 
	#OSF_SYS_fsync
 95

	)

376 
	#OSF_SYS_£çri‹ôy
 96

	)

377 
	#OSF_SYS_sockë
 97

	)

378 
	#OSF_SYS_c⁄√˘
 98

	)

379 #ifde‡ 
COMPAT_43


380 
	#OSF_SYS_ac˚±
 99

	)

382 
	#OSF_SYS_ﬁd_ac˚±
 99

	)

384 
	#OSF_SYS_gë¥i‹ôy
 100

	)

385 #ifde‡ 
COMPAT_43


386 
	#OSF_SYS_£nd
 101

	)

387 
	#OSF_SYS_ªcv
 102

	)

389 
	#OSF_SYS_ﬁd_£nd
 101

	)

390 
	#OSF_SYS_ﬁd_ªcv
 102

	)

392 
	#OSF_SYS_sigªtu∫
 103

	)

393 
	#OSF_SYS_böd
 104

	)

394 
	#OSF_SYS_£tsock›t
 105

	)

395 
	#OSF_SYS_li°í
 106

	)

396 
	#OSF_SYS_∂ock
 107

	)

397 
	#OSF_SYS_ﬁd_sigvec
 108

	)

398 
	#OSF_SYS_ﬁd_sigblock
 109

	)

399 
	#OSF_SYS_ﬁd_sig£tmask
 110

	)

400 
	#OSF_SYS_sigsu•íd
 111

	)

401 
	#OSF_SYS_sig°ack
 112

	)

402 #ifde‡ 
COMPAT_43


403 
	#OSF_SYS_ªcvmsg
 113

	)

404 
	#OSF_SYS_£ndmsg
 114

	)

406 
	#OSF_SYS_ﬁd_ªcvmsg
 113

	)

407 
	#OSF_SYS_ﬁd_£ndmsg
 114

	)

410 
	#OSF_SYS_gëtimeofday
 116

	)

411 
	#OSF_SYS_gërußge
 117

	)

412 
	#OSF_SYS_gësock›t
 118

	)

413 
	#OSF_SYS_ªadv
 120

	)

414 
	#OSF_SYS_wrôev
 121

	)

415 
	#OSF_SYS_£âimeofday
 122

	)

416 
	#OSF_SYS_fchown
 123

	)

417 
	#OSF_SYS_fchmod
 124

	)

418 #ifde‡ 
COMPAT_43


419 
	#OSF_SYS_ªcv‰om
 125

	)

421 
	#OSF_SYS_ﬁd_ªcv‰om
 125

	)

423 
	#OSF_SYS_£åeuid
 126

	)

424 
	#OSF_SYS_£åegid
 127

	)

425 
	#OSF_SYS_ª«me
 128

	)

426 
	#OSF_SYS_åunˇã
 129

	)

427 
	#OSF_SYS_·runˇã
 130

	)

428 
	#OSF_SYS_Êock
 131

	)

429 
	#OSF_SYS_£tgid
 132

	)

430 
	#OSF_SYS_£ndto
 133

	)

431 
	#OSF_SYS_shutdown
 134

	)

432 
	#OSF_SYS_sockë∑ú
 135

	)

433 
	#OSF_SYS_mkdú
 136

	)

434 
	#OSF_SYS_rmdú
 137

	)

435 
	#OSF_SYS_utimes
 138

	)

437 
	#OSF_SYS_adjtime
 140

	)

438 #ifde‡ 
COMPAT_43


439 
	#OSF_SYS_gë≥î«me
 141

	)

441 
	#OSF_SYS_ﬁd_gë≥î«me
 141

	)

443 
	#OSF_SYS_gëho°id
 142

	)

444 
	#OSF_SYS_£tho°id
 143

	)

445 
	#OSF_SYS_gëæimô
 144

	)

446 
	#OSF_SYS_£ålimô
 145

	)

447 
	#OSF_SYS_ﬁd_kûÕg
 146

	)

448 
	#OSF_SYS_£tsid
 147

	)

449 
	#OSF_SYS_quŸa˘l
 148

	)

450 
	#OSF_SYS_ﬁdquŸa
 149

	)

451 #ifde‡ 
COMPAT_43


452 
	#OSF_SYS_gësock«me
 150

	)

454 
	#OSF_SYS_ﬁd_gësock«me
 150

	)

456 
	#OSF_SYS_pid_block
 153

	)

457 
	#OSF_SYS_pid_unblock
 154

	)

458 
	#OSF_SYS_siga˘i⁄
 156

	)

459 
	#OSF_SYS_sigwaô¥im
 157

	)

460 
	#OSF_SYS_nfssvc
 158

	)

461 
	#OSF_SYS_gëdúíåõs
 159

	)

462 
	#OSF_SYS_°©fs
 160

	)

463 
	#OSF_SYS_f°©fs
 161

	)

464 
	#OSF_SYS_async_d´m⁄
 163

	)

465 
	#OSF_SYS_gëfh
 164

	)

466 
	#OSF_SYS_gëdomaö«me
 165

	)

467 
	#OSF_SYS_£tdomaö«me
 166

	)

468 
	#OSF_SYS_exp‹tfs
 169

	)

469 
	#OSF_SYS_Æt_∂ock
 181

	)

470 
	#OSF_SYS_gëm¡
 184

	)

471 
	#OSF_SYS_Æt_sig≥ndög
 187

	)

472 
	#OSF_SYS_Æt_£tsid
 188

	)

473 
	#OSF_SYS_sw≠⁄
 199

	)

474 
	#OSF_SYS_msg˘l
 200

	)

475 
	#OSF_SYS_msggë
 201

	)

476 
	#OSF_SYS_msgrcv
 202

	)

477 
	#OSF_SYS_msg¢d
 203

	)

478 
	#OSF_SYS_£m˘l
 204

	)

479 
	#OSF_SYS_£mgë
 205

	)

480 
	#OSF_SYS_£m›
 206

	)

481 
	#OSF_SYS_u«me
 207

	)

482 
	#OSF_SYS_lchown
 208

	)

483 
	#OSF_SYS_shm©
 209

	)

484 
	#OSF_SYS_shm˘l
 210

	)

485 
	#OSF_SYS_shmdt
 211

	)

486 
	#OSF_SYS_shmgë
 212

	)

487 
	#OSF_SYS_mvÆid
 213

	)

488 
	#OSF_SYS_gëaddªssc⁄f
 214

	)

489 
	#OSF_SYS_m¶ìp
 215

	)

490 
	#OSF_SYS_mwakeup
 216

	)

491 
	#OSF_SYS_msync
 217

	)

492 
	#OSF_SYS_sig«l
 218

	)

493 
	#OSF_SYS_utc_gëtime
 219

	)

494 
	#OSF_SYS_utc_adjtime
 220

	)

495 
	#OSF_SYS_£curôy
 222

	)

496 
	#OSF_SYS_klﬂdˇŒ
 223

	)

497 
	#OSF_SYS_gëpgid
 233

	)

498 
	#OSF_SYS_gësid
 234

	)

499 
	#OSF_SYS_sigÆt°ack
 235

	)

500 
	#OSF_SYS_waôid
 236

	)

501 
	#OSF_SYS_¥io˙é£t
 237

	)

502 
	#OSF_SYS_sig£nd£t
 238

	)

503 
	#OSF_SYS_£t_•ecuœtive
 239

	)

504 
	#OSF_SYS_msfs_sysˇŒ
 240

	)

505 
	#OSF_SYS_sysöfo
 241

	)

506 
	#OSF_SYS_uadmö
 242

	)

507 
	#OSF_SYS_fu£r
 243

	)

508 
	#OSF_SYS_¥›li°_sysˇŒ
 244

	)

509 
	#OSF_SYS_¡p_adjtime
 245

	)

510 
	#OSF_SYS_¡p_gëtime
 246

	)

511 
	#OSF_SYS_∑thc⁄f
 247

	)

512 
	#OSF_SYS_Â©hc⁄f
 248

	)

513 
	#OSF_SYS_uswôch
 250

	)

514 
	#OSF_SYS_u¶ìp_thªad
 251

	)

515 
	#OSF_SYS_aud˙é
 252

	)

516 
	#OSF_SYS_audgí
 253

	)

517 
	#OSF_SYS_sysfs
 254

	)

518 
	#OSF_SYS_subOSF_SYS_öfo
 255

	)

519 
	#OSF_SYS_gësysöfo
 256

	)

520 
	#OSF_SYS_£tsysöfo
 257

	)

521 
	#OSF_SYS_afs_sysˇŒ
 258

	)

522 
	#OSF_SYS_sw≠˘l
 259

	)

523 
	#OSF_SYS_mem˙é
 260

	)

524 
	#OSF_SYS_fd©async
 261

	)

527 
	sxœã_èbÀ_t


529 
	mèrgë_vÆ
;

530 
	mho°_vÆ
;

534 
	$xœã_¨g
(
èrgë_vÆ
, 
xœã_èbÀ_t
 *
m≠
, 
m≠_sz
, *
«me
)

536 
i
;

538 
i
=0; i < 
m≠_sz
; i++)

540 i‡(
èrgë_vÆ
 =
m≠
[
i
].target_val)

541  
m≠
[
i
].
ho°_vÆ
;

545 
	`w¨n
("couldÇŸÅøn¶©ê¨gumíàf‹ `%s': %d", 
«me
, 
èrgë_vÆ
);

546  
èrgë_vÆ
;

547 
	}
}

551 
	#MAXBUFSIZE
 1024

	)

557 
	#NUM_IOCTL_BYTES
 128

	)

560 
	#OSF_TIOCGETP
 0x40067408

	)

561 
	#OSF_FIONREAD
 0x4004667f

	)

565 
	sosf_°©buf


567 
w‹d_t
 
	mosf_°_dev
;

568 
w‹d_t
 
	mosf_°_öo
;

569 
w‹d_t
 
	mosf_°_mode
;

570 
hÆf_t
 
	mosf_°_∆ök
;

571 
hÆf_t
 
	m∑d0
;

572 
w‹d_t
 
	mosf_°_uid
;

573 
w‹d_t
 
	mosf_°_gid
;

574 
w‹d_t
 
	mosf_°_rdev
;

575 
w‹d_t
 
	m∑d1
;

576 
qw‹d_t
 
	mosf_°_size
;

577 
w‹d_t
 
	mosf_°_©ime
;

578 
w‹d_t
 
	mosf_°_•¨e1
;

579 
w‹d_t
 
	mosf_°_mtime
;

580 
w‹d_t
 
	mosf_°_•¨e2
;

581 
w‹d_t
 
	mosf_°_˘ime
;

582 
w‹d_t
 
	mosf_°_•¨e3
;

583 
w‹d_t
 
	mosf_°_blksize
;

584 
w‹d_t
 
	mosf_°_blocks
;

585 
w‹d_t
 
	mosf_°_gínum
;

586 
w‹d_t
 
	mosf_°_•¨e4
;

589 
	sosf_sgâyb
 {

590 
byã_t
 
	msg_i•ìd
;

591 
byã_t
 
	msg_o•ìd
;

592 
byã_t
 
	msg_îa£
;

593 
byã_t
 
	msg_kûl
;

594 
shÆf_t
 
	msg_Êags
;

597 
	#OSF_NSIG
 32

	)

599 
	#OSF_SIG_BLOCK
 1

	)

600 
	#OSF_SIG_UNBLOCK
 2

	)

601 
	#OSF_SIG_SETMASK
 3

	)

603 
	sosf_sigc⁄ãxt
 {

604 
qw‹d_t
 
	msc_⁄°ack
;

605 
qw‹d_t
 
	msc_mask
;

606 
qw‹d_t
 
	msc_pc
;

607 
qw‹d_t
 
	msc_ps
;

608 
qw‹d_t
 
	msc_ªgs
[32];

609 
qw‹d_t
 
	msc_ow√dÂ
;

610 
qw‹d_t
 
	msc_Âªgs
[32];

611 
qw‹d_t
 
	msc_Â¸
;

612 
qw‹d_t
 
	msc_Â_c⁄åﬁ
;

615 
	sosf_°©fs
 {

616 
shÆf_t
 
	mf_ty≥
;

617 
shÆf_t
 
	mf_Êags
;

618 
w‹d_t
 
	mf_fsize
;

619 
w‹d_t
 
	mf_bsize
;

620 
w‹d_t
 
	mf_blocks
;

622 
w‹d_t
 
	mf_b‰ì
;

623 
w‹d_t
 
	mf_bavaû
;

624 
w‹d_t
 
	mf_fûes
;

625 
w‹d_t
 
	mf_f‰ì
;

626 
qw‹d_t
 
	mf_fsid
;

627 
w‹d_t
 
	mf_•¨e
[9];

630 
	sosf_timevÆ


632 
sw‹d_t
 
	mosf_tv_£c
;

633 
sw‹d_t
 
	mosf_tv_u£c
;

636 
	sosf_timez⁄e


638 
sw‹d_t
 
	mosf_tz_möuãswe°
;

639 
sw‹d_t
 
	mosf_tz_d°time
;

644 
	sosf_rußge


646 
osf_timevÆ
 
	mosf_ru_utime
;

647 
osf_timevÆ
 
	mosf_ru_°ime
;

648 
sw‹d_t
 
	mosf_ru_maxrss
;

649 
sw‹d_t
 
	mosf_ru_ixrss
;

650 
sw‹d_t
 
	mosf_ru_idrss
;

651 
sw‹d_t
 
	mosf_ru_i§ss
;

652 
sw‹d_t
 
	mosf_ru_möÊt
;

653 
sw‹d_t
 
	mosf_ru_majÊt
;

654 
sw‹d_t
 
	mosf_ru_nsw≠
;

655 
sw‹d_t
 
	mosf_ru_öblock
;

656 
sw‹d_t
 
	mosf_ru_oublock
;

657 
sw‹d_t
 
	mosf_ru_msg¢d
;

658 
sw‹d_t
 
	mosf_ru_msgrcv
;

659 
sw‹d_t
 
	mosf_ru_nsig«ls
;

660 
sw‹d_t
 
	mosf_ru_nvcsw
;

661 
sw‹d_t
 
	mosf_ru_nivcsw
;

664 
	sosf_æimô


666 
qw‹d_t
 
	mosf_æim_cur
;

667 
qw‹d_t
 
	mosf_æim_max
;

670 
	sosf_sockaddr


672 
hÆf_t
 
	mß_Ámûy
;

673 
byã_t
 
	mß_d©a
[24];

676 
	sosf_iovec


678 
md_addr_t
 
	miov_ba£
;

679 
w‹d_t
 
	miov_Àn
;

680 
w‹d_t
 
	m∑d
;

684 
	#OSF_DIRENT_SZ
(
STR
) \

685 ((
w‹d_t
Ë+ 2*(
hÆf_t
Ë+ (((
	`°æí
(
STR
Ë+ 1Ë+ 3)/4)*4)

	)

688 
	sosf_dúít


690 
w‹d_t
 
	md_öo
;

691 
hÆf_t
 
	md_ª˛í
;

692 
hÆf_t
 
	md_«mÀn
;

693 
	md_«me
[256];

703 
	#OSF_O_RDONLY
 0x0000

	)

704 
	#OSF_O_WRONLY
 0x0001

	)

705 
	#OSF_O_RDWR
 0x0002

	)

706 
	#OSF_O_NONBLOCK
 0x0004

	)

707 
	#OSF_O_APPEND
 0x0008

	)

708 
	#OSF_O_CREAT
 0x0200

	)

709 
	#OSF_O_TRUNC
 0x0400

	)

710 
	#OSF_O_EXCL
 0x0800

	)

711 
	#OSF_O_NOCTTY
 0x1000

	)

712 
	#OSF_O_SYNC
 0x4000

	)

716 
	mosf_Êag
;

717 
	mloˇl_Êag
;

718 } 
	gosf_Êag_èbÀ
[] = {

720 #ifde‡
_MSC_VER


721 { 
OSF_O_RDONLY
, 
_O_RDONLY
 },

722 { 
OSF_O_WRONLY
, 
_O_WRONLY
 },

723 { 
OSF_O_RDWR
, 
_O_RDWR
 },

724 { 
OSF_O_APPEND
, 
_O_APPEND
 },

725 { 
OSF_O_CREAT
, 
_O_CREAT
 },

726 { 
OSF_O_TRUNC
, 
_O_TRUNC
 },

727 { 
OSF_O_EXCL
, 
_O_EXCL
 },

728 #ifde‡
_O_NONBLOCK


729 { 
OSF_O_NONBLOCK
, 
_O_NONBLOCK
 },

731 #ifde‡
_O_NOCTTY


732 { 
OSF_O_NOCTTY
, 
_O_NOCTTY
 },

734 #ifde‡
_O_SYNC


735 { 
OSF_O_SYNC
, 
_O_SYNC
 },

738 { 
OSF_O_RDONLY
, 
O_RDONLY
 },

739 { 
OSF_O_WRONLY
, 
O_WRONLY
 },

740 { 
OSF_O_RDWR
, 
O_RDWR
 },

741 { 
OSF_O_APPEND
, 
O_APPEND
 },

742 { 
OSF_O_CREAT
, 
O_CREAT
 },

743 { 
OSF_O_TRUNC
, 
O_TRUNC
 },

744 { 
OSF_O_EXCL
, 
O_EXCL
 },

745 { 
OSF_O_NONBLOCK
, 
O_NONBLOCK
 },

746 { 
OSF_O_NOCTTY
, 
O_NOCTTY
 },

747 #ifde‡
O_SYNC


748 { 
OSF_O_SYNC
, 
O_SYNC
 },

752 
	#OSF_NFLAGS
 ((
osf_Êag_èbÀ
)/(osf_Êag_èbÀ[0]))

	)

754 
qw‹d_t
 
	gsigmask
 = 0;

756 
qw‹d_t
 
	gsiga˘i⁄_¨øy
[
OSF_NSIG
] =

760 
	#OSF_SO_DEBUG
 0x0001

	)

761 
	#OSF_SO_ACCEPTCONN
 0x0002

	)

762 
	#OSF_SO_REUSEADDR
 0x0004

	)

763 
	#OSF_SO_KEEPALIVE
 0x0008

	)

764 
	#OSF_SO_DONTROUTE
 0x0010

	)

765 
	#OSF_SO_BROADCAST
 0x0020

	)

766 
	#OSF_SO_USELOOPBACK
 0x0040

	)

767 
	#OSF_SO_LINGER
 0x0080

	)

768 
	#OSF_SO_OOBINLINE
 0x0100

	)

769 
	#OSF_SO_REUSEPORT
 0x0200

	)

771 
xœã_èbÀ_t
 
	gsock›t_m≠
[] =

773 { 
OSF_SO_DEBUG
, 
SO_DEBUG
 },

774 #ifde‡
SO_ACCEPTCONN


775 { 
OSF_SO_ACCEPTCONN
, 
SO_ACCEPTCONN
 },

777 { 
OSF_SO_REUSEADDR
, 
SO_REUSEADDR
 },

778 { 
OSF_SO_KEEPALIVE
, 
SO_KEEPALIVE
 },

779 { 
OSF_SO_DONTROUTE
, 
SO_DONTROUTE
 },

780 { 
OSF_SO_BROADCAST
, 
SO_BROADCAST
 },

781 #ifde‡
SO_USELOOPBACK


782 { 
OSF_SO_USELOOPBACK
, 
SO_USELOOPBACK
 },

784 { 
OSF_SO_LINGER
, 
SO_LINGER
 },

785 { 
OSF_SO_OOBINLINE
, 
SO_OOBINLINE
 },

786 #ifde‡
SO_REUSEPORT


787 { 
OSF_SO_REUSEPORT
, 
SO_REUSEPORT
 }

792 
	#OSF_TCP_NODELAY
 0x01

	)

793 
	#OSF_TCP_MAXSEG
 0x02

	)

794 
	#OSF_TCP_RPTR2RXT
 0x03

	)

795 
	#OSF_TCP_KEEPIDLE
 0x04

	)

796 
	#OSF_TCP_KEEPINTVL
 0x05

	)

797 
	#OSF_TCP_KEEPCNT
 0x06

	)

798 
	#OSF_TCP_KEEPINIT
 0x07

	)

799 
	#OSF_TCP_PUSH
 0x08

	)

800 
	#OSF_TCP_NODELACK
 0x09

	)

802 
xœã_èbÀ_t
 
	gt˝›t_m≠
[] =

804 { 
OSF_TCP_NODELAY
, 
TCP_NODELAY
 },

805 { 
OSF_TCP_MAXSEG
, 
TCP_MAXSEG
 },

806 #ifde‡
TCP_RPTR2RXT


807 { 
OSF_TCP_RPTR2RXT
, 
TCP_RPTR2RXT
 },

809 #ifde‡
TCP_KEEPIDLE


810 { 
OSF_TCP_KEEPIDLE
, 
TCP_KEEPIDLE
 },

812 #ifde‡
TCP_KEEPINTVL


813 { 
OSF_TCP_KEEPINTVL
, 
TCP_KEEPINTVL
 },

815 #ifde‡
TCP_KEEPCNT


816 { 
OSF_TCP_KEEPCNT
, 
TCP_KEEPCNT
 },

818 #ifde‡
TCP_KEEPINIT


819 { 
OSF_TCP_KEEPINIT
, 
TCP_KEEPINIT
 },

821 #ifde‡
TCP_PUSH


822 { 
OSF_TCP_PUSH
, 
TCP_PUSH
 },

824 #ifde‡
TCP_NODELACK


825 { 
OSF_TCP_NODELACK
, 
TCP_NODELACK
 }

830 
	#OSF_SOL_SOCKET
 0xfff‡

	)

831 
	#OSF_SOL_IP
 0

	)

832 
	#OSF_SOL_TCP
 6

	)

833 
	#OSF_SOL_UDP
 17

	)

835 
xœã_èbÀ_t
 
	gsockÀvñ_m≠
[] =

837 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
Ë|| deföed(
__FªeBSD__
)

838 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

839 { 
OSF_SOL_IP
, 
IPPROTO_IP
 },

840 { 
OSF_SOL_TCP
, 
IPPROTO_TCP
 },

841 { 
OSF_SOL_UDP
, 
IPPROTO_UDP
 }

843 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

844 { 
OSF_SOL_IP
, 
SOL_IP
 },

845 { 
OSF_SOL_TCP
, 
SOL_TCP
 },

846 { 
OSF_SOL_UDP
, 
SOL_UDP
 }

851 
	#OSF_AF_UNSPEC
 0

	)

852 
	#OSF_AF_UNIX
 1

	)

853 
	#OSF_AF_INET
 2

	)

854 
	#OSF_AF_IMPLINK
 3

	)

855 
	#OSF_AF_PUP
 4

	)

856 
	#OSF_AF_CHAOS
 5

	)

857 
	#OSF_AF_NS
 6

	)

858 
	#OSF_AF_ISO
 7

	)

860 
xœã_èbÀ_t
 
	gÁmûy_m≠
[] =

862 { 
OSF_AF_UNSPEC
, 
AF_UNSPEC
 },

863 { 
OSF_AF_UNIX
, 
AF_UNIX
 },

864 { 
OSF_AF_INET
, 
AF_INET
 },

865 #ifde‡
AF_IMPLINK


866 { 
OSF_AF_IMPLINK
, 
AF_IMPLINK
 },

868 #ifde‡
AF_PUP


869 { 
OSF_AF_PUP
, 
AF_PUP
 },

871 #ifde‡
AF_CHAOS


872 { 
OSF_AF_CHAOS
, 
AF_CHAOS
 },

874 #ifde‡
AF_NS


875 { 
OSF_AF_NS
, 
AF_NS
 },

877 #ifde‡
AF_ISO


878 { 
OSF_AF_ISO
, 
AF_ISO
 }

883 
	#OSF_SOCK_STREAM
 1

	)

884 
	#OSF_SOCK_DGRAM
 2

	)

885 
	#OSF_SOCK_RAW
 3

	)

886 
	#OSF_SOCK_RDM
 4

	)

887 
	#OSF_SOCK_SEQPACKET
 5

	)

889 
xœã_èbÀ_t
 
	gsockty≥_m≠
[] =

891 { 
OSF_SOCK_STREAM
, 
SOCK_STREAM
 },

892 { 
OSF_SOCK_DGRAM
, 
SOCK_DGRAM
 },

893 { 
OSF_SOCK_RAW
, 
SOCK_RAW
 },

894 { 
OSF_SOCK_RDM
, 
SOCK_RDM
 },

895 { 
OSF_SOCK_SEQPACKET
, 
SOCK_SEQPACKET
 }

899 
	#OSF_TBL_SYSINFO
 12

	)

900 
	sosf_tbl_sysöfo


902 
	msi_u£r
;

903 
	msi_ni˚
;

904 
	msi_sys
;

905 
	msi_idÀ
;

906 
	msi_hz
;

907 
	msi_phz
;

908 
	msi_boŸtime
;

909 
	mwaô
;

924 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

925 
mem_ac˚ss_‚
 
mem_‚
,

926 
mem_t
 *
mem
,

927 
md_ö°_t
 
ö°
,

928 
åa˚abÀ
)

930 
qw‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_V0
];

933 i‡(
syscode
 =
OSF_SYS_sysˇŒ
)

934 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

937 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

939 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

942 i‡(
syscode
 =
OSF_SYS_sigªtu∫
)

944 
i
;

945 
osf_sigc⁄ãxt
 
sc
;

946 
md_addr_t
 
sc_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

948 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
sc_addr
,

949 &
sc
, (
osf_sigc⁄ãxt
));

950 
ªgs
->
ªgs_NPC
 = 
sc
.
sc_pc
;

951 
i
=0; i < 32; ++i)

952 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

953 
i
=0; i < 32; ++i)

954 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

955 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

963 
syscode
)

965 
OSF_SYS_exô
:

967 
	`l⁄gjmp
(
sim_exô_buf
,

968  (
ªgs
->
ªgs_R
[
MD_REG_A0
] & 0xff) + 1);

971 
OSF_SYS_ªad
:

973 *
buf
;

976 i‡(!(
buf
 =

977 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

978 
	`Áèl
("out of memory in SYS_read");

982  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

983 
	`ªad
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,

984  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

985 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

986 && 
î∫o
 =
EAGAIN
);

989 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

990 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

993 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

994 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

998 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

999  
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,Ñegs->ªgs_R[
MD_REG_A2
]);

1002 
	`‰ì
(
buf
);

1006 
OSF_SYS_wrôe
:

1008 *
buf
;

1011 i‡(!(
buf
 =

1012 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

1013 
	`Áèl
("out of memory in SYS_write");

1016 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,

1017  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1020 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

1024  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1025 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
sim_¥ogfd
);

1032  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1033 
	`wrôe
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1034 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1035 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

1036 && 
î∫o
 =
EAGAIN
);

1040 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] =ªgs->ªgs_R[
MD_REG_A2
])

1041 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1044 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1045 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1049 
	`‰ì
(
buf
);

1053 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1055 
OSF_SYS_gëdomaö«me
:

1058 *
buf
;

1060 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1061 i‡(!
buf
)

1062 
	`Áèl
("out of virtual memory in gethostname()");

1064  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1065 
	`gëdomaö«me
–
buf
,

1066  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1069 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1070 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1073 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1074 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1078 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1079  
ªgs
->
ªgs_R
[
MD_REG_A0
],

1080 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1085 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1087 
OSF_SYS_Êock
:

1090 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1091 
	`Êock
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1092  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1095 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1096 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1099 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1100 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1106 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1108 
OSF_SYS_böd
:

1110 c⁄° 
sockaddr
 
a_sock
;

1112 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1113 (*)&
a_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1115 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1116 
	`böd
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1117 &
a_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1120 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1121 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1124 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1125 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1131 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1133 
OSF_SYS_£ndto
:

1135 *
buf
 = 
NULL
;

1136 
sockaddr
 
d_sock
;

1137 
buf_Àn
 = 0;

1139 
buf_Àn
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1141 i‡(
buf_Àn
 > 0)

1142 
buf
 = (*Ë
	`mÆloc
(
buf_Àn
*());

1144 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1145 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1147 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1148 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1149 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1151 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1152 
	`£ndto
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1153 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1154 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
],

1155 &
d_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1157 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1158 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1161 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1162 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1163 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1166 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1167 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1170 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1171 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1174 i‡(
buf
 !
NULL
)

1175 
	`‰ì
(
buf
);

1180 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1182 
OSF_SYS_ﬁd_ªcv‰om
:

1183 
OSF_SYS_ªcv‰om
:

1185 
addr_Àn
;

1186 *
buf
;

1187 
sockaddr
 *
a_sock
;

1189 
buf
 = (*Ë
	`mÆloc
(()*
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1191 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1192 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1194 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1195 &
addr_Àn
, ());

1197 
a_sock
 = (
sockaddr
 *)
	`mÆloc
(
addr_Àn
);

1199 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1200 
a_sock
, 
addr_Àn
);

1202 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1203 
	`ªcv‰om
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1204 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1205 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
], 
a_sock
,&
addr_Àn
);

1207 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1208 
buf
, (Ë
ªgs
->
ªgs_R
[
MD_REG_V0
]);

1210 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1211 &
addr_Àn
, ());

1213 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1214 
a_sock
, 
addr_Àn
);

1217 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1218 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1221 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1222 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1224 i‡(
buf
 !
NULL
)

1225 
	`‰ì
(
buf
);

1230 
OSF_SYS_›í
:

1232 
buf
[
MAXBUFSIZE
];

1233 
i
;

1234 
osf_Êags
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
loˇl_Êags
 = 0;

1237 
i
=0; i < 
OSF_NFLAGS
; i++)

1239 i‡(
osf_Êags
 & 
osf_Êag_èbÀ
[
i
].
osf_Êag
)

1241 
osf_Êags
 &~
osf_Êag_èbÀ
[
i
].
osf_Êag
;

1242 
loˇl_Êags
 |
osf_Êag_èbÀ
[
i
].
loˇl_Êag
;

1246 i‡(
osf_Êags
 != 0)

1247 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
osf_Êags
);

1250 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1253  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1254 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1257 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1258 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1261 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1262 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1267 
OSF_SYS_˛o£
:

1269 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0

1270 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1

1271 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 2)

1273 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1278 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`˛o£
–ªgs->ªgs_R[
MD_REG_A0
]);

1281 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1282 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1285 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1286 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1291 
OSF_SYS_¸ót
:

1293 
buf
[
MAXBUFSIZE
];

1296 
	`mem_°r˝y
(
mem_‚
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1299  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1300 
	`¸ót
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1303 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1304 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1307 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1308 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1314 
OSF_SYS_u∆ök
:

1316 
buf
[
MAXBUFSIZE
];

1319 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1322  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u∆ök
(
buf
);

1325 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1326 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1329 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1330 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1335 
OSF_SYS_chdú
:

1337 
buf
[
MAXBUFSIZE
];

1340 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1343  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`chdú
(
buf
);

1346 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1347 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1350 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1351 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1356 
OSF_SYS_chmod
:

1358 
buf
[
MAXBUFSIZE
];

1361 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1364  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1365 
	`chmod
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1368 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1369 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1372 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1373 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1378 
OSF_SYS_chown
:

1379 #ifde‡
_MSC_VER


1380 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

1381 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1384 
buf
[
MAXBUFSIZE
];

1387 
	`mem_°r˝y
(
mem_‚
, 
mem
,
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1390  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1391 
	`chown
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1392  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1395 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1396 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1399 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1400 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1406 
OSF_SYS_sbrk
:

1408 
sqw‹d_t
 
dñè
;

1409 
md_addr_t
 
addr
;

1411 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1412 
addr
 = 
ld_brk_poöt
 + 
dñè
;

1414 i‡(
vîbo£
)

1415 
	`myÂrötf
(
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

1417 
ld_brk_poöt
 = 
addr
;

1418 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1419 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1421 i‡(
vîbo£
)

1422 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1426 i‡–
addr
 < 
ªgs
->
ªgs_R
[
MD_REG_SP
])

1428 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1429 
ld_brk_poöt
 = 
addr
;

1434 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1440 
OSF_SYS_obªak
:

1442 
md_addr_t
 
addr
;

1446 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

1448 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1450 i‡(
vîbo£
)

1451 
	`myÂrötf
(
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

1453 
ld_brk_poöt
 = 
addr
;

1454 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1455 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1457 i‡(
vîbo£
)

1458 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1462 
OSF_SYS_l£ek
:

1464 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1465 
	`l£ek
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1466  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

1469 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1470 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1473 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1474 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1478 
OSF_SYS_gëpid
:

1480  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëpid
();

1483 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1484 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1487 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1488 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1492 
OSF_SYS_gëuid
:

1493 #ifde‡
_MSC_VER


1494 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

1495 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1498  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëuid
();

1499  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëeuid
();

1502 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1503 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1506 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1507 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1512 
OSF_SYS_ac˚ss
:

1514 
buf
[
MAXBUFSIZE
];

1517 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1520  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1521 
	`ac˚ss
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1524 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1525 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1528 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1529 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1534 
OSF_SYS_°©
:

1535 
OSF_SYS_l°©
:

1537 
buf
[
MAXBUFSIZE
];

1538 
osf_°©buf
 
osf_sbuf
;

1539 #ifde‡
_MSC_VER


1540 
_°©
 
sbuf
;

1542 
°©
 
sbuf
;

1546 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1549 i‡(
syscode
 =
OSF_SYS_°©
)

1550  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©
(
buf
, &
sbuf
);

1553 #ifde‡
_MSC_VER


1554 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

1555 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1558  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`l°©
(
buf
, &
sbuf
);

1563 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1564 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1567 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1568 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1572 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1573 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1574 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1575 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1576 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1577 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1578 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1579 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1580 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1581 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1582 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1583 #i‚de‡
_MSC_VER


1584 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1585 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1589 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1590 &
osf_sbuf
, (
osf_°©buf
));

1594 
OSF_SYS_dup
:

1596  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`dup
–ªgs->ªgs_R[
MD_REG_A0
]);

1599 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1600 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1603 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1604 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1609 
OSF_SYS_pùe
:

1611 
fd
[2];

1614 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

1615 
fd
, (fd));

1618  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

1621  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
fd
[0];

1622  
ªgs
->
ªgs_R
[3] = 
fd
[1];

1625 i‡(
ªgs
->
ªgs_R
[7] =(
qw‹d_t
)-1)

1627 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1628 
ªgs
->
ªgs_R
[7] = 1;

1634 
OSF_SYS_gëgid
:

1635 #ifde‡
_MSC_VER


1636 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1637 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1640  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëgid
();

1641  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëegid
();

1644 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1645 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1648 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1649 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1654 
OSF_SYS_io˘l
:

1655  
ªgs
->
ªgs_R
[
MD_REG_A1
])

1657 #i‡!
	`deföed
(
TIOCGETP
Ë&& (deföed(
löux
Ë|| deföed(
__CYGWIN32__
))

1658 
OSF_TIOCGETP
:

1660 
ãrmios
 
lbuf
;

1661 
osf_sgâyb
 
buf
;

1663  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1664 
	`tcgë©å
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1665 &
lbuf
);

1668 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

1669 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

1670 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

1671 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

1672 
buf
.
sg_Êags
 = 0;

1674 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1675  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1676 (
osf_sgâyb
));

1678 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1679 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1682 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1683 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1688 #ifde‡
TIOCGETP


1689 
OSF_TIOCGETP
:

1691 
sgâyb
 
lbuf
;

1692 
osf_sgâyb
 
buf
;

1694  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1695 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1696  
TIOCGETP
,

1697 &
lbuf
);

1700 
buf
.
sg_i•ìd
 = 
lbuf
.sg_ispeed;

1701 
buf
.
sg_o•ìd
 = 
lbuf
.sg_ospeed;

1702 
buf
.
sg_îa£
 = 
lbuf
.sg_erase;

1703 
buf
.
sg_kûl
 = 
lbuf
.sg_kill;

1704 
buf
.
sg_Êags
 = 
lbuf
.sg_flags;

1705 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1706  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1707 (
osf_sgâyb
));

1709 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1710 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1713 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1714 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1719 #ifde‡
FIONREAD


1720 
OSF_FIONREAD
:

1722 
ƒód
;

1724  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1725 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1726  
FIONREAD
,

1727  &
ƒód
);

1729 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1730  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1731 &
ƒód
, (nread));

1733 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1734 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1737 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1738 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1743 #ifde‡
FIONBIO


1744 
FIONBIO
:

1746 
¨g
 = 0;

1748 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1749 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

1750  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1751 &
¨g
, (arg));

1753 #ifde‡
NOTNOW


1754 
	`Ârötf
(
°dîr
, "FIONBIO: %d, %d\n",

1755 ()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1756 
¨g
);

1758  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1759 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1760  
FIONBIO
,

1761  &
¨g
);

1763 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1764 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1765  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1766 &
¨g
, (arg));

1768 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1769 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1772 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1773 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1779 
	`w¨n
("unsupported ioctl call: ioctl(%ld, ...)",

1780 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1781 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1788 
buf
[
NUM_IOCTL_BYTES
];

1789 
loˇl_ªq
 = 0;

1792  
ªgs
->
ªgs_R
[
MD_REG_A1
]) {

1794 
SS_IOCTL_TIOCGETP
:

1795 
loˇl_ªq
 = 
TIOCGETP
;

1797 
SS_IOCTL_TIOCSETP
:

1798 
loˇl_ªq
 = 
TIOCSETP
;

1800 
SS_IOCTL_TCGETP
:

1801 
loˇl_ªq
 = 
TIOCGETP
;

1804 #ifde‡
TCGETA


1805 
SS_IOCTL_TCGETA
:

1806 
loˇl_ªq
 = 
TCGETA
;

1809 #ifde‡
TIOCGLTC


1810 
SS_IOCTL_TIOCGLTC
:

1811 
loˇl_ªq
 = 
TIOCGLTC
;

1814 #ifde‡
TIOCSLTC


1815 
SS_IOCTL_TIOCSLTC
:

1816 
loˇl_ªq
 = 
TIOCSLTC
;

1819 
SS_IOCTL_TIOCGWINSZ
:

1820 
loˇl_ªq
 = 
TIOCGWINSZ
;

1822 #ifde‡
TCSETAW


1823 
SS_IOCTL_TCSETAW
:

1824 
loˇl_ªq
 = 
TCSETAW
;

1827 #ifde‡
TIOCGETC


1828 
SS_IOCTL_TIOCGETC
:

1829 
loˇl_ªq
 = 
TIOCGETC
;

1832 #ifde‡
TIOCSETC


1833 
SS_IOCTL_TIOCSETC
:

1834 
loˇl_ªq
 = 
TIOCSETC
;

1837 #ifde‡
TIOCLBIC


1838 
SS_IOCTL_TIOCLBIC
:

1839 
loˇl_ªq
 = 
TIOCLBIC
;

1842 #ifde‡
TIOCLBIS


1843 
SS_IOCTL_TIOCLBIS
:

1844 
loˇl_ªq
 = 
TIOCLBIS
;

1847 #ifde‡
TIOCLGET


1848 
SS_IOCTL_TIOCLGET
:

1849 
loˇl_ªq
 = 
TIOCLGET
;

1852 #ifde‡
TIOCLSET


1853 
SS_IOCTL_TIOCLSET
:

1854 
loˇl_ªq
 = 
TIOCLSET
;

1859 i‡(!
loˇl_ªq
)

1863 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

1864 
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

1865 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

1866 
ªgs
->
ªgs_R
[7] = 0;

1873 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1874 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1875 
buf
, 
NUM_IOCTL_BYTES
);

1878  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1879 
	`io˘l
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
loˇl_ªq
, 
buf
);

1882 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1883 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1884 
buf
, 
NUM_IOCTL_BYTES
);

1887 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1888 
ªgs
->
ªgs_R
[7] = 0;

1892 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1893 
ªgs
->
ªgs_R
[7] = 1;

1900 
OSF_SYS_f°©
:

1902 
osf_°©buf
 
osf_sbuf
;

1903 #ifde‡
_MSC_VER


1904 
_°©
 
sbuf
;

1906 
°©
 
sbuf
;

1910  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1911 
	`f°©
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
sbuf
);

1914 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1915 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1918 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1919 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1923 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1924 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1925 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1926 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1927 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1928 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1929 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1930 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1931 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1932 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1933 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1934 #i‚de‡
_MSC_VER


1935 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1936 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1940 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1941 &
osf_sbuf
, (
osf_°©buf
));

1945 
OSF_SYS_gë∑gesize
:

1947 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
MD_PAGE_SIZE
;

1950 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1951 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1954 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1955 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1959 
OSF_SYS_£tôimî
:

1961 
	`w¨n
("syscall: setitimer ignored");

1962 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1965 
OSF_SYS_èbÀ
:

1967 
qw‹d_t
 
èbÀ_id
, 
èbÀ_ödex
, 
buf_addr
, 
num_ñem
, 
size_ñem
;

1968 
osf_tbl_sysöfo
 
sysöfo
;

1970 
èbÀ_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

1971 
èbÀ_ödex
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1972 
buf_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

1973 
num_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A4
];

1974 
size_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A5
];

1976 
èbÀ_id
)

1978 
OSF_TBL_SYSINFO
:

1979 i‡(
èbÀ_ödex
 != 0)

1981 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 0 index, got %08d",

1982 
èbÀ_ödex
 );

1984 i‡(
num_ñem
 != 1)

1986 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 1Élts, got %08d",

1987 
num_ñem
 );

1991 
rußge
 
rußge_öfo
;

1994 i‡(
	`gërußge
(
RUSAGE_SELF
, &
rußge_öfo
) < 0)

1997 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2000 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2005 
sysöfo
.
si_hz
 = 
	`sysc⁄f
(
_SC_CLK_TCK
);

2008 
sysöfo
.
si_u£r
 = 
rußge_öfo
.
ru_utime
.
tv_£c
 * sysöfo.
si_hz
 +

2009 (
rußge_öfo
.
ru_utime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

2010 
sysöfo
.
si_sys
 = 
rußge_öfo
.
ru_°ime
.
tv_£c
 * sysöfo.
si_hz
 +

2011 (
rußge_öfo
.
ru_°ime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

2015 
sysöfo
.
si_ni˚
 = 0;

2016 
sysöfo
.
si_idÀ
 = 0;

2017 
sysöfo
.
si_phz
 = 0;

2018 
sysöfo
.
si_boŸtime
 = 0;

2019 
sysöfo
.
waô
 = 0;

2022 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
buf_addr
,

2023 &
sysöfo
, (
osf_tbl_sysöfo
));

2026 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2031 
	`w¨n
("èbÀ: unsuµ‹ãdÅabÀ id %dÑeque°ed, ign‹ed", 
èbÀ_id
);

2032 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2037 
OSF_SYS_gëdèbÀsize
:

2038 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__Æpha
)

2040 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdèbÀsize
();

2043 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2044 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2047 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2048 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2050 #ñi‡
	`deföed
(
u…rix
)

2053 
	`w¨n
("syscall: called getdtablesize\n");

2054 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2055 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2057 #ñi‡
	`deföed
(
MIN_SYSCALL_MODE
)

2060 
	`w¨n
("syscall: called getdtablesize\n");

2061 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2062 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2066 
æimô
 
æ
;

2069 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
Ë!(
qw‹d_t
)-1)

2071 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
æ
.
æim_cur
;

2072 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2076 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2077 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2083 
OSF_SYS_dup2
:

2085 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2086 
	`dup2
–
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

2089 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2090 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2093 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2094 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2098 
OSF_SYS_f˙é
:

2099 #ifde‡
_MSC_VER


2100 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

2101 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2104 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2105 
	`f˙é
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

2106  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

2109 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2110 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2113 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2114 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2120 
OSF_SYS_sigvec
:

2122 
	`w¨n
("syscall: sigvec ignored");

2123 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2128 
OSF_SYS_sigblock
:

2130 
	`w¨n
("syscall: sigblock ignored");

2131 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2136 
OSF_SYS_sig£tmask
:

2138 
	`w¨n
("syscall: sigsetmask ignored");

2139 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2143 
OSF_SYS_gëtimeofday
:

2144 #ifde‡
_MSC_VER


2145 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

2146 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2149 
osf_timevÆ
 
osf_tv
;

2150 
timevÆ
 
tv
, *
tvp
;

2151 
osf_timez⁄e
 
osf_tz
;

2152 
timez⁄e
 
tz
, *
tzp
;

2154 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2157 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2158 &
osf_tv
, (
osf_timevÆ
));

2161 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_£c
);

2162 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_u£c
);

2163 
tvp
 = &
tv
;

2166 
tvp
 = 
NULL
;

2168 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2171 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2172 &
osf_tz
, (
osf_timez⁄e
));

2175 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_möuãswe°
);

2176 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_d°time
);

2177 
tzp
 = &
tz
;

2180 
tzp
 = 
NULL
;

2183  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëtimeofday
(
tvp
, 
tzp
);

2186 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2187 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2190 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2191 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2194 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2197 
osf_tv
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

2198 
osf_tv
.
osf_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

2201 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2202 &
osf_tv
, (
osf_timevÆ
));

2205 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2208 
osf_tz
.
osf_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

2209 
osf_tz
.
osf_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

2212 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2213 &
osf_tz
, (
osf_timez⁄e
));

2219 
OSF_SYS_gërußge
:

2220 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

2222 
tms
 
tms_buf
;

2223 
osf_rußge
 
rußge
;

2226 i‡(
	`times
(&
tms_buf
Ë!(
qw‹d_t
)-1)

2229 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2230 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2234 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2235 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2239 #i‡
	`deföed
(
__svr4__
)

2240 
	`mem£t
(&
rußge
, '\0', (
osf_rußge
));

2242 
	`bzîo
(&
rußge
, (
osf_rußge
));

2246 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_utime
/
CLK_TCK
);

2247 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2248 
	`MD_SWAPW
(
rußge
.
osf_ru_utime
.
osf_tv_£c
);

2249 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 0;

2250 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_°ime
/
CLK_TCK
);

2251 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2252 
	`MD_SWAPW
(
rußge
.
osf_ru_°ime
.
osf_tv_£c
);

2253 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 0;

2256 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2257 &
rußge
, (
osf_rußge
));

2259 #ñi‡
	`deföed
(
__unix__
)

2261 
rußge
 
loˇl_rußge
;

2262 
osf_rußge
 
rußge
;

2265  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2266 
	`gërußge
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
loˇl_rußge
);

2269 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2270 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2273 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2274 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2278 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2279 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2280 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2281 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2282 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2283 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2284 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2285 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2286 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2287 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2288 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2289 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2290 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2291 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2292 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2293 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2294 
rußge
.
osf_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

2295 
rußge
.
osf_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

2296 
rußge
.
osf_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

2297 
rußge
.
osf_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

2298 
rußge
.
osf_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

2299 
rußge
.
osf_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

2300 
rußge
.
osf_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

2301 
rußge
.
osf_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

2302 
rußge
.
osf_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

2303 
rußge
.
osf_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

2304 
rußge
.
osf_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

2305 
rußge
.
osf_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

2306 
rußge
.
osf_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

2307 
rußge
.
osf_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

2310 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2311 &
rußge
, (
osf_rußge
));

2313 #ñi‡ 
	`deföed
(
_MSC_VER
)

2314 
	`w¨n
("syscall: called getrusage\n");

2315 
ªgs
->
ªgs_R
[7] = 0;

2317 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

2321 
OSF_SYS_utimes
:

2323 
buf
[
MAXBUFSIZE
];

2326 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2328 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] == 0)

2330 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
löux
)

2332  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2333 #ñi‡
	`deföed
(
_MSC_VER
)

2335  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2336 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2337  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
NULL
);

2338 #ñi‡
	`deföed
(
__CYGWIN32__
)

2339 
	`w¨n
("syscall: called utimes\n");

2341 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2346 
osf_timevÆ
 
osf_tvÆ
[2];

2347 #i‚de‡
_MSC_VER


2348 
timevÆ
 
tvÆ
[2];

2352 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2353 
osf_tvÆ
, 2*(
osf_timevÆ
));

2355 #i‚de‡
_MSC_VER


2357 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2358 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_u£c
);

2359 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2360 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_u£c
);

2363 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

2366 
utimbuf
 
ubuf
;

2368 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
tvÆ
[0].
tv_£c
);

2369 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
tvÆ
[1].
tv_£c
);

2371  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2373 #ñi‡
	`deföed
(
_MSC_VER
)

2376 
_utimbuf
 
ubuf
;

2378 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2379 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2381  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2383 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2384  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
tvÆ
);

2385 #ñi‡
	`deföed
(
__CYGWIN32__
)

2386 
	`w¨n
("syscall: called utimes\n");

2388 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2393 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2394 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2397 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2398 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2403 
OSF_SYS_gëæimô
:

2404 
OSF_SYS_£ålimô
:

2405 #ifde‡
_MSC_VER


2406 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

2407 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2408 #ñi‡
	`deföed
(
__CYGWIN32__
)

2410 
	`w¨n
("syscall: called get/setrlimit\n");

2411 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2415 
osf_æimô
 
osf_æ
;

2416 
æimô
 
æ
;

2419 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2420 &
osf_æ
, (
osf_æimô
));

2423 
æ
.
æim_cur
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_cur
);

2424 
æ
.
æim_max
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_max
);

2427 i‡(
syscode
 =
OSF_SYS_gëæimô
)

2428  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2429 
	`gëæimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2431  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2432 
	`£ålimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2435 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2436 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2439 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2440 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2444 
osf_æ
.
osf_æim_cur
 = 
	`MD_SWAPQ
(
æ
.
æim_cur
);

2445 
osf_æ
.
osf_æim_max
 = 
	`MD_SWAPQ
(
æ
.
æim_max
);

2448 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2449 &
osf_æ
, (
osf_æimô
));

2454 
OSF_SYS_sig¥ocmask
:

2456 
fú°
 = 
TRUE
;

2458 i‡(
fú°
)

2460 
	`w¨n
("partially supported sigprocmask() call...");

2461 
fú°
 = 
FALSE
;

2473 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
sigmask
;

2474 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2476 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2478 
OSF_SIG_BLOCK
:

2479 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2481 
OSF_SIG_UNBLOCK
:

2482 
sigmask
 &~
ªgs
->
ªgs_R
[
MD_REG_A1
];

2484 
OSF_SIG_SETMASK
:

2485 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2488 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EINVAL
;

2489 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 1;

2493 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > 0x10000000)

2494 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

2495 &
sigmask
, (sigmask));

2497 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2499 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2501 
OSF_SIG_BLOCK
:

2502 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2504 
OSF_SIG_UNBLOCK
:

2505 
sigmask
 &
ªgs
->
ªgs_R
[
MD_REG_A1
];

2507 
OSF_SIG_SETMASK
:

2508 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2511 
	`∑nic
("illegal how valueÅo sigprocmask()");

2514 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2515 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2520 
OSF_SYS_siga˘i⁄
:

2522 
signum
;

2523 
fú°
 = 
TRUE
;

2525 i‡(
fú°
)

2527 
	`w¨n
("partially supported sigaction() call...");

2528 
fú°
 = 
FALSE
;

2531 
signum
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2532 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2533 
siga˘i⁄_¨øy
[
signum
] = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2535 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

2536 
ªgs
->
ªgs_R
[
MD_REG_A2
] = 
siga˘i⁄_¨øy
[
signum
];

2538 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2541 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2551 
OSF_SYS_sig°ack
:

2552 
	`w¨n
("unsupported sigstack() call...");

2553 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2556 
OSF_SYS_sigªtu∫
:

2558 
i
;

2559 
osf_sigc⁄ãxt
 
sc
;

2560 
fú°
 = 
TRUE
;

2562 i‡(
fú°
)

2564 
	`w¨n
("partially supported sigreturn() call...");

2565 
fú°
 = 
FALSE
;

2568 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2569 &
sc
, (
osf_sigc⁄ãxt
));

2571 
sigmask
 = 
	`MD_SWAPQ
(
sc
.
sc_mask
);

2572 
ªgs
->
ªgs_NPC
 = 
	`MD_SWAPQ
(
sc
.
sc_pc
);

2576 
i
=0; i < 32; ++i)

2577 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

2578 
i
=0; i < 32; ++i)

2579 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

2580 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

2584 
OSF_SYS_uswôch
:

2585 
	`w¨n
("unsupported uswitch() call...");

2586 
ªgs
->
ªgs_R
[
MD_REG_V0
] =Ñegs->ªgs_R[
MD_REG_A1
];

2589 
OSF_SYS_£tsysöfo
:

2590 
	`w¨n
("unsupported setsysinfo() call...");

2591 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2594 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2595 
OSF_SYS_gëdúíåõs
:

2597 
i
, 
˙t
, 
osf_˙t
;

2598 
dúít
 *
p
;

2599 
sw‹d_t
 
fd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2600 
md_addr_t
 
osf_buf
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2601 *
buf
;

2602 
sw‹d_t
 
osf_nbyãs
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

2603 
md_addr_t
 
osf_pba£
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

2604 
sqw‹d_t
 
osf_ba£
;

2605 
ba£
 = 0;

2608 i‡(!
osf_nbyãs
)

2609 
	`w¨n
("attemptingÅo get 0 directoryÉntries...");

2612 
buf
 = 
	`ˇŒoc
(1, 
osf_nbyãs
);

2613 i‡(!
buf
)

2614 
	`Áèl
("out of virtual memory");

2617 #i‡
	`deföed
(
__svr4__
)

2618 
ba£
 = 
	`l£ek
 (()
fd
, (
off_t
)0, 
SEEK_CUR
);

2619 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2620 
	`gëdíts
(()
fd
, (
dúít
 *)
buf
, (
size_t
)
osf_nbyãs
);

2622 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2623 
	`gëdúíåõs
(()
fd
, 
buf
, (
size_t
)
osf_nbyãs
, &
ba£
);

2627 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2629 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2632 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] > 0)

2635 
i
=0, 
˙t
=0, 
osf_˙t
=0, 
p
=(
dúít
 *)
buf
;

2636 
˙t
 < 
ªgs
->
ªgs_R
[
MD_REG_V0
] && 
p
->
d_ª˛í
 > 0;

2637 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

2639 
osf_dúít
 osf_dirent;

2641 
osf_dúít
.
d_öo
 = 
	`MD_SWAPW
(
p
->d_ino);

2642 
osf_dúít
.
d_«mÀn
 = 
	`MD_SWAPH
(
	`°æí
(
p
->
d_«me
));

2643 
	`°r˝y
(
osf_dúít
.
d_«me
, 
p
->d_name);

2644 
osf_dúít
.
d_ª˛í
 = 
	`MD_SWAPH
(
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2646 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2647 
osf_buf
 + 
osf_˙t
,

2648 &
osf_dúít
, 
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2649 
osf_˙t
 +
	`OSF_DIRENT_SZ
(
p
->
d_«me
);

2652 i‡(
osf_pba£
 != 0)

2654 
osf_ba£
 = (
sqw‹d_t
)
ba£
;

2655 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
osf_pba£
,

2656 &
osf_ba£
, (osf_base));

2660 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
osf_˙t
;

2665 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2666 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2669 
	`‰ì
(
buf
);

2674 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2675 
OSF_SYS_åunˇã
:

2677 
buf
[
MAXBUFSIZE
];

2680 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2683  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2684 
	`åunˇã
(
buf
, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2687 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2688 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2691 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2692 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2698 #i‡ !
	`deföed
(
_MSC_VER
)

2699 
OSF_SYS_·runˇã
:

2701  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2702 
	`·runˇã
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2703  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2706 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2707 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2710 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2711 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2716 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2717 
OSF_SYS_°©fs
:

2719 
buf
[
MAXBUFSIZE
];

2720 
osf_°©fs
 
osf_sbuf
;

2721 
°©fs
 
sbuf
;

2724 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2727  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©fs
(
buf
, &
sbuf
);

2730 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2731 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2734 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2735 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2739 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__osf__
)

2740 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(0x6969) ;

2742 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(
sbuf
.f_type);

2744 
osf_sbuf
.
f_fsize
 = 
	`MD_SWAPW
(
sbuf
.
f_bsize
);

2745 
osf_sbuf
.
f_blocks
 = 
	`MD_SWAPW
(
sbuf
.f_blocks);

2746 
osf_sbuf
.
f_b‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_bfree);

2747 
osf_sbuf
.
f_bavaû
 = 
	`MD_SWAPW
(
sbuf
.f_bavail);

2748 
osf_sbuf
.
f_fûes
 = 
	`MD_SWAPW
(
sbuf
.f_files);

2749 
osf_sbuf
.
f_f‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_ffree);

2753 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2754 &
osf_sbuf
, (
osf_°©buf
));

2759 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2760 
OSF_SYS_£åegid
:

2763  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2764 
	`£åegid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2765  (
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2768 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2769 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2772 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2773 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2778 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2779 
OSF_SYS_£åeuid
:

2782  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2783 
	`£åeuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2784  (
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2787 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2788 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2791 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2792 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2797 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2798 
OSF_SYS_sockë
:

2801  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2802 
	`sockë
–
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2803 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2805  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

2806 
sockty≥_m≠
, 
	`N_ELT
(socktype_map),

2808  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

2809 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2813 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2814 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2817 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2818 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2823 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2824 
OSF_SYS_c⁄√˘
:

2826 
osf_sockaddr
 
osf_ß
;

2831 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > (
osf_sockaddr
))

2833 
	`Áèl
("sockaddr size overflow:áddrlen = %d",

2834 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2837 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2838 &
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2840 
i
;

2841 
ß
.
ß_Ámûy
 = 
osf_ß
.sa_family;

2842 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2843 
ß
.
ß_d©a
[
i
] = 
osf_ß
.sa_data[i];

2845  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2846 
	`c⁄√˘
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2847 (*)&
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2850 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2851 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2854 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2855 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2861 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2862 
OSF_SYS_u«me
:

2865 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2866 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EPERM
;

2870 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2871 
OSF_SYS_wrôev
:

2873 
i
;

2874 *
buf
;

2875 
iovec
 *
iov
;

2878 
iov
 =

2879 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[
MD_REG_A2
]

2880 * (
iovec
));

2881 i‡(!
iov
)

2882 
	`Áèl
("out of virtual memory in SYS_writev");

2885 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2887 
osf_iovec
 
osf_iov
;

2890 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2891 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2892 + 
i
*(
osf_iovec
)),

2893 &
osf_iov
, (
osf_iovec
));

2895 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
.iov_len);

2896 i‡(
osf_iov
.
iov_ba£
 !0 && osf_iov.
iov_Àn
 != 0)

2898 
buf
 = (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
.
iov_Àn
), ());

2899 i‡(!
buf
)

2900 
	`Áèl
("out of virtual memory in SYS_writev");

2901 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
	`MD_SWAPQ
(
osf_iov
.
iov_ba£
),

2902 
buf
, 
	`MD_SWAPW
(
osf_iov
.
iov_Àn
));

2903 
iov
[
i
].
iov_ba£
 = 
buf
;

2906 
iov
[
i
].
iov_ba£
 = 
NULL
;

2911  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2912 
	`wrôev
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2913  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2914 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2915 && 
î∫o
 =
EAGAIN
);

2918 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2919 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2922 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2923 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2927 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2929 i‡(
iov
[
i
].
iov_ba£
)

2931 
	`‰ì
(
iov
[
i
].
iov_ba£
);

2932 
iov
[
i
].
iov_ba£
 = 
NULL
;

2935 
	`‰ì
(
iov
);

2940 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2941 
OSF_SYS_ªadv
:

2943 
i
;

2944 *
buf
 = 
NULL
;

2945 
osf_iovec
 *
osf_iov
;

2946 
iovec
 *
iov
;

2949 
osf_iov
 =

2950 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
],

2951 (
osf_iovec
));

2952 i‡(!
osf_iov
)

2953 
	`Áèl
("out of virtual memory in SYS_readv");

2955 
iov
 =

2956 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], (
iovec
));

2957 i‡(!
iov
)

2958 
	`Áèl
("out of virtual memory in SYS_readv");

2961 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2964 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2965 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2966 + 
i
*(
osf_iovec
)),

2967 &
osf_iov
[
i
], (
osf_iovec
));

2969 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
[i].iov_len);

2970 i‡(
osf_iov
[
i
].
iov_ba£
 !0 && osf_iov[i].
iov_Àn
 != 0)

2972 
buf
 =

2973 (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
[
i
].
iov_Àn
), ());

2974 i‡(!
buf
)

2975 
	`Áèl
("out of virtual memory in SYS_readv");

2976 
iov
[
i
].
iov_ba£
 = 
buf
;

2979 
iov
[
i
].
iov_ba£
 = 
NULL
;

2984  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2985 
	`ªadv
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2986  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2987 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2988 && 
î∫o
 =
EAGAIN
);

2991 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2993 i‡(
osf_iov
[
i
].
iov_ba£
 != 0)

2995 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
	`MD_SWAPQ
(
osf_iov
[
i
].
iov_ba£
),

2996 
iov
[
i
].
iov_ba£
, 
	`MD_SWAPW
(
osf_iov
[i].
iov_Àn
));

3001 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3002 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3005 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3006 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3010 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3012 i‡(
iov
[
i
].
iov_ba£
)

3014 
	`‰ì
(
iov
[
i
].
iov_ba£
);

3015 
iov
[
i
].
iov_ba£
 = 
NULL
;

3019 i‡(
osf_iov
)

3020 
	`‰ì
(
osf_iov
);

3021 i‡(
iov
)

3022 
	`‰ì
(
iov
);

3027 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3028 
OSF_SYS_£tsock›t
:

3030 *
buf
;

3031 
xœã_èbÀ_t
 *
m≠
;

3032 
nm≠
;

3037 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0

3038 && 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3040 
buf
 = 
	`ˇŒoc
(1, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3041 i‡(!
buf
)

3042 
	`Áèl
("cannotállocate memory in OSF_SYS_setsockopt");

3045 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3046  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3047 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3050 
buf
 = 
NULL
;

3053 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_SOCKET
)

3055 
m≠
 = 
sock›t_m≠
;

3056 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3058 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_TCP
)

3060 
m≠
 = 
t˝›t_m≠
;

3061 
nm≠
 = 
	`N_ELT
(
t˝›t_m≠
);

3065 
	`w¨n
("noÅranslation mapávailable for `setsockopt()': %d",

3066 ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3067 
m≠
 = 
sock›t_m≠
;

3068 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3071  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3072 
	`£tsock›t
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3073  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3074 
sockÀvñ_m≠
, 
	`N_ELT
(socklevel_map),

3076  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

3077 
m≠
, 
nm≠
,

3079  
buf
,

3080  
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3083 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3084 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3087 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3088 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3091 i‡(
buf
 !
NULL
)

3092 
	`‰ì
(
buf
);

3097 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3098 
OSF_SYS_ﬁd_gësock«me
:

3101 *
buf
;

3102 
w‹d_t
 
osf_addæí
;

3103 
addæí
;

3106 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3107  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3108 &
osf_addæí
, (osf_addrlen));

3109 
addæí
 = ()
osf_addæí
;

3110 i‡(
addæí
 != 0)

3112 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3113 i‡(!
buf
)

3114 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3117 
buf
 = 
NULL
;

3119  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3120 
	`gësock«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3121  (
sockaddr
 *)
buf
,

3122  &
addæí
);

3125 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3126 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3129 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3130 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3134 i‡(
addæí
 != 0)

3135 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3136  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3137 
buf
, 
addæí
);

3138 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3139 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3140  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3141 &
osf_addæí
, (osf_addrlen));

3143 i‡(
buf
 !
NULL
)

3144 
	`‰ì
(
buf
);

3149 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3150 
OSF_SYS_ﬁd_gë≥î«me
:

3153 *
buf
;

3154 
w‹d_t
 
osf_addæí
;

3155 
addæí
;

3158 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3159  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3160 &
osf_addæí
, (osf_addrlen));

3161 
addæí
 = ()
osf_addæí
;

3162 i‡(
addæí
 != 0)

3164 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3165 i‡(!
buf
)

3166 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3169 
buf
 = 
NULL
;

3171  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3172 
	`gë≥î«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3173  (
sockaddr
 *)
buf
,

3174  &
addæí
);

3177 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3178 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3181 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3182 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3186 i‡(
addæí
 != 0)

3187 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3188  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3189 
buf
, 
addæí
);

3190 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3191 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3192  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3193 &
osf_addæí
, (osf_addrlen));

3195 i‡(
buf
 !
NULL
)

3196 
	`‰ì
(
buf
);

3201 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3202 
OSF_SYS_£tgid
:

3205  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3206 
	`£tgid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3209 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3210 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3213 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3214 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3219 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3220 
OSF_SYS_£tuid
:

3223  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3224 
	`£tuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3227 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3228 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3231 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3232 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3237 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3238 
OSF_SYS_gë¥i‹ôy
:

3241  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3242 
	`gë¥i‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3243  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3246 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3247 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3250 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3251 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3256 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3257 
OSF_SYS_£çri‹ôy
:

3260  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3261 
	`£çri‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3262  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3263  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3266 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3267 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3270 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3271 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3276 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3277 
OSF_SYS_£À˘
:

3279 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

3280 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

3281 
timevÆ
 
timeout
, *
timeouç
;

3284 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3286 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3287  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3288 &
ªadfd
, (
fd_£t
));

3289 
ªadfdp
 = &
ªadfd
;

3292 
ªadfdp
 = 
NULL
;

3295 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3297 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3298  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3299 &
wrôefd
, (
fd_£t
));

3300 
wrôefdp
 = &
wrôefd
;

3303 
wrôefdp
 = 
NULL
;

3306 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3308 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3309  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3310 &
ex˚±fd
, (
fd_£t
));

3311 
ex˚±fdp
 = &
ex˚±fd
;

3314 
ex˚±fdp
 = 
NULL
;

3317 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3319 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3320  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3321 &
timeout
, (
timevÆ
));

3322 
timeouç
 = &
timeout
;

3325 
timeouç
 = 
NULL
;

3327 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

3329  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3330 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3331 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

3334  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3335 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3336 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

3340 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3341 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3344 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3345 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3349 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3350 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3351  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3352 &
ªadfd
, (
fd_£t
));

3355 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3356 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3357  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3358 &
wrôefd
, (
fd_£t
));

3361 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3362 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3363  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3364 &
ex˚±fd
, (
fd_£t
));

3367 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3368 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3369  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3370 &
timeout
, (
timevÆ
));

3375 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3376 
OSF_SYS_shutdown
:

3379  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3380 
	`shutdown
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3381  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3384 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3385 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3388 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3389 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3394 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3395 
OSF_SYS_pﬁl
:

3397 
i
;

3398 
pﬁlfd
 *
fds
;

3401 
fds
 = 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A1
], (
pﬁlfd
));

3402 i‡(!
fds
)

3403 
	`Áèl
("out of virtual memory in SYS_poll");

3406 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3409 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3410 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3411 + 
i
*(
pﬁlfd
)),

3412 &
fds
[
i
], (
pﬁlfd
));

3416  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3417 
	`pﬁl
–
fds
,

3418  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3419  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3422 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3423 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3426 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3427 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3431 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3434 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3435 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3436 + 
i
*(
pﬁlfd
)),

3437 &
fds
[
i
], (
pﬁlfd
));

3441 
	`‰ì
(
fds
);

3446 
OSF_SYS_u¶ìp_thªad
:

3448 
	`Ârötf
(
°dîr
, "u¶ìp(%d)\n", ()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3450 #ifde‡
Æpha


3451 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u¶ìp
((Ïegs->ªgs_R[
MD_REG_A0
]);

3453 
	`u¶ìp
(()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3454 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3457 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3458 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3461 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3462 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3465 
	`w¨n
("unsupported usleep_thread() call...");

3466 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3470 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3471 
OSF_SYS_gëho°«me
:

3474 *
buf
;

3476 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3477 i‡(!
buf
)

3478 
	`Áèl
("out of virtual memory in gethostname()");

3480  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3481 
	`gëho°«me
–
buf
,

3482  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3485 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3486 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3489 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3490 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3494 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3495  
ªgs
->
ªgs_R
[
MD_REG_A0
],

3496 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3501 
OSF_SYS_madvi£
:

3502 
	`w¨n
("unsupported madvise() call ignored...");

3503 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3507 
	`w¨n
("invalid/unimplemented syscall %ld, PC=0x%08p, RA=0x%08p, winging it",

3508 
syscode
, 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_R
[
MD_REG_RA
]);

3509 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3510 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3512 
	`Áèl
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

3516 i‡(
vîbo£
)

3517 
	`Ârötf
(
°dîr
, "syscall(%d):Ñeturned %d:%d...\n",

3518 ()
syscode
, ()
ªgs
->
ªgs_R
[
MD_REG_A3
],

3519 ()
ªgs
->
ªgs_R
[
MD_REG_V0
]);

3520 
	}
}

	@target-pisa/config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@target-pisa/configbig.h

52 #i‚de‡
CONFIGBIG_H


53 
	#CONFIGBIG_H


	)

56 
	#TARGET_PISA_BIG


	)

	@target-pisa/configlit.h

52 #i‚de‡
CONFIGLIT_H


53 
	#CONFIGLIT_H


	)

56 
	#TARGET_PISA_LITTLE


	)

	@target-pisa/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	#ECOFF_EB_MAGIC
 0x0160

	)

58 
	#ECOFF_EB_OTHER
 0x6001

	)

59 
	#ECOFF_EL_MAGIC
 0x0162

	)

60 
	#ECOFF_EL_OTHER
 0x6201

	)

61 
	#ECOFF_ALPHAMAGIC
 0603

	)

63 
	secoff_fûehdr
 {

64 
hÆf_t
 
	mf_magic
;

65 
hÆf_t
 
	mf_ns˙s
;

66 
sw‹d_t
 
	mf_timd©
;

67 
sw‹d_t
 
	mf_sym±r
;

68 
sw‹d_t
 
	mf_nsyms
;

69 
hÆf_t
 
	mf_›thdr
;

70 
hÆf_t
 
	mf_Êags
;

73 
	secoff_aouthdr
 {

74 
shÆf_t
 
	mmagic
;

75 
shÆf_t
 
	mv°amp
;

76 
sw‹d_t
 
	mtsize
;

77 
sw‹d_t
 
	mdsize
;

78 
sw‹d_t
 
	mbsize
;

79 
sw‹d_t
 
	míåy
;

80 
sw‹d_t
 
	mãxt_°¨t
;

81 
sw‹d_t
 
	md©a_°¨t
;

82 
sw‹d_t
 
	mbss_°¨t
;

83 
sw‹d_t
 
	mg¥mask
;

84 
sw‹d_t
 
	m˝rmask
[4];

85 
sw‹d_t
 
	mgp_vÆue
;

88 
	secoff_s˙hdr
 {

89 
	ms_«me
[8];

90 
sw‹d_t
 
	ms_∑ddr
;

91 
sw‹d_t
 
	ms_vaddr
;

92 
sw‹d_t
 
	ms_size
;

93 
sw‹d_t
 
	ms_s˙±r
;

94 
sw‹d_t
 
	ms_ªÕå
;

95 
sw‹d_t
 
	ms_ n›å
;

96 
hÆf_t
 
	ms_ƒñoc
;

97 
hÆf_t
 
	ms_∆¬o
;

98 
sw‹d_t
 
	ms_Êags
;

101 
	secoff_symhdr_t
 {

102 
shÆf_t
 
	mmagic
;

103 
shÆf_t
 
	mv°amp
;

104 
sw‹d_t
 
	mûöeMax
;

105 
sw‹d_t
 
	mcbLöe
;

106 
sw‹d_t
 
	mcbLöeOff£t
;

107 
sw‹d_t
 
	midnMax
;

108 
sw‹d_t
 
	mcbDnOff£t
;

109 
sw‹d_t
 
	mùdMax
;

110 
sw‹d_t
 
	mcbPdOff£t
;

111 
sw‹d_t
 
	misymMax
;

112 
sw‹d_t
 
	mcbSymOff£t
;

113 
sw‹d_t
 
	mi›tMax
;

114 
sw‹d_t
 
	mcbO±Off£t
;

115 
sw‹d_t
 
	müuxMax
;

116 
sw‹d_t
 
	mcbAuxOff£t
;

117 
sw‹d_t
 
	missMax
;

118 
sw‹d_t
 
	mcbSsOff£t
;

119 
sw‹d_t
 
	missExtMax
;

120 
sw‹d_t
 
	mcbSsExtOff£t
;

121 
sw‹d_t
 
	mifdMax
;

122 
sw‹d_t
 
	mcbFdOff£t
;

123 
sw‹d_t
 
	m¸fd
;

124 
sw‹d_t
 
	mcbRfdOff£t
;

125 
sw‹d_t
 
	mõxtMax
;

126 
sw‹d_t
 
	mcbExtOff£t
;

127 } 
	tecoff_HDRR
;

129 
	#ECOFF_magicSym
 0x7009

	)

131 
	secoff_fdr
 {

132 
w‹d_t
 
	madr
;

133 
sw‹d_t
 
	mrss
;

134 
sw‹d_t
 
	missBa£
;

135 
sw‹d_t
 
	mcbSs
;

136 
sw‹d_t
 
	misymBa£
;

137 
sw‹d_t
 
	mcsym
;

138 
sw‹d_t
 
	mûöeBa£
;

139 
sw‹d_t
 
	m˛öe
;

140 
sw‹d_t
 
	mi›tBa£
;

141 
sw‹d_t
 
	mc›t
;

142 
hÆf_t
 
	mùdFú°
;

143 
hÆf_t
 
	m˝d
;

144 
sw‹d_t
 
	müuxBa£
;

145 
sw‹d_t
 
	mˇux
;

146 
sw‹d_t
 
	mrfdBa£
;

147 
sw‹d_t
 
	m¸fd
;

148 
	mœng
 :5;

149 
	mfMîge
 :1;

150 
	mfRódö
 :1;

151 
	mfBigídün
 :1;

152 
	mª£rved
 :24;

153 
sw‹d_t
 
	mcbLöeOff£t
;

154 
sw‹d_t
 
	mcbLöe
;

155 } 
	tecoff_FDR
;

157 
	secoff_pdr
 {

158 
w‹d_t
 
	madr
;

159 
sw‹d_t
 
	misym
;

160 
sw‹d_t
 
	mûöe
;

161 
sw‹d_t
 
	mªgmask
;

162 
sw‹d_t
 
	mªgoff£t
;

163 
sw‹d_t
 
	mi›t
;

164 
sw‹d_t
 
	m‰egmask
;

165 
sw‹d_t
 
	m‰egoff£t
;

166 
sw‹d_t
 
	m‰ameoff£t
;

167 
shÆf_t
 
	m‰amîeg
;

168 
shÆf_t
 
	mp¸eg
;

169 
sw‹d_t
 
	m Low
;

170 
sw‹d_t
 
	m High
;

171 
sw‹d_t
 
	mcbLöeOff£t
;

172 } 
	tecoff_PDR
;

174 
	secoff_SYMR
 {

175 
sw‹d_t
 
	miss
;

176 
sw‹d_t
 
	mvÆue
;

177 
	m°
 :6;

178 
	msc
 :5;

179 
	mª£rved
 :1;

180 
	mödex
 :20;

181 } 
	tecoff_SYMR
;

183 
	secoff_EXTR
 {

184 
shÆf_t
 
	mª£rved
;

185 
shÆf_t
 
	mifd
;

186 
ecoff_SYMR
 
	masym
;

187 } 
	tecoff_EXTR
;

189 
	#ECOFF_R_SN_TEXT
 1

	)

190 
	#ECOFF_R_SN_RDATA
 2

	)

191 
	#ECOFF_R_SN_DATA
 3

	)

192 
	#ECOFF_R_SN_SDATA
 4

	)

193 
	#ECOFF_R_SN_SBSS
 5

	)

194 
	#ECOFF_R_SN_BSS
 6

	)

196 
	#ECOFF_STYP_TEXT
 0x0020

	)

197 
	#ECOFF_STYP_RDATA
 0x0100

	)

198 
	#ECOFF_STYP_DATA
 0x0040

	)

199 
	#ECOFF_STYP_SDATA
 0x0200

	)

200 
	#ECOFF_STYP_SBSS
 0x0400

	)

201 
	#ECOFF_STYP_BSS
 0x0080

	)

203 
	#ECOFF_°Nû
 0

	)

204 
	#ECOFF_°GlobÆ
 1

	)

205 
	#ECOFF_°Sètic
 2

	)

206 
	#ECOFF_°P¨am
 3

	)

207 
	#ECOFF_°Loˇl
 4

	)

208 
	#ECOFF_°Labñ
 5

	)

209 
	#ECOFF_°Proc
 6

	)

210 
	#ECOFF_°Block
 7

	)

211 
	#ECOFF_°End
 8

	)

212 
	#ECOFF_°Membî
 9

	)

213 
	#ECOFF_°Ty≥def
 10

	)

214 
	#ECOFF_°Fûe
 11

	)

215 
	#ECOFF_°RegRñoc
 12

	)

216 
	#ECOFF_°F‹w¨d
 13

	)

217 
	#ECOFF_°SèticProc
 14

	)

218 
	#ECOFF_°C⁄°™t
 15

	)

	@target-pisa/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-piß/ecoff.h
"

72 
	#TEXT_TAIL_PADDING
 128

	)

75 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

78 
	gld_ãxt_size
 = 0;

81 
md_addr_t
 
	gld_d©a_ba£
 = 0;

84 
	gld_d©a_size
 = 0;

87 
md_addr_t
 
	gld_brk_poöt
 = 0;

90 
md_addr_t
 
	gld_°ack_ba£
 = 
MD_STACK_BASE
;

93 
	gld_°ack_size
 = 0;

96 
md_addr_t
 
	gld_°ack_mö
 = (md_addr_t)-1;

99 *
	gld_¥og_‚ame
 = 
NULL
;

102 
md_addr_t
 
	gld_¥og_íåy
 = 0;

105 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

108 
	gld_èrgë_big_ídün
;

112 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

114 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

116 &
ld_ãxt_ba£
,Üd_text_base, " 0x%08p");

117 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

119 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

120 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

122 &
ld_d©a_ba£
,Üd_data_base, " 0x%08p");

123 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

125 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

126 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

128 &
ld_°ack_ba£
,Üd_stack_base, " 0x%08p");

129 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

131 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

133 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

135 &
ld_°ack_mö
,Üd_stack_min, " 0x%08p");

137 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

139 &
ld_¥og_íåy
,Üd_prog_entry, " 0x%08p");

140 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

142 &
ld_ívú⁄_ba£
,Üd_environ_base, " 0x%08p");

143 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

145 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

146 
	}
}

152 
	$ld_lﬂd_¥og
(*
‚ame
,

153 
¨gc
, **
¨gv
,

154 **
ívp
,

155 
ªgs_t
 *
ªgs
,

156 
mem_t
 *
mem
,

157 
zîo_bss_£gs
)

159 
i
;

160 
w‹d_t
 
ãmp
;

161 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

163 i‡(
	`eio_vÆid
(
‚ame
))

165 i‡(
¨gc
 != 1)

167 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

168 
	`exô
(1);

171 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

173 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

176 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

179 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

180 
	`Áèl
("bad initial checkpoint in EIO file");

183 i‡(
sim_chk±_‚ame
 !
NULL
)

185 
cou¡î_t
 
ª°‹e_i˙t
;

187 
FILE
 *
chk±_fd
;

189 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

190 
sim_chk±_‚ame
);

192 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

193 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

194 
sim_chk±_‚ame
);

197 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

200 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

203 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

204 
ª°‹e_i˙t
);

205 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

209 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

210 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

215 #ifde‡
MD_CROSS_ENDIAN


218 
	`Áèl
("SimpleScalar/PISA only supports binaryÉxecution on\n"

224 i‡(
sim_chk±_‚ame
 !
NULL
)

225 
	`Áèl
("checkpoints only supported while EIOÅracing");

227 #ifde‡
BFD_LOADER


230 
bfd
 *
abfd
;

231 
a£˘i⁄
 *
£˘
;

235 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

236 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
dÊﬂt_t
));

237 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

240 
ld_ívú⁄_ba£
 = 
•
;

243 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

244 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

245 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

250 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

252 
	`bfd_˛o£
(
abfd
);

253 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

257 
ld_¥og_‚ame
 = 
¨gv
[0];

260 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

262 
	`debug
("processing %d sections in `%s'...",

263 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

266 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

268 *
p
;

270 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

271 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

272 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

275 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

276 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

277 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

278 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

281 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

282 i‡(!
p
)

283 
	`Áèl
("cannotállocate %d bytes for section `%s'",

284 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

285 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

287 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

288 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

289 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

290 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

293 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

294 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

297 
	`‰ì
(
p
);

300 i‡(
zîo_bss_£gs


301 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

302 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

303 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

306 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

307 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

308 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

313 
	`debug
("ignoring section `%s' duringÜoad...",

314 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

318 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

321 
ld_ãxt_size
 =

322 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

323 - 
MD_TEXT_BASE
)

324 + 
TEXT_TAIL_PADDING
;

327 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

328 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

329 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

330 
TEXT_TAIL_PADDING
);

333 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

334 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

335 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

336 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

337 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

340 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

341 
d©a_bªak
)

342 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

343 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

348 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

349 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

350 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

355 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

356 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

357 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

358 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

361 i‡(!
	`bfd_˛o£
(
abfd
))

362 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

368 
FILE
 *
fobj
;

369 
Êoc
;

370 
ecoff_fûehdr
 
fhdr
;

371 
ecoff_aouthdr
 
ahdr
;

372 
ecoff_s˙hdr
 
shdr
;

376 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

377 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
dÊﬂt_t
));

378 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

381 
ld_ívú⁄_ba£
 = 
•
;

384 
ld_¥og_‚ame
 = 
¨gv
[0];

387 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

388 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

390 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

392 i‡(!
fobj
)

393 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

395 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

396 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

399 i‡(
fhdr
.
f_magic
 =
ECOFF_EB_MAGIC
)

400 
ld_èrgë_big_ídün
 = 
TRUE
;

401 i‡(
fhdr
.
f_magic
 =
ECOFF_EL_MAGIC
)

402 
ld_èrgë_big_ídün
 = 
FALSE
;

403 i‡(
fhdr
.
f_magic
 =
ECOFF_EB_OTHER
 || fhdr.f_magi¯=
ECOFF_EL_OTHER
)

404 
	`Áèl
("PISA bö¨y `%s' ha†wr⁄gÉndü¿f‹m©", 
¨gv
[0]);

405 i‡(
fhdr
.
f_magic
 =
ECOFF_ALPHAMAGIC
)

406 
	`Áèl
("PISA simuœt‹ c™nŸÑu¿AÕh®bö¨y `%s'", 
¨gv
[0]);

408 
	`Áèl
("bad magicÇumber inÉxecutable `%s' (notánÉxecutable?)",

409 
¨gv
[0]);

411 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

412 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

414 
d©a_bªak
 = 
MD_DATA_BASE
 + 
ahdr
.
dsize
 +áhdr.
bsize
;

417 
D©a_°¨t
 = 
ahdr
.
d©a_°¨t
;

418 
D©a_size
 = 
ahdr
.
dsize
;

419 
Bss_size
 = 
ahdr
.
bsize
;

420 
Bss_°¨t
 = 
ahdr
.
bss_°¨t
;

421 
Gp_vÆue
 = 
ahdr
.
gp_vÆue
;

422 
Text_íåy
 = 
ahdr
.
íåy
;

428 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
fhdr
.
f_›thdr
, 0);

430 
	`debug
("¥o˚ssög %d se˘i⁄†ö `%s'...", 
fhdr
.
f_ns˙s
, 
¨gv
[0]);

433 
Êoc
 = 
	`·ñl
(
fobj
);

434 
i
 = 0; i < 
fhdr
.
f_ns˙s
; i++)

436 *
p
;

438 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

439 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

440 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

441 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

442 
Êoc
 = 
	`·ñl
(
fobj
);

444 
shdr
.
s_Êags
)

446 
ECOFF_STYP_TEXT
:

447 
ld_ãxt_size
 = ((
shdr
.
s_vaddr
 + shdr.
s_size
Ë- 
MD_TEXT_BASE
)

448 + 
TEXT_TAIL_PADDING
;

450 
p
 = 
	`ˇŒoc
(
shdr
.
s_size
, ());

451 i‡(!
p
)

452 
	`Áèl
("out of virtual memory");

454 i‡(
	`f£ek
(
fobj
, 
shdr
.
s_s˙±r
, 0) == -1)

455 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

456 i‡(
	`‰ód
(
p
, 
shdr
.
s_size
, 1, 
fobj
) < 1)

457 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

460 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
shdr
.
s_vaddr
, 
p
, shdr.
s_size
);

463 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

464 
shdr
.
s_vaddr
 + shdr.
s_size
, 
TEXT_TAIL_PADDING
);

467 
	`‰ì
(
p
);

470 
Text_£ek
 = 
shdr
.
s_s˙±r
;

471 
Text_°¨t
 = 
shdr
.
s_vaddr
;

472 
Text_size
 = 
shdr
.
s_size
 / 4;

474 
Text_size
 += 10;

475 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

480 
ECOFF_STYP_RDATA
:

485 
Rd©a_°¨t
 = 
shdr
.
s_vaddr
;

486 
Rd©a_size
 = 
shdr
.
s_size
;

487 
Rd©a_£ek
 = 
shdr
.
s_s˙±r
;

490 
ECOFF_STYP_DATA
:

492 
D©a_£ek
 = 
shdr
.
s_s˙±r
;

495 
ECOFF_STYP_SDATA
:

497 
Sd©a_£ek
 = 
shdr
.
s_s˙±r
;

500 
p
 = 
	`ˇŒoc
(
shdr
.
s_size
, ());

501 i‡(!
p
)

502 
	`Áèl
("out of virtual memory");

504 i‡(
	`f£ek
(
fobj
, 
shdr
.
s_s˙±r
, 0) == -1)

505 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

506 i‡(
	`‰ód
(
p
, 
shdr
.
s_size
, 1, 
fobj
) < 1)

507 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

510 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
shdr
.
s_vaddr
, 
p
, shdr.
s_size
);

513 
	`‰ì
(
p
);

517 
ECOFF_STYP_BSS
:

520 
ECOFF_STYP_SBSS
:

526 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

527 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

528 
ld_¥og_íåy
 = 
ahdr
.
íåy
;

529 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

532 i‡(
	`f˛o£
(
fobj
))

533 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

538 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

539 
	`Áèl
("executable is missingá `.text' section");

540 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

541 
	`Áèl
("executable is missingá `.data' section");

542 i‡(!
ld_¥og_íåy
)

543 
	`Áèl
("programÉntryÖointÇot specified");

546 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

547 i‡(
sim_sw≠_byãs
)

552 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

553 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

555 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

558 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

559 i‡(
sim_sw≠_w‹ds
)

564 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

565 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

567 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

572 
ãmp
 = 
	`MD_SWAPW
(
¨gc
);

573 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
w‹d_t
));

574 
•
 +(
w‹d_t
);

577 
¨gv_addr
 = 
•
;

578 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

581 
ívp_addr
 = 
•
;

582 
i
=0; 
ívp
[i]; i++)

583 
•
 +(
md_addr_t
);

584 
•
 +(
md_addr_t
);

587 
i
=0; i<
¨gc
; i++)

590 
ãmp
 = 
	`MD_SWAPW
(
•
);

591 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

592 &
ãmp
, (
md_addr_t
));

594 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

595 
•
 +
	`°æí
(
¨gv
[
i
]) + 1;

598 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

599 &
nuŒ_±r
, (
md_addr_t
));

602 
i
 = 0; 
ívp
[i]; i++)

605 
ãmp
 = 
	`MD_SWAPW
(
•
);

606 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

607 &
ãmp
, (
md_addr_t
));

609 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

610 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

613 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

614 &
nuŒ_±r
, (
md_addr_t
));

617 i‡(
•
 > 
ld_°ack_ba£
)

622 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON in ss.h");

626 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

629 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

632 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

633 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

635 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

636 
ld_ãxt_ba£
, 
ld_ãxt_size
);

637 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

638 
ld_d©a_ba£
, 
ld_d©a_size
);

639 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

640 
ld_°ack_ba£
, 
ld_°ack_size
);

641 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

645 
md_addr_t
 
addr
;

646 
md_ö°_t
 
ö°
;

647 
md_Áu…_ty≥
 
Áu…
;

649 i‡(
OP_MAX
 > 255)

650 
	`Áèl
("cannotÖerform fast decoding,Åoo many opcodes");

652 
	`debug
("sim: decodingÅext segment...");

653 
addr
=
ld_ãxt_ba£
;

654 
addr
 < (
ld_ãxt_ba£
+
ld_ãxt_size
);

655 
addr
 +(
md_ö°_t
))

657 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
ö°
, (inst));

658 i‡(
Áu…
 !
md_Áu…_n⁄e
)

659 
	`Áèl
("couldÇotÑead instruction memory");

660 
ö°
.
a
 = (ö°.®& ~0xffË| (
w‹d_t
)
	`MD_OP_ENUM
(
	`MD_OPFIELD
(inst));

661 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
ö°
, (inst));

662 i‡(
Áu…
 !
md_Áu…_n⁄e
)

663 
	`Áèl
("couldÇot write instruction memory");

666 
	}
}

	@target-pisa/pisa.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

62 
md_ö°_t
 
	gMD_NOP_INST
 = { 
NOP
, 0 };

65 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

68 *
	gmd_›2«me
[
OP_MAX
] = {

69 
NULL
,

70 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

71 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

72 
	#CONNECT
(
OP
)

	)

73 
	~"machöe.def
"

77 *
	gmd_›2f‹m©
[
OP_MAX
] = {

78 
NULL
,

79 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

80 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

81 
	#CONNECT
(
OP
)

	)

82 
	~"machöe.def
"

86 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

87 
FUCœss_NA
,

88 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

89 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœss_NA
,

	)

90 
	#CONNECT
(
OP
)

	)

91 
	~"machöe.def
"

95 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

96 
NULL
,

111 
	gmd_›2Êags
[
OP_MAX
] = {

112 
NA
,

113 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

114 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

115 
	#CONNECT
(
OP
)

	)

116 
	~"machöe.def
"

120 
w‹d_t
 
	gmd_Ã_masks
[] = {

121 #ifde‡
BYTES_BIG_ENDIAN


136 *
	gmd_amode_°r
[
md_amode_NUM
] =

147 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

152 { "$r0", 
π_g¥
, 0 },

153 { "$zîo", 
π_g¥
, 0 },

154 { "$r1", 
π_g¥
, 1 },

155 { "$r2", 
π_g¥
, 2 },

156 { "$r3", 
π_g¥
, 3 },

157 { "$r4", 
π_g¥
, 4 },

158 { "$r5", 
π_g¥
, 5 },

159 { "$r6", 
π_g¥
, 6 },

160 { "$r7", 
π_g¥
, 7 },

161 { "$r8", 
π_g¥
, 8 },

162 { "$r9", 
π_g¥
, 9 },

163 { "$r10", 
π_g¥
, 10 },

164 { "$r11", 
π_g¥
, 11 },

165 { "$r12", 
π_g¥
, 12 },

166 { "$r13", 
π_g¥
, 13 },

167 { "$r14", 
π_g¥
, 14 },

168 { "$r15", 
π_g¥
, 15 },

169 { "$r16", 
π_g¥
, 16 },

170 { "$r17", 
π_g¥
, 17 },

171 { "$r18", 
π_g¥
, 18 },

172 { "$r19", 
π_g¥
, 19 },

173 { "$r20", 
π_g¥
, 20 },

174 { "$r21", 
π_g¥
, 21 },

175 { "$r22", 
π_g¥
, 22 },

176 { "$r23", 
π_g¥
, 23 },

177 { "$r24", 
π_g¥
, 24 },

178 { "$r25", 
π_g¥
, 25 },

179 { "$r26", 
π_g¥
, 26 },

180 { "$r27", 
π_g¥
, 27 },

181 { "$r28", 
π_g¥
, 28 },

182 { "$gp", 
π_g¥
, 28 },

183 { "$r29", 
π_g¥
, 29 },

184 { "$•", 
π_g¥
, 29 },

185 { "$r30", 
π_g¥
, 30 },

186 { "$Â", 
π_g¥
, 30 },

187 { "$r31", 
π_g¥
, 31 },

190 { "$f0", 
π_Âr
, 0 },

191 { "$f1", 
π_Âr
, 1 },

192 { "$f2", 
π_Âr
, 2 },

193 { "$f3", 
π_Âr
, 3 },

194 { "$f4", 
π_Âr
, 4 },

195 { "$f5", 
π_Âr
, 5 },

196 { "$f6", 
π_Âr
, 6 },

197 { "$f7", 
π_Âr
, 7 },

198 { "$f8", 
π_Âr
, 8 },

199 { "$f9", 
π_Âr
, 9 },

200 { "$f10", 
π_Âr
, 10 },

201 { "$f11", 
π_Âr
, 11 },

202 { "$f12", 
π_Âr
, 12 },

203 { "$f13", 
π_Âr
, 13 },

204 { "$f14", 
π_Âr
, 14 },

205 { "$f15", 
π_Âr
, 15 },

206 { "$f16", 
π_Âr
, 16 },

207 { "$f17", 
π_Âr
, 17 },

208 { "$f18", 
π_Âr
, 18 },

209 { "$f19", 
π_Âr
, 19 },

210 { "$f20", 
π_Âr
, 20 },

211 { "$f21", 
π_Âr
, 21 },

212 { "$f22", 
π_Âr
, 22 },

213 { "$f23", 
π_Âr
, 23 },

214 { "$f24", 
π_Âr
, 24 },

215 { "$f25", 
π_Âr
, 25 },

216 { "$f26", 
π_Âr
, 26 },

217 { "$f27", 
π_Âr
, 27 },

218 { "$f28", 
π_Âr
, 28 },

219 { "$f29", 
π_Âr
, 29 },

220 { "$f30", 
π_Âr
, 30 },

221 { "$f31", 
π_Âr
, 31 },

224 { "$d0", 
π_d¥
, 0 },

225 { "$d1", 
π_d¥
, 1 },

226 { "$d2", 
π_d¥
, 2 },

227 { "$d3", 
π_d¥
, 3 },

228 { "$d4", 
π_d¥
, 4 },

229 { "$d5", 
π_d¥
, 5 },

230 { "$d6", 
π_d¥
, 6 },

231 { "$d7", 
π_d¥
, 7 },

232 { "$d8", 
π_d¥
, 8 },

233 { "$d9", 
π_d¥
, 9 },

234 { "$d10", 
π_d¥
, 10 },

235 { "$d11", 
π_d¥
, 11 },

236 { "$d12", 
π_d¥
, 12 },

237 { "$d13", 
π_d¥
, 13 },

238 { "$d14", 
π_d¥
, 14 },

239 { "$d15", 
π_d¥
, 15 },

242 { "$l0", 
π_Õr
, 0 },

243 { "$l1", 
π_Õr
, 1 },

244 { "$l2", 
π_Õr
, 2 },

245 { "$l3", 
π_Õr
, 3 },

246 { "$l4", 
π_Õr
, 4 },

247 { "$l5", 
π_Õr
, 5 },

248 { "$l6", 
π_Õr
, 6 },

249 { "$l7", 
π_Õr
, 7 },

250 { "$l8", 
π_Õr
, 8 },

251 { "$l9", 
π_Õr
, 9 },

252 { "$l10", 
π_Õr
, 10 },

253 { "$l11", 
π_Õr
, 11 },

254 { "$l12", 
π_Õr
, 12 },

255 { "$l13", 
π_Õr
, 13 },

256 { "$l14", 
π_Õr
, 14 },

257 { "$l15", 
π_Õr
, 15 },

258 { "$l16", 
π_Õr
, 16 },

259 { "$l17", 
π_Õr
, 17 },

260 { "$l18", 
π_Õr
, 18 },

261 { "$l19", 
π_Õr
, 19 },

262 { "$l20", 
π_Õr
, 20 },

263 { "$l21", 
π_Õr
, 21 },

264 { "$l22", 
π_Õr
, 22 },

265 { "$l23", 
π_Õr
, 23 },

266 { "$l24", 
π_Õr
, 24 },

267 { "$l25", 
π_Õr
, 25 },

268 { "$l26", 
π_Õr
, 26 },

269 { "$l27", 
π_Õr
, 27 },

270 { "$l28", 
π_Õr
, 28 },

271 { "$l29", 
π_Õr
, 29 },

272 { "$l30", 
π_Õr
, 30 },

273 { "$l31", 
π_Õr
, 31 },

276 { "$hi", 
π_˘æ
, 0 },

277 { "$lo", 
π_˘æ
, 1 },

278 { "$fcc", 
π_˘æ
, 2 },

281 { "$pc", 
π_PC
, 0 },

282 { "$≈c", 
π_NPC
, 0 },

285 { 
NULL
, 
π_g¥
, 0 }

290 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

292 
i
;

294 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

296 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

297  
md_ªg_«mes
[
i
].
°r
;

301  
NULL
;

302 
	}
}

305 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

306 
is_wrôe
,

307 
md_ªg_ty≥
 
π
,

308 
ªg
,

309 
evÆ_vÆue_t
 *
vÆ
)

311 
π
)

313 
π_g¥
:

314 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

317 i‡(!
is_wrôe
)

319 
vÆ
->
ty≥
 = 
ë_uöt
;

320 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_R
[
ªg
];

323 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

326 
π_Õr
:

327 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

330 i‡(!
is_wrôe
)

332 
vÆ
->
ty≥
 = 
ë_uöt
;

333 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_F
.
l
[
ªg
];

336 
ªgs
->
ªgs_F
.
l
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

339 
π_Âr
:

340 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

343 i‡(!
is_wrôe
)

345 
vÆ
->
ty≥
 = 
ë_Êﬂt
;

346 
vÆ
->
vÆue
.
as_Êﬂt
 = 
ªgs
->
ªgs_F
.
f
[
ªg
];

349 
ªgs
->
ªgs_F
.
f
[
ªg
] = 
	`evÆ_as_Êﬂt
(*
vÆ
);

352 
π_d¥
:

353 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
/2)

356 i‡(!
is_wrôe
)

358 
vÆ
->
ty≥
 = 
ë_doubÀ
;

359 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

362 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

365 
π_˘æ
:

366 
ªg
)

369 i‡(!
is_wrôe
)

371 
vÆ
->
ty≥
 = 
ë_uöt
;

372 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
hi
;

375 
ªgs
->
ªgs_C
.
hi
 = 
	`evÆ_as_uöt
(*
vÆ
);

379 i‡(!
is_wrôe
)

381 
vÆ
->
ty≥
 = 
ë_uöt
;

382 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
lo
;

385 
ªgs
->
ªgs_C
.
lo
 = 
	`evÆ_as_uöt
(*
vÆ
);

389 i‡(!
is_wrôe
)

391 
vÆ
->
ty≥
 = 
ë_öt
;

392 
vÆ
->
vÆue
.
as_öt
 = 
ªgs
->
ªgs_C
.
fcc
;

395 
ªgs
->
ªgs_C
.
fcc
 = 
	`evÆ_as_uöt
(*
vÆ
);

403 
π_PC
:

404 i‡(!
is_wrôe
)

406 
vÆ
->
ty≥
 = 
ë_addr
;

407 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

410 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

413 
π_NPC
:

414 i‡(!
is_wrôe
)

416 
vÆ
->
ty≥
 = 
ë_addr
;

417 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

420 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

424 
	`∑nic
("bogusÑegister bank");

428  
NULL
;

429 
	}
}

433 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

435 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x",

436 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

437 
	}
}

440 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

442 
i
;

444 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

446 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

447 
	`Ârötf
(
°ªam
, " ");

448 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

449 
	`Ârötf
(
°ªam
, "\n");

451 
	}
}

455 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

457 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x/%f",

458 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
l
[ªg],Ñegs.l[ªg],Ñegs.
f
[reg]);

459 i‡–!(
ªg
 & 1))

461 
	`Ârötf
(
°ªam
, " (%4sás double: %f)",

462 
	`md_ªg_«me
(
π_d¥
, 
ªg
/2), 
ªgs
.
d
[reg/2]);

464 
	}
}

467 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

469 
i
;

472 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

474 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

477 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

478 
	`Ârötf
(
°ªam
, "\n");

480 
	}
}

483 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

486 
ªg
)

489 
	`Ârötf
(
°ªam
, "HI: 0x%08x", 
ªgs
.
hi
);

493 
	`Ârötf
(
°ªam
, "LO: 0x%08x", 
ªgs
.
lo
);

497 
	`Ârötf
(
°ªam
, "FCC: 0x%08x", 
ªgs
.
fcc
);

501 
	`∑nic
("bogus controlÑegister index");

503 
	}
}

506 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

508 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

509 
	`Ârötf
(
°ªam
, " ");

510 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

511 
	`Ârötf
(
°ªam
, " ");

512 
	`md_¥öt_¸eg
(
ªgs
, 2, 
°ªam
);

513 
	`Ârötf
(
°ªam
, "\n");

514 
	}
}

517 
w‹d_t


518 
	$md_¸c_ªgs
(
ªgs_t
 *
ªgs
)

520 
i
;

521 
w‹d_t
 
¸c_accum
 = 0;

523 
i
=0; i < 
MD_NUM_IREGS
; i++)

524 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_R
[
i
]);

526 
i
=0; i < 
MD_NUM_FREGS
; i++)

527 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_F
.
l
[
i
]);

529 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
hi
);

530 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
lo
);

531 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
fcc
);

532 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_PC
);

533 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_NPC
);

535  
¸c_accum
;

536 
	}
}

539 
w‹d_t


540 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

542 
i
;

543 
w‹d_t
 
checksum
 = 0;

545 
i
=0; i < 
MD_NUM_IREGS
; i++)

546 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

548 
i
=0; i < 
MD_NUM_FREGS
; i++)

549 
checksum
 ^
ªgs
->
ªgs_F
.
l
[
i
];

551 
checksum
 ^
ªgs
->
ªgs_C
.
hi
;

552 
checksum
 ^
ªgs
->
ªgs_C
.
lo
;

553 
checksum
 ^
ªgs
->
ªgs_C
.
fcc
;

554 
checksum
 ^
ªgs
->
ªgs_PC
;

555 
checksum
 ^
ªgs
->
ªgs_NPC
;

557  
checksum
;

558 
	}
}

562 
	$md_öô_decodî
()

565 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

566 i‡(
md_mask2›
[(
MSK
)]Ë
	`Áèl
("doubly defined mask value"); \

567 i‡((
MSK
Ë>
MD_MAX_MASK
Ë
	`Áèl
("mask value isÅooÜarge"); \

568 
md_mask2›
[(
MSK
)]=(
OP
);

	)

570 
	~"machöe.def
"

571 
	}
}

575 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

576 
md_addr_t
 
pc
,

577 
FILE
 *
°ªam
)

579 
md_›code
 
›
;

582 i‡(!
°ªam
)

583 
°ªam
 = 
°dîr
;

586 
	`MD_SET_OPCODE
(
›
, 
ö°
);

589 i‡(
›
 =
OP_NA
 || o∞>
OP_MAX
)

592 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x:%08x>", 
ö°
.
a
, in°.
b
);

596 *
s
;

598 
	`Ârötf
(
°ªam
, "%-10s", 
	`MD_OP_NAME
(
›
));

600 
s
 = 
	`MD_OP_FORMAT
(
›
);

601 *
s
) {

602 *
s
) {

604 
	`Ârötf
(
°ªam
, "r%d", 
RD
);

607 
	`Ârötf
(
°ªam
, "r%d", 
RS
);

610 
	`Ârötf
(
°ªam
, "r%d", 
RT
);

613 
	`Ârötf
(
°ªam
, "r%d", 
BS
);

616 
	`Ârötf
(
°ªam
, "f%d", 
FD
);

619 
	`Ârötf
(
°ªam
, "f%d", 
FS
);

622 
	`Ârötf
(
°ªam
, "f%d", 
FT
);

625 
	`Ârötf
(
°ªam
, "0x%x", (
pc
 + 8 + (
OFS
 << 2)));

629 
	`Ârötf
(
°ªam
, "%d", 
IMM
);

632 
	`Ârötf
(
°ªam
, "%d", 
SHAMT
);

635 
	`Ârötf
(
°ªam
, "%u", 
UIMM
);

638 
	`Ârötf
(
°ªam
, "0x%x", 
UIMM
);

641 
	`Ârötf
(
°ªam
, "0x%x", ((
pc
 & 036000000000Ë| (
TARG
 << 2)));

644 
	`Ârötf
(
°ªam
, "0x%x", 
BCODE
);

649 i‡(
SS_COMP_OP
 =
SS_COMP_NOP
)

650 
	`Ârötf
(
°ªam
, ")");

651 i‡(
SS_COMP_OP
 =
SS_COMP_POST_INC
)

652 
	`Ârötf
(
°ªam
, ")+");

653 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DEC
)

654 
	`Ârötf
(
°ªam
, ")-");

655 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_INC
)

656 
	`Ârötf
(
°ªam
, ")^+");

657 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DEC
)

658 
	`Ârötf
(
°ªam
, ")^-");

659 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_INC
)

660 
	`Ârötf
(
°ªam
, ")++");

661 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_DEC
)

662 
	`Ârötf
(
°ªam
, ")--");

663 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_INC
)

664 
	`Ârötf
(
°ªam
, ")^++");

665 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_DEC
)

666 
	`Ârötf
(
°ªam
, ")^--");

668 
	`∑nic
("bogus SS_COMP_OP");

673 
	`Âutc
(*
s
, 
°ªam
);

675 
s
++;

678 
	}
}

687 
	#XX
 0x6bababab

	)

690 
	gss_f‹e_èb
[ 8][ 5] = {

694  { 
XX
, XX, XX, XX, XX, },

696  { 
XX
, XX, XX, XX, XX, },

697  { 
XX
, XX, XX, XX, XX, },

698  { 
XX
, XX, XX, XX, XX, },

703 
	gss_a·_èb
[ 8][ 5] = {

707  { 
XX
, XX, XX, XX, XX, },

709  { 
XX
, XX, XX, XX, XX, },

710  { 
XX
, XX, XX, XX, XX, },

711  { 
XX
, XX, XX, XX, XX, },

716 
md_addr_t
 
	gss_Ã_ãmp
;

719 
md_addr_t
 
	gãmp_bs
, 
	gãmp_rd
;

	@target-pisa/pisa.h

52 #i‚de‡
PISA_H


53 
	#PISA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

68 
	#TARGET_PISA


	)

70 #i‚de‡
TARGET_PISA_BIG


71 #i‚de‡
TARGET_PISA_LITTLE


73 #ifde‡
BYTES_BIG_ENDIAN


74 
	#TARGET_PISA_BIG


	)

76 
	#TARGET_PISA_LITTLE


	)

82 #i‡
deföed
(
BYTES_BIG_ENDIAN
Ë&& deföed(
TARGET_PISA_LITTLE
)

83 
	#MD_CROSS_ENDIAN


	)

85 #i‡
deföed
(
BYTES_LITTLE_ENDIAN
Ë&& deföed(
TARGET_PISA_BIG
)

86 
	#MD_CROSS_ENDIAN


	)

90 
	#NA
 0

	)

97 #unde‡
MD_QWORD_ADDRS


100 
w‹d_t
 
	tmd_addr_t
;

108 
	#MD_PAGE_SIZE
 4096

	)

109 
	#MD_LOG_PAGE_SIZE
 12

	)

116 
	emd_Áu…_ty≥
 {

117 
	mmd_Áu…_n⁄e
 = 0,

118 
	mmd_Áu…_ac˚ss
,

119 
	mmd_Áu…_Æignmít
,

120 
	mmd_Áu…_ovîÊow
,

121 
	mmd_Áu…_div0
,

122 
	mmd_Áu…_bªak
,

123 
	mmd_Áu…_unim∂
,

124 
	mmd_Áu…_öã∫Æ


133 
	#MD_NUM_IREGS
 32

	)

136 
	#MD_NUM_FREGS
 32

	)

139 
	#MD_NUM_CREGS
 3

	)

142 
	#MD_TOTAL_REGS
 \

143 –32 + 32 + 3 + 1 + 1 + 1)

	)

146 
sw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

150 
sw‹d_t
 
	ml
[
MD_NUM_FREGS
];

151 
sÊﬂt_t
 
	mf
[
MD_NUM_FREGS
];

152 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
/2];

153 } 
	tmd_Âr_t
;

157 
sw‹d_t
 
	mhi
, 
	mlo
;

158 
	mfcc
;

159 } 
	tmd_˘æ_t
;

162 
	emd_ªg_«mes
 {

163 
	mMD_REG_ZERO
 = 0,

164 
	mMD_REG_GP
 = 28,

165 
	mMD_REG_SP
 = 29,

166 
	mMD_REG_FP
 = 30

176 
w‹d_t
 
	ma
;

177 
w‹d_t
 
	mb
;

178 } 
	tmd_ö°_t
;

181 
md_ö°_t
 
MD_NOP_INST
;

184 #ifde‡
MD_CROSS_ENDIAN


186 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

187 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

188 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

189 
	#MD_SWAPI
(
X
Ë((X).
a
 = 
	`SWAP_WORD
((X).a), \

190 (
X
).
b
 = 
	`SWAP_WORD
((X).b))

	)

194 
	#MD_SWAPH
(
X
Ë(X)

	)

195 
	#MD_SWAPW
(
X
Ë(X)

	)

196 
	#MD_SWAPQ
(
X
Ë(X)

	)

197 
	#MD_SWAPD
(
X
Ë(X)

	)

198 
	#MD_SWAPI
(
X
Ë(X)

	)

203 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

204 { 
ö°
.
a
 = 
	`MEM_READ_WORD
(
mem
, (
PC
)); \

205 
ö°
.
b
 = 
	`MEM_READ_WORD
(
mem
, (
PC
Ë+ (
w‹d_t
)); }

	)

212 
	#MD_TEXT_BASE
 0x00400000

	)

213 
	#MD_DATA_BASE
 0x10000000

	)

214 
	#MD_STACK_BASE
 0x7fffc000

	)

217 
	#MD_MAX_ENVIRON
 16384

	)

225 
	#MD_OPFIELD
(
INST
Ë(INST.
a
 & 0xff)

	)

226 
	#MD_SET_OPCODE
(
OP
, 
INST
Ë((OPË((INST).
a
 & 0xff))

	)

230 
	#MD_MAX_MASK
 255

	)

233 
	emd_›code
 {

234 
	mOP_NA
 = 0,

235 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

236 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

237 
	#CONNECT
(
OP
)

	)

238 
	~"machöe.def
"

239 
	mOP_MAX


243 
	#MD_OP_ENUM
(
MSK
Ë(
md_mask2›
[MSK])

	)

244 
md_›code
 
md_mask2›
[];

247 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

248 *
md_›2«me
[];

251 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

252 *
md_›2f‹m©
[];

255 
	emd_fu_˛ass
 {

256 
	mFUCœss_NA
 = 0,

257 
	mI¡ALU
,

258 
	mI¡MULT
,

259 
	mI¡DIV
,

260 
	mFlﬂtADD
,

261 
	mFlﬂtCMP
,

262 
	mFlﬂtCVT
,

263 
	mFlﬂtMULT
,

264 
	mFlﬂtDIV
,

265 
	mFlﬂtSQRT
,

266 
	mRdP‹t
,

267 
	mWrP‹t
,

268 
	mNUM_FU_CLASSES


272 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

273 
md_fu_˛ass
 
md_›2fu
[];

276 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

277 *
md_fu2«me
[];

280 
	#F_ICOMP
 0x00000001

	)

281 
	#F_FCOMP
 0x00000002

	)

282 
	#F_CTRL
 0x00000004

	)

283 
	#F_UNCOND
 0x00000008

	)

284 
	#F_COND
 0x00000010

	)

285 
	#F_MEM
 0x00000020

	)

286 
	#F_LOAD
 0x00000040

	)

287 
	#F_STORE
 0x00000080

	)

288 
	#F_DISP
 0x00000100

	)

289 
	#F_RR
 0x00000200

	)

290 
	#F_DIRECT
 0x00000400

	)

291 
	#F_TRAP
 0x00000800

	)

292 
	#F_LONGLAT
 0x00001000

	)

293 
	#F_DIRJMP
 0x00002000

	)

294 
	#F_INDIRJMP
 0x00004000

	)

295 
	#F_CALL
 0x00008000

	)

296 
	#F_FPCOND
 0x00010000

	)

297 
	#F_IMM
 0x00020000

	)

300 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

301 
md_›2Êags
[];

304 #unde‡
RS


305 
	#RS
 (
ö°
.
b
 >> 24Ë

	)

306 
	#RT
 ((
ö°
.
b
 >> 16Ë& 0xffË

	)

307 
	#RD
 ((
ö°
.
b
 >> 8Ë& 0xffË

	)

310 
	#SHAMT
 (
ö°
.
b
 & 0xff)

	)

313 
	#FS
 
RS


	)

314 
	#FT
 
RT


	)

315 
	#FD
 
RD


	)

318 
	#IMM
 (()(–)(
ö°
.
b
 & 0xffff)))

	)

321 
	#UIMM
 (
ö°
.
b
 & 0xffff)

	)

324 
	#TARG
 (
ö°
.
b
 & 0x3ffffff)

	)

327 
	#BCODE
 (
ö°
.
b
 & 0xfffff)

	)

330 
	#OFS
 
IMM


	)

333 
	#BS
 
RS


	)

336 
	#MAXINT_VAL
 0x7fffffff

	)

339 
	#OVER
(
X
,
Y
) \

340 ((((
X
Ë> 0Ë&& ((
Y
Ë> 0Ë&& (
MAXINT_VAL
 - (X) < (Y))) \

341 || (((
X
Ë< 0Ë&& ((
Y
Ë< 0Ë&& (-
MAXINT_VAL
 - (XË> (Y))))

	)

344 
	#UNDER
(
X
,
Y
) \

345 ((((
X
Ë> 0Ë&& ((
Y
Ë< 0Ë&& (
MAXINT_VAL
 + (Y) < (X))) \

346 || (((
X
Ë< 0Ë&& ((
Y
Ë> 0Ë&& (-
MAXINT_VAL
 + (YË> (X))))

	)

349 #i‚de‡
SET_TPC


350 
	#SET_TPC
(
PC
Ë()0

	)

353 #ifde‡
BYTES_BIG_ENDIAN


355 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

356 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

357 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

358 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

359 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

362 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

363 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

364 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

365 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

366 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

369 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

370 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

371 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

372 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

373 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

376 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

377 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

378 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

379 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

380 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

384 
w‹d_t
 
md_Ã_masks
[];

388 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

389 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

390 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

393 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

394 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

395 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

398 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

399 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

400 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

401 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

404 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

405 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

406 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

407 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

416 
	#SS_SYS_exô
 1

	)

417 
	#MD_EXIT_SYSCALL
(
REGS
Ë((REGS)->
ªgs_R
[2] =
SS_SYS_exô
)

	)

420 
	#SS_SYS_wrôe
 4

	)

421 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

422 ((
REGS
)->
ªgs_R
[2] =
SS_SYS_wrôe
 \

423 && ((
REGS
)->
ªgs_R
[4] == 1 \

424 || (
REGS
)->
ªgs_R
[4] = 2))

	)

427 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[4])

	)

430 
	#MD_IS_CALL
(
OP
) \

431 ((
	`MD_OP_FLAGS
(
OP
Ë& (
F_CTRL
|
F_CALL
)Ë=(F_CTRL|F_CALL))

	)

434 
	#MD_IS_RETURN
(
OP
Ë((OPË=
JR
 && (
RS
Ë=31)

	)

437 
	#MD_IS_INDIR
(
OP
Ë((OPË=
JR
)

	)

440 
	emd_amode_ty≥
 {

441 
	mmd_amode_imm
,

442 
	mmd_amode_gp
,

443 
	mmd_amode_•
,

444 
	mmd_amode_Â
,

445 
	mmd_amode_di•
,

446 
	mmd_amode_º
,

447 
	mmd_amode_NUM


449 *
md_amode_°r
[
md_amode_NUM
];

452 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
) \

453 { i‡((
OP
Ë=
LUI
Ë(
FSM
Ë(
RT
); }

	)

456 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

458 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

460 i‡((
BS
Ë=(
FSM
)) \

461 (
AM
Ë
md_amode_imm
; \

462 i‡((
BS
Ë=
MD_REG_GP
) \

463 (
AM
Ë
md_amode_gp
; \

464 i‡((
BS
Ë=
MD_REG_SP
) \

465 (
AM
Ë
md_amode_•
; \

466 i‡((
BS
Ë=
MD_REG_FP
) \

467 (
AM
Ë
md_amode_Â
; \

469 (
AM
Ë
md_amode_di•
; \

471 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

472 (
AM
Ë
md_amode_º
; \

474 
	`∑nic
("cannot decodeáddressing mode"); \

475 }

	)

478 
	#MD_AMODE_POSTPROBE
(
FSM
) \

479 { (
FSM
Ë
MD_REG_ZERO
; }

	)

487 
	#MD_EIO_FILE_FORMAT
 
EIO_PISA_FORMAT


	)

489 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

490 
	`exo_√w
(
ec_li°
, \

491  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

492  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

493  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

494  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
hi
), \

495  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
lo
), \

496  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
fcc
),\

497 
NULL
)

	)

499 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

500 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

502 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

503 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
l
[
IDX
])

	)

505 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

507 i‡(!
exo
 \

508 || 
exo
->
ec
 !
ec_li°
 \

509 || !
exo
->
as_li°
.
hód
 \

510 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

511 || !
exo
->
as_li°
.
hód
->
√xt
 \

512 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

513 || !
exo
->
as_li°
.
hód
->
√xt
->next \

514 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

515 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

516 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

517 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

518 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

519 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next->next \

520 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
ec
 !
ec_öãgî
\

521 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->√xà!
NULL
) \

522 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

523 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

524 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
; \

525 (
REGS
)->
ªgs_NPC
 = \

526 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
; \

527 (
REGS
)->
ªgs_C
.
hi
 = \

528 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

529 (
REGS
)->
ªgs_C
.
lo
 = \

530 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
; \

531 (
REGS
)->
ªgs_C
.
fcc
 = \

532 ()
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

534 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

535 ((
REGS
)->
ªgs_R
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

537 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

538 ((
REGS
)->
ªgs_F
.
l
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

540 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

541 ((
REGS
)->
ªgs_R
[
IDX
] !(
sw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

543 
	#MD_FIRST_IN_REG
 2

	)

544 
	#MD_LAST_IN_REG
 7

	)

546 
	#MD_FIRST_OUT_REG
 2

	)

547 
	#MD_LAST_OUT_REG
 7

	)

555 
qw‹d_t
 
	texo_addªss_t
;

558 
qw‹d_t
 
	texo_öãgî_t
;

561 
	texo_Êﬂt_t
;

569 #ifde‡
HOST_HAS_QWORD


570 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

571 
	#sc_cou¡î
 
sc_sqw‹d


	)

572 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

574 
	#°©_ªg_cou¡î
 
°©_ªg_doubÀ


	)

575 
	#sc_cou¡î
 
sc_doubÀ


	)

576 
	#f‹_cou¡î
 
f‹_doubÀ


	)

580 
	#°©_ªg_addr
 
°©_ªg_uöt


	)

588 
	emd_ªg_ty≥
 {

589 
	mπ_g¥
,

590 
	mπ_Õr
,

591 
	mπ_Âr
,

592 
	mπ_d¥
,

593 
	mπ_˘æ
,

594 
	mπ_PC
,

595 
	mπ_NPC
,

596 
	mπ_NUM


600 
	smd_ªg_«mes_t
 {

601 *
	m°r
;

602 
md_ªg_ty≥
 
	mfûe
;

603 
	mªg
;

607 
md_ªg_«mes_t
 
md_ªg_«mes
[];

610 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

613 
	gevÆ_vÆue_t
;

614 
	gªgs_t
;

616 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

617 
is_wrôe
,

618 
md_ªg_ty≥
 
π
,

619 
ªg
,

620 
evÆ_vÆue_t
 *
vÆ
);

623 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

624 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

627 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

628 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

631 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

632 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

635 
w‹d_t
 
md_¸c_ªgs
(
ªgs_t
 *
ªgs
);

638 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

646 
	#MD_AGEN_OP
 
ADD


	)

649 
	#MD_NOP_OP
 
NOP


	)

653 
	#MD_VALID_ADDR
(
ADDR
) \

654 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

655 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_°ack_ba£
))

	)

664 
	#MD_BR_SHIFT
 3

	)

672 
md_öô_decodî
();

676 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

677 
md_addr_t
 
pc
,

678 
FILE
 *
°ªam
);

701 
	#SS_PAGE_SIZE
 4096

	)

704 
	#SS_NUM_REGS
 32

	)

707 
	#SS_TOTAL_REGS
 \

708 (
SS_NUM_REGS
+SS_NUM_REGS+ 1+ 1+ 1+ 1+ \

709  1+ 1)

	)

712 
	#SS_COMP_OP
 ((
ö°
.
a
 & 0xff00Ë>> 8)

	)

715 
	#SS_COMP_NOP
 0x00

	)

716 
	#SS_COMP_POST_INC
 0x01

	)

717 
	#SS_COMP_POST_DEC
 0x02

	)

718 
	#SS_COMP_PRE_INC
 0x03

	)

719 
	#SS_COMP_PRE_DEC
 0x04

	)

720 
	#SS_COMP_POST_DBL_INC
 0x05

	)

721 
	#SS_COMP_POST_DBL_DEC
 0x06

	)

722 
	#SS_COMP_PRE_DBL_INC
 0x07

	)

723 
	#SS_COMP_PRE_DBL_DEC
 0x08

	)

730 
	#INC_DEC
(
EXPR
, 
REG
, 
SIZE
) \

731 (
	`SET_GPR
((
REG
), 
	`GPR
(REGË+ 
ss_f‹e_èb
[(
SIZE
)-1][
SS_COMP_OP
]), \

732 (
EXPR
), \

733 
	`SET_GPR
((
REG
), 
	`GPR
(REGË+ 
ss_a·_èb
[(
SIZE
)-1][
SS_COMP_OP
]))

	)

736 
ss_f‹e_èb
[8][5];

737 
ss_a·_èb
[8][5];

740 
	#Rgp
 28

	)

741 
	#R•
 29

	)

742 
	#RÂ
 30

	)

745 
SS_ADDR_TYPE
 
ss_Ã_ãmp
;

748 
SS_ADDR_TYPE
 
ãmp_bs
, 
ãmp_rd
;

754 #i‚de‡
IFAIL


755 
	#IFAIL
(
S
Ë
	`Áèl
(S)

	)

759 
	#DIV0
(
N
Ë(((NË=0Ë? 
	`IFAIL
("dividêby 0"Ë: ()0)

	)

762 
	#INTALIGN
(
N
) (((N) & 01) \

763 ? 
	`IFAIL
("bad INTÑegi°îálignmít"Ë: ()0)

	)

766 
	#FPALIGN
(
N
) (((N) & 01) \

767 ? 
	`IFAIL
("bad FPÑegi°îálignmít"Ë: ()0)

	)

770 
	#TALIGN
(
TARG
) (((TARG) & 0x7) \

771 ? 
	`IFAIL
("bad jum∞Æignmít"Ë: ()0)

	)

773 
	#OVER
(
X
,
Y
Ë(()0)

	)

774 
	#UNDER
(
X
,
Y
Ë(()0)

	)

775 
	#DIV0
(
N
Ë(()0)

	)

776 
	#INTALIGN
(
N
Ë(()0)

	)

777 
	#FPALIGN
(
N
Ë(()0)

	)

778 
	#TALIGN
(
TARG
Ë(()0)

	)

783 
	#IDIV
(
A
, 
B
Ë((AË/ (B))

	)

784 
	#IMOD
(
A
, 
B
Ë((AË% (B))

	)

785 
	#FDIV
(
A
, 
B
Ë((AË/ (B))

	)

786 
	#FINT
(
A
Ë(()A)

	)

	@target-pisa/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 #ifde‡
BFD_LOADER


58 
	~<bfd.h
>

60 
	~"èrgë-piß/ecoff.h
"

62 
	~"lﬂdî.h
"

63 
	~"symbﬁ.h
"

68 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

71 
	gsym_nsyms
 = 0;

72 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

75 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

78 
	gsym_¡extsyms
 = 0;

79 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

82 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

85 
	gsym_nd©asyms
 = 0;

86 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

89 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

92 
	gsyms_lﬂded
 = 
FALSE
;

94 #ifde‡
PRINT_SYMS


97 
	$Êags2°r
(
Êags
)

99 
buf
[256];

100 *
p
;

102 i‡(!
Êags
)

105 
p
 = 
buf
;

106 *
p
 = '\0';

108 i‡(
Êags
 & 
BSF_LOCAL
)

110 *
p
++ = 'L';

111 *
p
++ = '|';

113 i‡(
Êags
 & 
BSF_GLOBAL
)

115 *
p
++ = 'G';

116 *
p
++ = '|';

118 i‡(
Êags
 & 
BSF_DEBUGGING
)

120 *
p
++ = 'D';

121 *
p
++ = '|';

123 i‡(
Êags
 & 
BSF_FUNCTION
)

125 *
p
++ = 'F';

126 *
p
++ = '|';

128 i‡(
Êags
 & 
BSF_KEEP
)

130 *
p
++ = 'K';

131 *
p
++ = '|';

133 i‡(
Êags
 & 
BSF_KEEP_G
)

135 *
p
++ = 'k'; *p++ = '|';

137 i‡(
Êags
 & 
BSF_WEAK
)

139 *
p
++ = 'W';

140 *
p
++ = '|';

142 i‡(
Êags
 & 
BSF_SECTION_SYM
)

144 *
p
++ = 'S'; *p++ = '|';

146 i‡(
Êags
 & 
BSF_OLD_COMMON
)

148 *
p
++ = 'O';

149 *
p
++ = '|';

151 i‡(
Êags
 & 
BSF_NOT_AT_END
)

153 *
p
++ = 'N';

154 *
p
++ = '|';

156 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

158 *
p
++ = 'C';

159 *
p
++ = '|';

161 i‡(
Êags
 & 
BSF_WARNING
)

163 *
p
++ = 'w';

164 *
p
++ = '|';

166 i‡(
Êags
 & 
BSF_INDIRECT
)

168 *
p
++ = 'I';

169 *
p
++ = '|';

171 i‡(
Êags
 & 
BSF_FILE
)

173 *
p
++ = 'f';

174 *
p
++ = '|';

177 i‡(
p
 =
buf
)

178 
	`∑nic
("no flags detected");

180 *--
p
 = '\0';

181  
buf
;

182 
	}
}

187 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

189  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

190 
	}
}

194 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

196  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

197 
	}
}

199 
	#RELEVANT_SCOPE
(
SYM
) \

201 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

203 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

204 && (
SYM
)->
«me
[0] != '$') \

206 
lﬂd_loˇls
 \

208 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

209 && (
SYM
)->
«me
[0] == '$') \

211 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

212 && (
SYM
)->
«me
[0] ='$'))))

	)

217 
	$sym_lﬂdsyms
(*
‚ame
,

218 
lﬂd_loˇls
)

220 
i
, 
debug_˙t
;

221 #ifde‡
BFD_LOADER


222 
bfd
 *
abfd
;

223 
asymbﬁ
 **
syms
;

224 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

226 
Àn
;

227 
FILE
 *
fobj
;

228 
ecoff_fûehdr
 
fhdr
;

229 
ecoff_aouthdr
 
ahdr
;

230 
ecoff_symhdr_t
 
symhdr
;

231 *
°πab
 = 
NULL
;

232 
ecoff_EXTR
 *
exå
;

235 i‡(
syms_lﬂded
)

242 #ifde‡
BFD_LOADER


245 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

247 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

252 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

254 
	`bfd_˛o£
(
abfd
);

255 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

259 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

260 
	`∑nic
("binaryÉndian changed");

262 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

265 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

266 i‡(
°‹age
 <= 0)

267 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

269 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

270 i‡(!
syms
)

271 
	`Áèl
("out of virtual memory");

273 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

274 i‡(
nsyms
 <= 0)

275 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

282 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

283 
i
=0; i < 
nsyms
; i++)

285 
asymbﬁ
 *
sym
 = 
syms
[
i
];

289 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

290 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

295 && 
	`RELEVANT_SCOPE
(
sym
))

298 
sym_nd©asyms
++;

299 #ifde‡
PRINT_SYMS


300 
	`Ârötf
(
°dîr
,

302 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

303 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

307 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

309 && 
	`RELEVANT_SCOPE
(
sym
))

312 
sym_¡extsyms
++;

313 #ifde‡
PRINT_SYMS


314 
	`Ârötf
(
°dîr
,

316 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

317 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

323 #ifde‡
PRINT_SYMS


324 
	`Ârötf
(
°dîr
,

326 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

327 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

331 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

332 i‡(
sym_nsyms
 <= 0)

333 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

336 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

337 i‡(!
sym_db
)

338 
	`Áèl
("out of virtual memory");

341 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

343 
asymbﬁ
 *
sym
 = 
syms
[
i
];

347 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

348 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

353 && 
	`RELEVANT_SCOPE
(
sym
))

356 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

357 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

358 
sym_db
[
debug_˙t
].
öôülized
 =

359 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

360 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

362 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

363 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

364 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

366 
debug_˙t
++;

369 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

371 && 
	`RELEVANT_SCOPE
(
sym
))

374 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

375 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

376 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

377 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

378 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

379 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

381 
debug_˙t
++;

389 i‡(
debug_˙t
 !
sym_nsyms
)

390 
	`∑nic
("couldÇotÜocateáll counted symbols");

393 
	`‰ì
(
syms
);

397 i‡(!
	`bfd_˛o£
(
abfd
))

398 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

403 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

404 
fobj
 = 
	`f›í
(
‚ame
, "rb");

406 
fobj
 = 
	`f›í
(
‚ame
, "r");

408 i‡(!
fobj
)

409 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

411 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

412 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

415 i‡(
fhdr
.
f_magic
 !
ECOFF_EB_MAGIC
 && fhdr.f_magi¯!
ECOFF_EL_MAGIC
)

416 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

418 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

419 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

422 
	`f£ek
(
fobj
, 
fhdr
.
f_sym±r
, 0);

424 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

425 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

427 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

428 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

431 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

432 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

433 i‡(!
°πab
)

434 
	`Áèl
("out of virtual memory");

437 
	`f£ek
(
fobj
, 
symhdr
.
cbSsOff£t
, 0);

438 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

439 
	`Áèl
("error whileÑeading symbolÅableÇames");

442 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

443 i‡(
Àn
 <= 0)

444 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

445 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

446 i‡(!
sym_db
)

447 
	`Áèl
("out of virtual memory");

450 
exå
 =

451 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

452 i‡(!
exå
)

453 
	`Áèl
("out of virtual memory");

455 
	`f£ek
(
fobj
, 
symhdr
.
cbExtOff£t
, 0);

456 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

457 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

459 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

462 
i
=0; i < 
symhdr
.
õxtMax
; i++)

464 
°r_off£t
;

466 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

469 
	`¥ötf
("ext %2d: ifd = %2d, iss = %3d, value = %8x, st = %3x, "

471 
i
, 
exå
[i].
ifd
,

472 
exå
[
i
].
asym
.
iss
,Éxå[i].asym.
vÆue
,

473 
exå
[
i
].
asym
.
°
,Éxå[i].asym.
sc
,

474 
exå
[
i
].
asym
.
ödex
);

475 
	`¥ötf
(" %08x %2d %2d %s\n",

476 
exå
[
i
].
asym
.
vÆue
,

477 
exå
[
i
].
asym
.
°
,

478 
exå
[
i
].
asym
.
sc
,

479 &
°πab
[
°r_off£t
]);

482 
exå
[
i
].
asym
.
°
)

484 
ECOFF_°GlobÆ
:

485 
ECOFF_°Sètic
:

487 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

488 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

489 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

490 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

492 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

493 
sym_nsyms
++;

494 
sym_nd©asyms
++;

497 
ECOFF_°Proc
:

498 
ECOFF_°SèticProc
:

499 
ECOFF_°Labñ
:

501 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

502 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

503 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

504 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

505 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

506 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

507 
sym_nsyms
++;

508 
sym_¡extsyms
++;

515 
	`‰ì
(
exå
);

518 i‡(
	`f˛o£
(
fobj
))

519 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

528 
sym_syms
 =

529 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

530 i‡(!
sym_syms
)

531 
	`Áèl
("out of virtual memory");

533 
sym_syms_by_«me
 =

534 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

535 i‡(!
sym_syms_by_«me
)

536 
	`Áèl
("out of virtual memory");

538 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

540 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

541 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

542 
debug_˙t
++;

545 i‡(
debug_˙t
 !
sym_nsyms
)

546 
	`∑nic
("couldÇotÜocateáll symbols");

549 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

552 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

555 
sym_ãxtsyms
 =

556 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

557 i‡(!
sym_ãxtsyms
)

558 
	`Áèl
("out of virtual memory");

560 
sym_ãxtsyms_by_«me
 =

561 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

562 i‡(!
sym_ãxtsyms_by_«me
)

563 
	`Áèl
("out of virtual memory");

565 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

567 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

569 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

570 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

571 
debug_˙t
++;

575 i‡(
debug_˙t
 !
sym_¡extsyms
)

576 
	`∑nic
("couldÇotÜocateállÅext symbols");

579 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

582 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

583 (
sym_sym_t
 *), (*)
ncmp
);

586 
sym_d©asyms
 =

587 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

588 i‡(!
sym_d©asyms
)

589 
	`Áèl
("out of virtual memory");

591 
sym_d©asyms_by_«me
 =

592 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

593 i‡(!
sym_d©asyms_by_«me
)

594 
	`Áèl
("out of virtual memory");

596 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

598 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

600 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

601 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

602 
debug_˙t
++;

606 i‡(
debug_˙t
 !
sym_nd©asyms
)

607 
	`∑nic
("couldÇotÜocateáll data symbols");

610 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

613 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

614 (
sym_sym_t
 *), (*)
ncmp
);

617 
i
=0; i<
sym_¡extsyms
; i++)

619 
sym_ãxtsyms
[
i
]->
size
 =

620 (
i
 !(
sym_¡extsyms
 - 1)

621 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

622 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

624 
i
=0; i<
sym_nd©asyms
; i++)

626 
sym_d©asyms
[
i
]->
size
 =

627 (
i
 !(
sym_nd©asyms
 - 1)

628 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

629 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

633 
syms_lﬂded
 = 
TRUE
;

634 
	}
}

638 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

639 
FILE
 *
fd
)

641 
	`Ârötf
(
fd
,

643 
sym
->
«me
,

644 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

645 
sym
->
öôülized
 ? "y" : "n",

646 
sym
->
pub
 ? "y" : "n",

647 
sym
->
loˇl
 ? "y" : "n",

648 
sym
->
addr
,

649 
sym
->
size
);

650 
	}
}

654 
	$sym_dumpsyms
(
FILE
 *
fd
)

656 
i
;

658 
i
=0; i < 
sym_nsyms
; i++)

659 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

660 
	}
}

664 
	$sym_dump°©e
(
FILE
 *
fd
)

666 
i
;

668 i‡(
fd
 =
NULL
)

669 
fd
 = 
°dîr
;

671 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

672 
i
=0; i < 
sym_nsyms
; i++)

673 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

675 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

676 
i
=0; i < 
sym_nsyms
; i++)

677 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

679 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

680 
i
=0; i < 
sym_¡extsyms
; i++)

681 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

683 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

684 
i
=0; i < 
sym_¡extsyms
; i++)

685 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

687 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

688 
i
=0; i < 
sym_nd©asyms
; i++)

689 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

691 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

692 
i
=0; i < 
sym_nd©asyms
; i++)

693 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

694 
	}
}

700 
sym_sym_t
 *

701 
	$sym_böd_addr
(
md_addr_t
 
addr
,

702 *
pödex
,

703 
exa˘
,

704 
sym_db_t
 
db
)

706 
nsyms
, 
low
, 
high
, 
pos
;

707 
sym_sym_t
 **
syms
;

709 
db
)

711 
sdb_™y
:

712 
syms
 = 
sym_syms
;

713 
nsyms
 = 
sym_nsyms
;

715 
sdb_ãxt
:

716 
syms
 = 
sym_ãxtsyms
;

717 
nsyms
 = 
sym_¡extsyms
;

719 
sdb_d©a
:

720 
syms
 = 
sym_d©asyms
;

721 
nsyms
 = 
sym_nd©asyms
;

724 
	`∑nic
("bogus symbol database");

728 i‡(!
nsyms
)

730 i‡(
pödex
)

731 *
pödex
 = -1;

732  
NULL
;

736 
low
 = 0;

737 
high
 = 
nsyms
-1;

738 
pos
 = (
low
 + 
high
) >> 1;

740 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

742 || (!
exa˘


743 && 
syms
[
pos
]->
addr
 <=áddr

744 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

746 i‡(
addr
 < 
syms
[
pos
]->addr)

747 
high
 = 
pos
 - 1;

749 
low
 = 
pos
 + 1;

750 i‡(
high
 >
low
)

751 
pos
 = (
low
 + 
high
) >> 1;

754 i‡(
pödex
)

755 *
pödex
 = -1;

756  
NULL
;

761 i‡(
pödex
)

762 *
pödex
 = 
pos
;

763  
syms
[
pos
];

764 
	}
}

769 
sym_sym_t
 *

770 
	$sym_böd_«me
(*
«me
,

771 *
pödex
,

772 
sym_db_t
 
db
)

774 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

775 
sym_sym_t
 **
syms
;

777 
db
)

779 
sdb_™y
:

780 
syms
 = 
sym_syms_by_«me
;

781 
nsyms
 = 
sym_nsyms
;

783 
sdb_ãxt
:

784 
syms
 = 
sym_ãxtsyms_by_«me
;

785 
nsyms
 = 
sym_¡extsyms
;

787 
sdb_d©a
:

788 
syms
 = 
sym_d©asyms_by_«me
;

789 
nsyms
 = 
sym_nd©asyms
;

792 
	`∑nic
("bogus symbol database");

796 i‡(!
nsyms
)

798 i‡(
pödex
)

799 *
pödex
 = -1;

800  
NULL
;

804 
low
 = 0;

805 
high
 = 
nsyms
-1;

806 
pos
 = (
low
 + 
high
) >> 1;

807 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

809 i‡(
cmp
 > 0)

810 
high
 = 
pos
 - 1;

812 
low
 = 
pos
 + 1;

813 i‡(
high
 >
low
)

814 
pos
 = (
low
 + 
high
) >> 1;

817 i‡(
pödex
)

818 *
pödex
 = -1;

819  
NULL
;

824 i‡(
pödex
)

825 *
pödex
 = 
pos
;

826  
syms
[
pos
];

827 
	}
}

	@target-pisa/syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~"ho°.h
"

55 
	~"misc.h
"

56 
	~"machöe.h
"

57 
	~"ªgs.h
"

58 
	~"mem‹y.h
"

59 
	~"lﬂdî.h
"

60 
	~"sim.h
"

61 
	~"ídün.h
"

62 
	~"eio.h
"

63 
	~"sysˇŒ.h
"

66 #i‚de‡
MD_CROSS_ENDIAN


68 #ifde‡
_MSC_VER


69 
	~<io.h
>

71 
	~<uni°d.h
>

73 
	~<f˙é.h
>

74 
	~<sys/ty≥s.h
>

75 #i‚de‡
_MSC_VER


76 
	~<sys/∑øm.h
>

78 
	~<î∫o.h
>

79 
	~<time.h
>

80 #i‚de‡
_MSC_VER


81 
	~<sys/time.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/ªsour˚.h
>

86 
	~<sig«l.h
>

90 
	~<sys/°©.h
>

91 #i‚de‡
_MSC_VER


92 
	~<sys/uio.h
>

94 
	~<£tjmp.h
>

95 #i‚de‡
_MSC_VER


96 
	~<sys/times.h
>

98 
	~<limôs.h
>

99 #i‚de‡
_MSC_VER


100 
	~<sys/io˘l.h
>

102 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

103 #i‚de‡
_MSC_VER


104 
	~<sys/£À˘.h
>

107 #ifde‡
löux


108 
	~<utime.h
>

109 
	~<sgây.h
>

112 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

113 
	~<sgây.h
>

116 #ifde‡
__svr4__


117 
	~"utime.h
"

120 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

121 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

122 
	~<dúít.h
>

124 
	~<sys/dú.h
>

128 #unde‡
NL0


129 #unde‡
NL1


130 #unde‡
CR0


131 #unde‡
CR1


132 #unde‡
CR2


133 #unde‡
CR3


134 #unde‡
TAB0


135 #unde‡
TAB1


136 #unde‡
TAB2


137 #unde‡
XTABS


138 #unde‡
BS0


139 #unde‡
BS1


140 #unde‡
FF0


141 #unde‡
FF1


142 #unde‡
ECHO


143 #unde‡
NOFLSH


144 #unde‡
TOSTOP


145 #unde‡
FLUSHO


146 #unde‡
PENDIN


149 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

150 #unde‡
CR0


153 #ifde‡
__FªeBSD__


154 
	~<ãrmios.h
>

157 #i‚de‡
_MSC_VER


158 
	~<ãrmio.h
>

162 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

164 #unde‡
HUPCL


165 #unde‡
ECHO


166 #unde‡
B50


167 #unde‡
B75


168 #unde‡
B110


169 #unde‡
B134


170 #unde‡
B150


171 #unde‡
B200


172 #unde‡
B300


173 #unde‡
B600


174 #unde‡
B1200


175 #unde‡
B1800


176 #unde‡
B2400


177 #unde‡
B4800


178 #unde‡
B9600


179 #unde‡
B19200


180 #unde‡
B38400


181 #unde‡
NL0


182 #unde‡
NL1


183 #unde‡
CR0


184 #unde‡
CR1


185 #unde‡
CR2


186 #unde‡
CR3


187 #unde‡
TAB0


188 #unde‡
TAB1


189 #unde‡
BS0


190 #unde‡
BS1


191 #unde‡
FF0


192 #unde‡
FF1


193 #unde‡
EXTA


194 #unde‡
EXTB


195 #unde‡
B900


196 #unde‡
B3600


197 #unde‡
B7200


198 #unde‡
XTABS


199 
	~<sgây.h
>

200 
	~<utime.h
>

203 #ifde‡
_MSC_VER


204 
	#ac˚ss
 
_ac˚ss


	)

205 
	#chmod
 
_chmod


	)

206 
	#chdú
 
_chdú


	)

207 
	#u∆ök
 
_u∆ök


	)

208 
	#›í
 
_›í


	)

209 
	#¸ót
 
_¸ót


	)

210 
	#pùe
 
_pùe


	)

211 
	#dup
 
_dup


	)

212 
	#dup2
 
_dup2


	)

213 
	#°©
 
_°©


	)

214 
	#f°©
 
_f°©


	)

215 
	#l£ek
 
_l£ek


	)

216 
	#ªad
 
_ªad


	)

217 
	#wrôe
 
_wrôe


	)

218 
	#˛o£
 
_˛o£


	)

219 
	#gëpid
 
_gëpid


	)

220 
	#utime
 
_utime


	)

221 
	~<sys/utime.h
>

229 
	#SS_SYS_sysˇŒ
 0

	)

231 
	#SS_SYS_f‹k
 2

	)

232 
	#SS_SYS_ªad
 3

	)

234 
	#SS_SYS_›í
 5

	)

235 
	#SS_SYS_˛o£
 6

	)

237 
	#SS_SYS_¸ót
 8

	)

238 
	#SS_SYS_lök
 9

	)

239 
	#SS_SYS_u∆ök
 10

	)

240 
	#SS_SYS_execv
 11

	)

241 
	#SS_SYS_chdú
 12

	)

243 
	#SS_SYS_mknod
 14

	)

244 
	#SS_SYS_chmod
 15

	)

245 
	#SS_SYS_chown
 16

	)

246 
	#SS_SYS_brk
 17

	)

248 
	#SS_SYS_l£ek
 19

	)

249 
	#SS_SYS_gëpid
 20

	)

250 
	#SS_SYS_mou¡
 21

	)

251 
	#SS_SYS_umou¡
 22

	)

253 
	#SS_SYS_gëuid
 24

	)

255 
	#SS_SYS_±ø˚
 26

	)

262 
	#SS_SYS_ac˚ss
 33

	)

265 
	#SS_SYS_sync
 36

	)

266 
	#SS_SYS_kûl
 37

	)

267 
	#SS_SYS_°©
 38

	)

269 
	#SS_SYS_l°©
 40

	)

270 
	#SS_SYS_dup
 41

	)

271 
	#SS_SYS_pùe
 42

	)

273 
	#SS_SYS_¥ofû
 44

	)

276 
	#SS_SYS_gëgid
 47

	)

280 
	#SS_SYS_ac˘
 51

	)

283 
	#SS_SYS_io˘l
 54

	)

284 
	#SS_SYS_ªboŸ
 55

	)

286 
	#SS_SYS_symlök
 57

	)

287 
	#SS_SYS_ªadlök
 58

	)

288 
	#SS_SYS_execve
 59

	)

289 
	#SS_SYS_umask
 60

	)

290 
	#SS_SYS_chroŸ
 61

	)

291 
	#SS_SYS_f°©
 62

	)

293 
	#SS_SYS_gë∑gesize
 64

	)

294 
	#SS_SYS_mªm≠
 65

	)

295 
	#SS_SYS_vf‹k
 66

	)

298 
	#SS_SYS_sbrk
 69

	)

299 
	#SS_SYS_s°k
 70

	)

300 
	#SS_SYS_mm≠
 71

	)

301 
	#SS_SYS_vadvi£
 72

	)

302 
	#SS_SYS_munm≠
 73

	)

303 
	#SS_SYS_m¥Ÿe˘
 74

	)

304 
	#SS_SYS_madvi£
 75

	)

305 
	#SS_SYS_vh™gup
 76

	)

307 
	#SS_SYS_möc‹e
 78

	)

308 
	#SS_SYS_gëgroups
 79

	)

309 
	#SS_SYS_£tgroups
 80

	)

310 
	#SS_SYS_gëpgΩ
 81

	)

311 
	#SS_SYS_£çgΩ
 82

	)

312 
	#SS_SYS_£tôimî
 83

	)

313 
	#SS_SYS_waô3
 84

	)

314 
	#SS_SYS_waô
 
SYS_waô3


	)

315 
	#SS_SYS_sw≠⁄
 85

	)

316 
	#SS_SYS_gëôimî
 86

	)

317 
	#SS_SYS_gëho°«me
 87

	)

318 
	#SS_SYS_£tho°«me
 88

	)

319 
	#SS_SYS_gëdèbÀsize
 89

	)

320 
	#SS_SYS_dup2
 90

	)

321 
	#SS_SYS_gëd›t
 91

	)

322 
	#SS_SYS_f˙é
 92

	)

323 
	#SS_SYS_£À˘
 93

	)

324 
	#SS_SYS_£td›t
 94

	)

325 
	#SS_SYS_fsync
 95

	)

326 
	#SS_SYS_£çri‹ôy
 96

	)

327 
	#SS_SYS_sockë
 97

	)

328 
	#SS_SYS_c⁄√˘
 98

	)

329 
	#SS_SYS_ac˚±
 99

	)

330 
	#SS_SYS_gë¥i‹ôy
 100

	)

331 
	#SS_SYS_£nd
 101

	)

332 
	#SS_SYS_ªcv
 102

	)

333 
	#SS_SYS_sigªtu∫
 103

	)

335 
	#SS_SYS_böd
 104

	)

336 
	#SS_SYS_£tsock›t
 105

	)

337 
	#SS_SYS_li°í
 106

	)

339 
	#SS_SYS_sigvec
 108

	)

340 
	#SS_SYS_sigblock
 109

	)

341 
	#SS_SYS_sig£tmask
 110

	)

342 
	#SS_SYS_sig∑u£
 111

	)

343 
	#SS_SYS_sig°ack
 112

	)

344 
	#SS_SYS_ªcvmsg
 113

	)

345 
	#SS_SYS_£ndmsg
 114

	)

347 
	#SS_SYS_gëtimeofday
 116

	)

348 
	#SS_SYS_gërußge
 117

	)

349 
	#SS_SYS_gësock›t
 118

	)

351 
	#SS_SYS_ªadv
 120

	)

352 
	#SS_SYS_wrôev
 121

	)

353 
	#SS_SYS_£âimeofday
 122

	)

354 
	#SS_SYS_fchown
 123

	)

355 
	#SS_SYS_fchmod
 124

	)

356 
	#SS_SYS_ªcv‰om
 125

	)

357 
	#SS_SYS_£åeuid
 126

	)

358 
	#SS_SYS_£åegid
 127

	)

359 
	#SS_SYS_ª«me
 128

	)

360 
	#SS_SYS_åunˇã
 129

	)

361 
	#SS_SYS_·runˇã
 130

	)

362 
	#SS_SYS_Êock
 131

	)

364 
	#SS_SYS_£ndto
 133

	)

365 
	#SS_SYS_shutdown
 134

	)

366 
	#SS_SYS_sockë∑ú
 135

	)

367 
	#SS_SYS_mkdú
 136

	)

368 
	#SS_SYS_rmdú
 137

	)

369 
	#SS_SYS_utimes
 138

	)

370 
	#SS_SYS_sig˛ónup
 139

	)

372 
	#SS_SYS_adjtime
 140

	)

373 
	#SS_SYS_gë≥î«me
 141

	)

374 
	#SS_SYS_gëho°id
 142

	)

375 
	#SS_SYS_£tho°id
 143

	)

376 
	#SS_SYS_gëæimô
 144

	)

377 
	#SS_SYS_£ålimô
 145

	)

378 
	#SS_SYS_kûÕg
 146

	)

380 
	#SS_SYS_£tquŸa
 148

	)

381 
	#SS_SYS_quŸa
 149

	)

382 
	#SS_SYS_gësock«me
 150

	)

384 
	#SS_SYS_sysmùs
 151

	)

388 
	#SS_SYS_ˇcheÊush
 152

	)

389 
	#SS_SYS_ˇche˘l
 153

	)

390 
	#SS_SYS_©omic_›
 155

	)

393 
	#SS_SYS_debug
 154

	)

395 
	#SS_SYS_°©fs
 160

	)

396 
	#SS_SYS_f°©fs
 161

	)

397 
	#SS_SYS_unmou¡
 162

	)

399 
	#SS_SYS_quŸa˘l
 168

	)

402 
	#SS_SYS_hdwc⁄f
 171

	)

406 
	#SS_SYS_nfs_svc
 158

	)

407 
	#SS_SYS_nfssvc
 158

	)

408 
	#SS_SYS_nfs_biod
 163

	)

409 
	#SS_SYS_async_d´m⁄
 163

	)

410 
	#SS_SYS_nfs_gëfh
 164

	)

411 
	#SS_SYS_gëfh
 164

	)

412 
	#SS_SYS_gëdúíåõs
 159

	)

413 
	#SS_SYS_gëdomaö«me
 165

	)

414 
	#SS_SYS_£tdomaö«me
 166

	)

415 
	#SS_SYS_exp‹tfs
 169

	)

417 
	#SS_SYS_msg˘l
 172

	)

418 
	#SS_SYS_msggë
 173

	)

419 
	#SS_SYS_msgrcv
 174

	)

420 
	#SS_SYS_msg¢d
 175

	)

421 
	#SS_SYS_£m˘l
 176

	)

422 
	#SS_SYS_£mgë
 177

	)

423 
	#SS_SYS_£m›
 178

	)

424 
	#SS_SYS_u«me
 179

	)

425 
	#SS_SYS_shmsys
 180

	)

426 
	#SS_SYS_∂ock
 181

	)

427 
	#SS_SYS_lockf
 182

	)

428 
	#SS_SYS_u°©
 183

	)

429 
	#SS_SYS_gëm¡
 184

	)

430 
	#SS_SYS_sig≥ndög
 187

	)

431 
	#SS_SYS_£tsid
 188

	)

432 
	#SS_SYS_waôpid
 189

	)

434 
	#SS_SYS_utc_gëtime
 233

	)

435 
	#SS_SYS_utc_adjtime
 234

	)

436 
	#SS_SYS_aud˙é
 252

	)

437 
	#SS_SYS_audgí
 253

	)

438 
	#SS_SYS_°¨t˝u
 254

	)

439 
	#SS_SYS_°›˝u
 255

	)

440 
	#SS_SYS_gësysöfo
 256

	)

441 
	#SS_SYS_£tsysöfo
 257

	)

444 
	#SS_IOCTL_TIOCGETP
 1074164744

	)

445 
	#SS_IOCTL_TIOCSETP
 -2147060727

	)

446 
	#SS_IOCTL_TCGETP
 1076130901

	)

447 
	#SS_IOCTL_TCGETA
 1075082331

	)

448 
	#SS_IOCTL_TIOCGLTC
 1074164852

	)

449 
	#SS_IOCTL_TIOCSLTC
 -2147060619

	)

450 
	#SS_IOCTL_TIOCGWINSZ
 1074295912

	)

451 
	#SS_IOCTL_TCSETAW
 -2146143143

	)

452 
	#SS_IOCTL_TIOCGETC
 1074164754

	)

453 
	#SS_IOCTL_TIOCSETC
 -2147060719

	)

454 
	#SS_IOCTL_TIOCLBIC
 -2147191682

	)

455 
	#SS_IOCTL_TIOCLBIS
 -2147191681

	)

456 
	#SS_IOCTL_TIOCLGET
 0x4004747c

	)

457 
	#SS_IOCTL_TIOCLSET
 -2147191683

	)

461 
	#MAXBUFSIZE
 1024

	)

467 
	#NUM_IOCTL_BYTES
 128

	)

471 
	sss_°©buf


473 
shÆf_t
 
	mss_°_dev
;

474 
shÆf_t
 
	mss_∑d
;

475 
w‹d_t
 
	mss_°_öo
;

476 
hÆf_t
 
	mss_°_mode
;

477 
shÆf_t
 
	mss_°_∆ök
;

478 
shÆf_t
 
	mss_°_uid
;

479 
shÆf_t
 
	mss_°_gid
;

480 
shÆf_t
 
	mss_°_rdev
;

481 
shÆf_t
 
	mss_∑d1
;

482 
sw‹d_t
 
	mss_°_size
;

483 
sw‹d_t
 
	mss_°_©ime
;

484 
sw‹d_t
 
	mss_°_•¨e1
;

485 
sw‹d_t
 
	mss_°_mtime
;

486 
sw‹d_t
 
	mss_°_•¨e2
;

487 
sw‹d_t
 
	mss_°_˘ime
;

488 
sw‹d_t
 
	mss_°_•¨e3
;

489 
sw‹d_t
 
	mss_°_blksize
;

490 
sw‹d_t
 
	mss_°_blocks
;

491 
w‹d_t
 
	mss_°_gínum
;

492 
sw‹d_t
 
	mss_°_•¨e4
;

495 
	sss_sgâyb
 {

496 
byã_t
 
	msg_i•ìd
;

497 
byã_t
 
	msg_o•ìd
;

498 
byã_t
 
	msg_îa£
;

499 
byã_t
 
	msg_kûl
;

500 
shÆf_t
 
	msg_Êags
;

503 
	sss_timevÆ


505 
sw‹d_t
 
	mss_tv_£c
;

506 
sw‹d_t
 
	mss_tv_u£c
;

511 
	sss_rußge


513 
ss_timevÆ
 
	mss_ru_utime
;

514 
ss_timevÆ
 
	mss_ru_°ime
;

515 
sw‹d_t
 
	mss_ru_maxrss
;

516 
sw‹d_t
 
	mss_ru_ixrss
;

517 
sw‹d_t
 
	mss_ru_idrss
;

518 
sw‹d_t
 
	mss_ru_i§ss
;

519 
sw‹d_t
 
	mss_ru_möÊt
;

520 
sw‹d_t
 
	mss_ru_majÊt
;

521 
sw‹d_t
 
	mss_ru_nsw≠
;

522 
sw‹d_t
 
	mss_ru_öblock
;

523 
sw‹d_t
 
	mss_ru_oublock
;

524 
sw‹d_t
 
	mss_ru_msg¢d
;

525 
sw‹d_t
 
	mss_ru_msgrcv
;

526 
sw‹d_t
 
	mss_ru_nsig«ls
;

527 
sw‹d_t
 
	mss_ru_nvcsw
;

528 
sw‹d_t
 
	mss_ru_nivcsw
;

531 
	sss_timez⁄e


533 
sw‹d_t
 
	mss_tz_möuãswe°
;

534 
sw‹d_t
 
	mss_tz_d°time
;

537 
	sss_æimô


539 
	mss_æim_cur
;

540 
	mss_æim_max
;

545 
	#SS_O_RDONLY
 0

	)

546 
	#SS_O_WRONLY
 1

	)

547 
	#SS_O_RDWR
 2

	)

548 
	#SS_O_APPEND
 0x0008

	)

549 
	#SS_O_CREAT
 0x0200

	)

550 
	#SS_O_TRUNC
 0x0400

	)

551 
	#SS_O_EXCL
 0x0800

	)

552 
	#SS_O_NONBLOCK
 0x4000

	)

553 
	#SS_O_NOCTTY
 0x8000

	)

554 
	#SS_O_SYNC
 0x2000

	)

558 
	mss_Êag
;

559 
	mloˇl_Êag
;

560 } 
	gss_Êag_èbÀ
[] = {

562 #ifde‡
_MSC_VER


563 { 
SS_O_RDONLY
, 
_O_RDONLY
 },

564 { 
SS_O_WRONLY
, 
_O_WRONLY
 },

565 { 
SS_O_RDWR
, 
_O_RDWR
 },

566 { 
SS_O_APPEND
, 
_O_APPEND
 },

567 { 
SS_O_CREAT
, 
_O_CREAT
 },

568 { 
SS_O_TRUNC
, 
_O_TRUNC
 },

569 { 
SS_O_EXCL
, 
_O_EXCL
 },

570 #ifde‡
_O_NONBLOCK


571 { 
SS_O_NONBLOCK
, 
_O_NONBLOCK
 },

573 #ifde‡
_O_NOCTTY


574 { 
SS_O_NOCTTY
, 
_O_NOCTTY
 },

576 #ifde‡
_O_SYNC


577 { 
SS_O_SYNC
, 
_O_SYNC
 },

580 { 
SS_O_RDONLY
, 
O_RDONLY
 },

581 { 
SS_O_WRONLY
, 
O_WRONLY
 },

582 { 
SS_O_RDWR
, 
O_RDWR
 },

583 { 
SS_O_APPEND
, 
O_APPEND
 },

584 { 
SS_O_CREAT
, 
O_CREAT
 },

585 { 
SS_O_TRUNC
, 
O_TRUNC
 },

586 { 
SS_O_EXCL
, 
O_EXCL
 },

587 { 
SS_O_NONBLOCK
, 
O_NONBLOCK
 },

588 { 
SS_O_NOCTTY
, 
O_NOCTTY
 },

589 #ifde‡
O_SYNC


590 { 
SS_O_SYNC
, 
O_SYNC
 },

594 
	#SS_NFLAGS
 ((
ss_Êag_èbÀ
)/(ss_Êag_èbÀ[0]))

	)

603 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

604 
mem_ac˚ss_‚
 
mem_‚
,

605 
mem_t
 *
mem
,

606 
md_ö°_t
 
ö°
,

607 
åa˚abÀ
)

609 
w‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[2];

612 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

614 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

619 #ifde‡
MD_CROSS_ENDIAN


620 i‡(
syscode
 =
SS_SYS_exô
)

623 
	`l⁄gjmp
(
sim_exô_buf
, 
ªgs
->
ªgs_R
[4]+1);

626 
	`Áèl
("cannotÉxecute PISA system call on cross-endian host");

631 
syscode
)

633 
SS_SYS_exô
:

635 
	`l⁄gjmp
(
sim_exô_buf
, 
ªgs
->
ªgs_R
[4]+1);

639 
SS_SYS_f‹k
:

641 
ªgs
->
ªgs_R
[2] = 
	`f‹k
();

642 i‡(
ªgs
->
ªgs_R
[2] != -1)

644 
ªgs
->
ªgs_R
[7] = 0;

646 i‡(
ªgs
->
ªgs_R
[2] != 0)

647 
ªgs
->
ªgs_R
[3] = 0;

650 
	`Áèl
("SYS_fork failed");

655 
SS_SYS_vf‹k
:

657 
r31_∑ª¡
 = 
ªgs
->
ªgs_R
[31];

658  
ªgs
->
ªgs_R
[2] = 
	`vf‹k
();

659 i‡(
ªgs
->
ªgs_R
[2] != -1)

660 
ªgs
->
ªgs_R
[7] = 0;

662 
	`Áèl
("vfork() in SYS_vfork failed");

663 i‡(
ªgs
->
ªgs_R
[2] != 0)

665 
ªgs
->
ªgs_R
[3] = 0;

666 
ªgs
->
ªgs_R
[7] = 0;

667 
ªgs
->
ªgs_R
[31] = 
r31_∑ª¡
;

672 
SS_SYS_ªad
:

674 *
buf
;

677 i‡(!(
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6], ())))

678 
	`Áèl
("out of memory in SYS_read");

681  
ªgs
->
ªgs_R
[2] =

682 
	`ªad
–
ªgs
->
ªgs_R
[4], 
buf
,Ñegs->regs_R[6]);

685 i‡(
ªgs
->
ªgs_R
[2] != -1)

686 
ªgs
->
ªgs_R
[7] = 0;

690 
ªgs
->
ªgs_R
[2] = 
î∫o
;

691 
ªgs
->
ªgs_R
[7] = 1;

695 
	`mem_bc›y
(
mem_‚
, 
mem
,

696 
Wrôe
, 
ªgs
->
ªgs_R
[5],

697 
buf
, 
ªgs
->
ªgs_R
[2]);

700 
	`‰ì
(
buf
);

704 
SS_SYS_wrôe
:

706 *
buf
;

709 i‡(!(
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6], ())))

710 
	`Áèl
("out of memory in SYS_write");

713 
	`mem_bc›y
(
mem_‚
, 
mem
,

714 
Ród
, 
ªgs
->
ªgs_R
[5],

715 
buf
, 
ªgs
->
ªgs_R
[6]);

718 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

722  
ªgs
->
ªgs_R
[2] =

723 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[6], 
sim_¥ogfd
);

729  
ªgs
->
ªgs_R
[2] =

730 
	`wrôe
–
ªgs
->
ªgs_R
[4],

731 
buf
, 
ªgs
->
ªgs_R
[6]);

735 i‡(
ªgs
->
ªgs_R
[2] ==Ñegs->regs_R[6])

736  
ªgs
->
ªgs_R
[7] = 0;

740 
ªgs
->
ªgs_R
[2] = 
î∫o
;

741 
ªgs
->
ªgs_R
[7] = 1;

745 
	`‰ì
(
buf
);

749 
SS_SYS_›í
:

751 
buf
[
MAXBUFSIZE
];

752 
i
;

753 
ss_Êags
 = 
ªgs
->
ªgs_R
[5], 
loˇl_Êags
 = 0;

756 
i
=0; i<
SS_NFLAGS
; i++)

758 i‡(
ss_Êags
 & 
ss_Êag_èbÀ
[
i
].
ss_Êag
)

760 
ss_Êags
 &~
ss_Êag_èbÀ
[
i
].
ss_Êag
;

761 
loˇl_Êags
 |
ss_Êag_èbÀ
[
i
].
loˇl_Êag
;

765 i‡(
ss_Êags
 != 0)

766 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
ss_Êags
);

769 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

772  
ªgs
->
ªgs_R
[2] =

773 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[6]);

776 i‡(
ªgs
->
ªgs_R
[2] != -1)

777 
ªgs
->
ªgs_R
[7] = 0;

781 
ªgs
->
ªgs_R
[2] = 
î∫o
;

782 
ªgs
->
ªgs_R
[7] = 1;

787 
SS_SYS_˛o£
:

789 i‡–
ªgs
->
ªgs_R
[4] == 0

790 || 
ªgs
->
ªgs_R
[4] == 1

791 || 
ªgs
->
ªgs_R
[4] == 2)

793 
ªgs
->
ªgs_R
[7] = 0;

798 
ªgs
->
ªgs_R
[2] = 
	`˛o£
(Ñegs->regs_R[4]);

801 i‡(
ªgs
->
ªgs_R
[2] != -1)

802 
ªgs
->
ªgs_R
[7] = 0;

806 
ªgs
->
ªgs_R
[2] = 
î∫o
;

807 
ªgs
->
ªgs_R
[7] = 1;

811 
SS_SYS_¸ót
:

813 
buf
[
MAXBUFSIZE
];

816 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

819  
ªgs
->
ªgs_R
[2] = 
	`¸ót
(
buf
,Ñegs->regs_R[5]);

822 i‡(
ªgs
->
ªgs_R
[2] != -1)

823 
ªgs
->
ªgs_R
[7] = 0;

827 
ªgs
->
ªgs_R
[2] = 
î∫o
;

828 
ªgs
->
ªgs_R
[7] = 1;

833 
SS_SYS_u∆ök
:

835 
buf
[
MAXBUFSIZE
];

838 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

841  
ªgs
->
ªgs_R
[2] = 
	`u∆ök
(
buf
);

844 i‡(
ªgs
->
ªgs_R
[2] != -1)

845 
ªgs
->
ªgs_R
[7] = 0;

849 
ªgs
->
ªgs_R
[2] = 
î∫o
;

850 
ªgs
->
ªgs_R
[7] = 1;

855 
SS_SYS_chdú
:

857 
buf
[
MAXBUFSIZE
];

860 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

863  
ªgs
->
ªgs_R
[2] = 
	`chdú
(
buf
);

866 i‡(
ªgs
->
ªgs_R
[2] != -1)

867 
ªgs
->
ªgs_R
[7] = 0;

871 
ªgs
->
ªgs_R
[2] = 
î∫o
;

872 
ªgs
->
ªgs_R
[7] = 1;

877 
SS_SYS_chmod
:

879 
buf
[
MAXBUFSIZE
];

882 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

885  
ªgs
->
ªgs_R
[2] = 
	`chmod
(
buf
,Ñegs->regs_R[5]);

888 i‡(
ªgs
->
ªgs_R
[2] != -1)

889 
ªgs
->
ªgs_R
[7] = 0;

893 
ªgs
->
ªgs_R
[2] = 
î∫o
;

894 
ªgs
->
ªgs_R
[7] = 1;

899 
SS_SYS_chown
:

900 #ifde‡
_MSC_VER


901 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

902 
ªgs
->
ªgs_R
[7] = 0;

905 
buf
[
MAXBUFSIZE
];

908 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

911  
ªgs
->
ªgs_R
[2] = 
	`chown
(
buf
,Ñegs->regs_R[5],

912  
ªgs
->
ªgs_R
[6]);

915 i‡(
ªgs
->
ªgs_R
[2] != -1)

916 
ªgs
->
ªgs_R
[7] = 0;

920 
ªgs
->
ªgs_R
[2] = 
î∫o
;

921 
ªgs
->
ªgs_R
[7] = 1;

927 
SS_SYS_brk
:

929 
md_addr_t
 
addr
;

932 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[4], 
MD_PAGE_SIZE
);

935 i‡(
addr
 >
ld_brk_poöt
 &&ádd∏< (
md_addr_t
)
ªgs
->
ªgs_R
[29])

937 
ªgs
->
ªgs_R
[2] = 0;

938 
ªgs
->
ªgs_R
[7] = 0;

939 
ld_brk_poöt
 = 
addr
;

944 
ªgs
->
ªgs_R
[2] = 
ENOMEM
;

945 
ªgs
->
ªgs_R
[7] = 1;

950 
SS_SYS_l£ek
:

952 
ªgs
->
ªgs_R
[2] =

953 
	`l£ek
–
ªgs
->
ªgs_R
[4],

954  
ªgs
->
ªgs_R
[5],Ñegs->regs_R[6]);

957 i‡(
ªgs
->
ªgs_R
[2] != -1)

958 
ªgs
->
ªgs_R
[7] = 0;

962 
ªgs
->
ªgs_R
[2] = 
î∫o
;

963 
ªgs
->
ªgs_R
[7] = 1;

967 
SS_SYS_gëpid
:

969  
ªgs
->
ªgs_R
[2] = 
	`gëpid
();

972 i‡(
ªgs
->
ªgs_R
[2] != -1)

973 
ªgs
->
ªgs_R
[7] = 0;

977 
ªgs
->
ªgs_R
[2] = 
î∫o
;

978 
ªgs
->
ªgs_R
[7] = 1;

982 
SS_SYS_gëuid
:

983 #ifde‡
_MSC_VER


984 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

985 
ªgs
->
ªgs_R
[7] = 0;

988  
ªgs
->
ªgs_R
[2] = 
	`gëuid
();

991  
ªgs
->
ªgs_R
[3] = 
	`gëeuid
();

994 i‡(
ªgs
->
ªgs_R
[2] != -1)

995 
ªgs
->
ªgs_R
[7] = 0;

999 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1000 
ªgs
->
ªgs_R
[7] = 1;

1005 
SS_SYS_ac˚ss
:

1007 
buf
[
MAXBUFSIZE
];

1010 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1013  
ªgs
->
ªgs_R
[2] = 
	`ac˚ss
(
buf
,Ñegs->regs_R[5]);

1016 i‡(
ªgs
->
ªgs_R
[2] != -1)

1017 
ªgs
->
ªgs_R
[7] = 0;

1021 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1022 
ªgs
->
ªgs_R
[7] = 1;

1027 
SS_SYS_°©
:

1028 
SS_SYS_l°©
:

1030 
buf
[
MAXBUFSIZE
];

1031 
ss_°©buf
 
ss_sbuf
;

1032 #ifde‡
_MSC_VER


1033 
_°©
 
sbuf
;

1035 
°©
 
sbuf
;

1039 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1042 i‡(
syscode
 =
SS_SYS_°©
)

1043  
ªgs
->
ªgs_R
[2] = 
	`°©
(
buf
, &
sbuf
);

1046 #ifde‡
_MSC_VER


1047 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

1048 
ªgs
->
ªgs_R
[7] = 0;

1051  
ªgs
->
ªgs_R
[2] = 
	`l°©
(
buf
, &
sbuf
);

1056 i‡(
ªgs
->
ªgs_R
[2] != -1)

1057 
ªgs
->
ªgs_R
[7] = 0;

1061 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1062 
ªgs
->
ªgs_R
[7] = 1;

1066 
ss_sbuf
.
ss_°_dev
 = 
	`MD_SWAPH
(
sbuf
.
°_dev
);

1067 
ss_sbuf
.
ss_∑d
 = 0;

1068 
ss_sbuf
.
ss_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1069 
ss_sbuf
.
ss_°_mode
 = 
	`MD_SWAPH
(
sbuf
.
°_mode
);

1070 
ss_sbuf
.
ss_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1071 
ss_sbuf
.
ss_°_uid
 = 
	`MD_SWAPH
(
sbuf
.
°_uid
);

1072 
ss_sbuf
.
ss_°_gid
 = 
	`MD_SWAPH
(
sbuf
.
°_gid
);

1073 
ss_sbuf
.
ss_°_rdev
 = 
	`MD_SWAPH
(
sbuf
.
°_rdev
);

1074 
ss_sbuf
.
ss_∑d1
 = 0;

1075 
ss_sbuf
.
ss_°_size
 = 
	`MD_SWAPW
(
sbuf
.
°_size
);

1076 
ss_sbuf
.
ss_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1077 
ss_sbuf
.
ss_°_•¨e1
 = 0;

1078 
ss_sbuf
.
ss_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1079 
ss_sbuf
.
ss_°_•¨e2
 = 0;

1080 
ss_sbuf
.
ss_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1081 
ss_sbuf
.
ss_°_•¨e3
 = 0;

1082 #i‚de‡
_MSC_VER


1083 
ss_sbuf
.
ss_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1084 
ss_sbuf
.
ss_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1086 
ss_sbuf
.
ss_°_gínum
 = 0;

1087 
ss_sbuf
.
ss_°_•¨e4
 = 0;

1090 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1091 &
ss_sbuf
, (
ss_°©buf
));

1095 
SS_SYS_dup
:

1097  
ªgs
->
ªgs_R
[2] = 
	`dup
(Ñegs->regs_R[4]);

1100 i‡(
ªgs
->
ªgs_R
[2] != -1)

1101 
ªgs
->
ªgs_R
[7] = 0;

1105 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1106 
ªgs
->
ªgs_R
[7] = 1;

1110 #i‚de‡
_MSC_VER


1111 
SS_SYS_pùe
:

1113 
fd
[2];

1116 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
fd
, (fd));

1119  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

1122  
ªgs
->
ªgs_R
[2] = 
fd
[0];

1123  
ªgs
->
ªgs_R
[3] = 
fd
[1];

1126 i‡(
ªgs
->
ªgs_R
[7] == -1)

1128 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1129 
ªgs
->
ªgs_R
[7] = 1;

1135 
SS_SYS_gëgid
:

1136 #ifde‡
_MSC_VER


1137 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1138 
ªgs
->
ªgs_R
[7] = 0;

1141  
ªgs
->
ªgs_R
[2] = 
	`gëgid
();

1144  
ªgs
->
ªgs_R
[3] = 
	`gëegid
();

1147 i‡(
ªgs
->
ªgs_R
[2] != -1)

1148 
ªgs
->
ªgs_R
[7] = 0;

1152 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1153 
ªgs
->
ªgs_R
[7] = 1;

1158 
SS_SYS_io˘l
:

1160 
buf
[
NUM_IOCTL_BYTES
];

1161 
loˇl_ªq
 = 0;

1164  
ªgs
->
ªgs_R
[5]) {

1165 #ifde‡
TIOCGETP


1166 
SS_IOCTL_TIOCGETP
:

1167 
loˇl_ªq
 = 
TIOCGETP
;

1170 #ifde‡
TIOCSETP


1171 
SS_IOCTL_TIOCSETP
:

1172 
loˇl_ªq
 = 
TIOCSETP
;

1175 #ifde‡
TIOCGETP


1176 
SS_IOCTL_TCGETP
:

1177 
loˇl_ªq
 = 
TIOCGETP
;

1180 #ifde‡
TCGETA


1181 
SS_IOCTL_TCGETA
:

1182 
loˇl_ªq
 = 
TCGETA
;

1185 #ifde‡
TIOCGLTC


1186 
SS_IOCTL_TIOCGLTC
:

1187 
loˇl_ªq
 = 
TIOCGLTC
;

1190 #ifde‡
TIOCSLTC


1191 
SS_IOCTL_TIOCSLTC
:

1192 
loˇl_ªq
 = 
TIOCSLTC
;

1195 #ifde‡
TIOCGWINSZ


1196 
SS_IOCTL_TIOCGWINSZ
:

1197 
loˇl_ªq
 = 
TIOCGWINSZ
;

1200 #ifde‡
TCSETAW


1201 
SS_IOCTL_TCSETAW
:

1202 
loˇl_ªq
 = 
TCSETAW
;

1205 #ifde‡
TIOCGETC


1206 
SS_IOCTL_TIOCGETC
:

1207 
loˇl_ªq
 = 
TIOCGETC
;

1210 #ifde‡
TIOCSETC


1211 
SS_IOCTL_TIOCSETC
:

1212 
loˇl_ªq
 = 
TIOCSETC
;

1215 #ifde‡
TIOCLBIC


1216 
SS_IOCTL_TIOCLBIC
:

1217 
loˇl_ªq
 = 
TIOCLBIC
;

1220 #ifde‡
TIOCLBIS


1221 
SS_IOCTL_TIOCLBIS
:

1222 
loˇl_ªq
 = 
TIOCLBIS
;

1225 #ifde‡
TIOCLGET


1226 
SS_IOCTL_TIOCLGET
:

1227 
loˇl_ªq
 = 
TIOCLGET
;

1230 #ifde‡
TIOCLSET


1231 
SS_IOCTL_TIOCLSET
:

1232 
loˇl_ªq
 = 
TIOCLSET
;

1237 #i‡!
	`deföed
(
TIOCGETP
Ë&& (deföed(
löux
Ë|| deföed(
__CYGWIN32__
))

1238 i‡(!
loˇl_ªq
 && 
ªgs
->
ªgs_R
[5] =
SS_IOCTL_TIOCGETP
)

1240 
ãrmios
 
lbuf
;

1241 
ss_sgâyb
 
buf
;

1243  
ªgs
->
ªgs_R
[2] =

1244 
	`tcgë©å
–()
ªgs
->
ªgs_R
[4], &
lbuf
);

1247 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

1248 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

1249 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

1250 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

1251 
buf
.
sg_Êags
 = 0;

1253 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1254  
ªgs
->
ªgs_R
[6], &
buf
,

1255 (
ss_sgâyb
));

1257 i‡(
ªgs
->
ªgs_R
[2] != -1)

1258 
ªgs
->
ªgs_R
[7] = 0;

1261 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1262 
ªgs
->
ªgs_R
[7] = 1;

1268 i‡(!
loˇl_ªq
)

1272 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

1273 
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5]);

1274 
ªgs
->
ªgs_R
[2] = 0;

1275 
ªgs
->
ªgs_R
[7] = 0;

1279 #ifde‡
_MSC_VER


1280 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1281 
ªgs
->
ªgs_R
[7] = 0;

1286 #ifde‡
TIOCGETP


1287 i‡(
loˇl_ªq
 =
TIOCGETP
 && 
sim_¥ogfd
)

1293 
ªgs
->
ªgs_R
[2] = 
ENOTTY
;

1294 
ªgs
->
ªgs_R
[7] = 1;

1302 i‡–
ªgs
->
ªgs_R
[6] != 0)

1303 
	`mem_bc›y
(
mem_‚
, 
mem
,

1304 
Ród
, 
ªgs
->
ªgs_R
[6], 
buf
, 
NUM_IOCTL_BYTES
);

1307  
ªgs
->
ªgs_R
[2] =

1308 
	`io˘l
–
ªgs
->
ªgs_R
[4], 
loˇl_ªq
, 
buf
);

1311 i‡–
ªgs
->
ªgs_R
[6] != 0)

1312 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[6],

1313 
buf
, 
NUM_IOCTL_BYTES
);

1316 i‡(
ªgs
->
ªgs_R
[2] != -1)

1317 
ªgs
->
ªgs_R
[7] = 0;

1321 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1322 
ªgs
->
ªgs_R
[7] = 1;

1329 
SS_SYS_f°©
:

1331 
ss_°©buf
 
ss_sbuf
;

1332 #ifde‡
_MSC_VER


1333 
_°©
 
sbuf
;

1335 
°©
 
sbuf
;

1339  
ªgs
->
ªgs_R
[2] = 
	`f°©
–ªgs->ªgs_R[4], &
sbuf
);

1342 i‡(
ªgs
->
ªgs_R
[2] != -1)

1343 
ªgs
->
ªgs_R
[7] = 0;

1347 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1348 
ªgs
->
ªgs_R
[7] = 1;

1352 
ss_sbuf
.
ss_°_dev
 = 
	`MD_SWAPH
(
sbuf
.
°_dev
);

1353 
ss_sbuf
.
ss_∑d
 = 0;

1354 
ss_sbuf
.
ss_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1355 
ss_sbuf
.
ss_°_mode
 = 
	`MD_SWAPH
(
sbuf
.
°_mode
);

1356 
ss_sbuf
.
ss_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1357 
ss_sbuf
.
ss_°_uid
 = 
	`MD_SWAPH
(
sbuf
.
°_uid
);

1358 
ss_sbuf
.
ss_°_gid
 = 
	`MD_SWAPH
(
sbuf
.
°_gid
);

1359 
ss_sbuf
.
ss_°_rdev
 = 
	`MD_SWAPH
(
sbuf
.
°_rdev
);

1360 
ss_sbuf
.
ss_∑d1
 = 0;

1361 
ss_sbuf
.
ss_°_size
 = 
	`MD_SWAPW
(
sbuf
.
°_size
);

1362 
ss_sbuf
.
ss_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1363 
ss_sbuf
.
ss_°_•¨e1
 = 0;

1364 
ss_sbuf
.
ss_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1365 
ss_sbuf
.
ss_°_•¨e2
 = 0;

1366 
ss_sbuf
.
ss_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1367 
ss_sbuf
.
ss_°_•¨e3
 = 0;

1368 #i‚de‡
_MSC_VER


1369 
ss_sbuf
.
ss_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1370 
ss_sbuf
.
ss_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1372 
ss_sbuf
.
ss_°_gínum
 = 0;

1373 
ss_sbuf
.
ss_°_•¨e4
 = 0;

1376 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1377 &
ss_sbuf
, (
ss_°©buf
));

1381 
SS_SYS_gë∑gesize
:

1383 
ªgs
->
ªgs_R
[2] = 
MD_PAGE_SIZE
;

1386 i‡(
ªgs
->
ªgs_R
[2] != -1)

1387 
ªgs
->
ªgs_R
[7] = 0;

1391 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1392 
ªgs
->
ªgs_R
[7] = 1;

1396 
SS_SYS_£tôimî
:

1398 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1399 
	`w¨n
("syscall: setitimer ignored");

1402 
SS_SYS_gëdèbÀsize
:

1403 #i‡
	`deföed
(
_AIX
)

1405 
ªgs
->
ªgs_R
[2] = 
	`gëdèbÀsize
();

1408 i‡(
ªgs
->
ªgs_R
[2] != -1)

1409 
ªgs
->
ªgs_R
[7] = 0;

1413 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1414 
ªgs
->
ªgs_R
[7] = 1;

1416 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
u…rix
Ë|| deföed(
_MSC_VER
)

1419 
	`w¨n
("syscall: called getdtablesize()\n");

1420 
ªgs
->
ªgs_R
[2] = 16;

1421 
ªgs
->
ªgs_R
[7] = 0;

1425 
æimô
 
æ
;

1428 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) != -1)

1430 
ªgs
->
ªgs_R
[2] = 
æ
.
æim_cur
;

1431 
ªgs
->
ªgs_R
[7] = 0;

1436 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1437 
ªgs
->
ªgs_R
[7] = 1;

1443 
SS_SYS_dup2
:

1445 
ªgs
->
ªgs_R
[2] =

1446 
	`dup2
–
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5]);

1449 i‡(
ªgs
->
ªgs_R
[2] != -1)

1450 
ªgs
->
ªgs_R
[7] = 0;

1454 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1455 
ªgs
->
ªgs_R
[7] = 1;

1459 
SS_SYS_f˙é
:

1460 #ifde‡
_MSC_VER


1461 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

1462 
ªgs
->
ªgs_R
[7] = 0;

1465 
ªgs
->
ªgs_R
[2] =

1466 
	`f˙é
–
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5],

1467  
ªgs
->
ªgs_R
[6]);

1470 i‡(
ªgs
->
ªgs_R
[2] != -1)

1471 
ªgs
->
ªgs_R
[7] = 0;

1475 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1476 
ªgs
->
ªgs_R
[7] = 1;

1481 
SS_SYS_£À˘
:

1482 #ifde‡
_MSC_VER


1483 
	`w¨n
("syscall select()Çot yet implemented for MSC...");

1484 
ªgs
->
ªgs_R
[7] = 0;

1487 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

1488 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

1489 
timevÆ
 
timeout
, *
timeouç
;

1490 
w‹d_t
 
∑øm5
;

1495 
	`mem_bc›y
(
mem_‚
, 
mem
,

1496 
Ród
, 
ªgs
->
ªgs_R
[29]+16, &
∑øm5
, (
w‹d_t
));

1499 i‡–
ªgs
->
ªgs_R
[5] != 0)

1501 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1502 &
ªadfd
, (
fd_£t
));

1503 
ªadfdp
 = &
ªadfd
;

1506 
ªadfdp
 = 
NULL
;

1509 i‡–
ªgs
->
ªgs_R
[6] != 0)

1511 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[6],

1512 &
wrôefd
, (
fd_£t
));

1513 
wrôefdp
 = &
wrôefd
;

1516 
wrôefdp
 = 
NULL
;

1519 i‡–
ªgs
->
ªgs_R
[7] != 0)

1521 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[7],

1522 &
ex˚±fd
, (
fd_£t
));

1523 
ex˚±fdp
 = &
ex˚±fd
;

1526 
ex˚±fdp
 = 
NULL
;

1529 i‡–
∑øm5
 != 0)

1531 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
∑øm5
,

1532 &
timeout
, (
timevÆ
));

1533 
timeouç
 = &
timeout
;

1536 
timeouç
 = 
NULL
;

1538 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

1540  
ªgs
->
ªgs_R
[2] =

1541 
	`£À˘
–
ªgs
->
ªgs_R
[4],

1542 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

1545  
ªgs
->
ªgs_R
[2] =

1546 
	`£À˘
–
ªgs
->
ªgs_R
[4],

1547 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

1551 i‡(
ªgs
->
ªgs_R
[2] != -1)

1552 
ªgs
->
ªgs_R
[7] = 0;

1556 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1557 
ªgs
->
ªgs_R
[7] = 1;

1561 i‡–
ªgs
->
ªgs_R
[5] != 0)

1562 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1563 &
ªadfd
, (
fd_£t
));

1566 i‡–
ªgs
->
ªgs_R
[6] != 0)

1567 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[6],

1568 &
wrôefd
, (
fd_£t
));

1571 i‡–
ªgs
->
ªgs_R
[7] != 0)

1572 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[7],

1573 &
ex˚±fd
, (
fd_£t
));

1576 i‡–
∑øm5
 != 0)

1577 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
∑øm5
,

1578 &
timeout
, (
timevÆ
));

1583 
SS_SYS_sigvec
:

1585 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1586 
	`w¨n
("syscall: sigvec ignored");

1589 
SS_SYS_sigblock
:

1591 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1592 
	`w¨n
("syscall: sigblock ignored");

1595 
SS_SYS_sig£tmask
:

1597 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1598 
	`w¨n
("syscall: sigsetmask ignored");

1602 
SS_SYS_sig°ack
:

1607 i‡(
ªgs
->
ªgs_R
[5] != 0)

1609 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[29]+28, (*)&
ãmp
, 4);

1610 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[5], (*)&
ãmp
, 4);

1612 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1616 
SS_SYS_gëtimeofday
:

1617 #ifde‡
_MSC_VER


1618 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

1619 
ªgs
->
ªgs_R
[7] = 0;

1622 
ss_timevÆ
 
ss_tv
;

1623 
timevÆ
 
tv
, *
tvp
;

1624 
ss_timez⁄e
 
ss_tz
;

1625 
timez⁄e
 
tz
, *
tzp
;

1627 i‡–
ªgs
->
ªgs_R
[4] != 0)

1630 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4],

1631 &
ss_tv
, (
ss_timevÆ
));

1634 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
ss_tv
.
ss_tv_£c
);

1635 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
ss_tv
.
ss_tv_u£c
);

1636 
tvp
 = &
tv
;

1639 
tvp
 = 
NULL
;

1641 i‡–
ªgs
->
ªgs_R
[5] != 0)

1644 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1645 &
ss_tz
, (
ss_timez⁄e
));

1648 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
ss_tz
.
ss_tz_möuãswe°
);

1649 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
ss_tz
.
ss_tz_d°time
);

1650 
tzp
 = &
tz
;

1653 
tzp
 = 
NULL
;

1656  
ªgs
->
ªgs_R
[2] = 
	`gëtimeofday
(
tvp
, 
tzp
);

1659 i‡(
ªgs
->
ªgs_R
[2] != -1)

1660 
ªgs
->
ªgs_R
[7] = 0;

1664 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1665 
ªgs
->
ªgs_R
[7] = 1;

1668 i‡–
ªgs
->
ªgs_R
[4] != 0)

1671 
ss_tv
.
ss_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

1672 
ss_tv
.
ss_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

1675 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[4],

1676 &
ss_tv
, (
ss_timevÆ
));

1679 i‡–
ªgs
->
ªgs_R
[5] != 0)

1682 
ss_tz
.
ss_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

1683 
ss_tz
.
ss_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

1686 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1687 &
ss_tz
, (
ss_timez⁄e
));

1693 
SS_SYS_gërußge
:

1694 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

1696 
tms
 
tms_buf
;

1697 
ss_rußge
 
rußge
;

1700 i‡(
	`times
(&
tms_buf
) != -1)

1703 
ªgs
->
ªgs_R
[2] = 0;

1704 
ªgs
->
ªgs_R
[7] = 0;

1709 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1710 
ªgs
->
ªgs_R
[7] = 1;

1714 #i‡
	`deföed
(
__svr4__
)

1715 
	`mem£t
(&
rußge
, '\0', (
ss_rußge
));

1717 
	`bzîo
(&
rußge
, (
ss_rußge
));

1721 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
tms_buf
.
tms_utime
/
CLK_TCK
;

1722 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
	`MD_SWAPW
(rusage.ss_ru_utime.ss_tv_sec);

1723 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 = 0;

1724 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
tms_buf
.
tms_°ime
/
CLK_TCK
;

1725 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
	`MD_SWAPW
(rusage.ss_ru_stime.ss_tv_sec);

1726 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 = 0;

1729 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1730 &
rußge
, (
ss_rußge
));

1732 #ñi‡
	`deföed
(
__unix__
Ë|| deföed(
unix
)

1734 
rußge
 
loˇl_rußge
;

1735 
ss_rußge
 
rußge
;

1738  
ªgs
->
ªgs_R
[2] =

1739 
	`gërußge
–
ªgs
->
ªgs_R
[4], &
loˇl_rußge
);

1742 i‡(
ªgs
->
ªgs_R
[2] != -1)

1743 
ªgs
->
ªgs_R
[7] = 0;

1747 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1748 
ªgs
->
ªgs_R
[7] = 1;

1752 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
loˇl_rußge
.
ru_utime
.
tv_£c
;

1753 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 = 
loˇl_rußge
.
ru_utime
.
tv_u£c
;

1754 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

1755 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 =

1756 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

1757 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
loˇl_rußge
.
ru_°ime
.
tv_£c
;

1758 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 = 
loˇl_rußge
.
ru_°ime
.
tv_u£c
;

1759 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 =

1760 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

1761 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 =

1762 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

1763 
rußge
.
ss_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

1764 
rußge
.
ss_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

1765 
rußge
.
ss_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

1766 
rußge
.
ss_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

1767 
rußge
.
ss_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

1768 
rußge
.
ss_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

1769 
rußge
.
ss_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

1770 
rußge
.
ss_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

1771 
rußge
.
ss_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

1772 
rußge
.
ss_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

1773 
rußge
.
ss_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

1774 
rußge
.
ss_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

1775 
rußge
.
ss_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

1776 
rußge
.
ss_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

1779 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1780 &
rußge
, (
ss_rußge
));

1782 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

1783 
	`w¨n
("syscall: called getrusage()\n");

1784 
ªgs
->
ªgs_R
[7] = 0;

1786 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

1790 
SS_SYS_wrôev
:

1791 #ifde‡
_MSC_VER


1792 
	`w¨n
("syscall writev()Çot yet implemented for MSC...");

1793 
ªgs
->
ªgs_R
[7] = 0;

1796 
i
;

1797 *
buf
;

1798 
iovec
 *
iov
;

1801 
iov
 =

1802 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[6]

1803 * (
iovec
));

1804 i‡(!
iov
)

1805 
	`Áèl
("out of virtual memory in SYS_writev");

1808 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1809 
iov
, 
ªgs
->
ªgs_R
[6] * (
iovec
));

1812 
i
=0; i < 
ªgs
->
ªgs_R
[6]; i++)

1814 
iov
[
i
].
iov_ba£
 = (*)
	`MD_SWAPW
(()iov[i].iov_base);

1815 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(iov[i].iov_len);

1816 i‡(
iov
[
i
].
iov_ba£
 !
NULL
)

1818 
buf
 = (*)
	`ˇŒoc
(
iov
[
i
].
iov_Àn
, ());

1819 i‡(!
buf
)

1820 
	`Áèl
("out of virtual memory in SYS_writev");

1821 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, (
md_addr_t
)
iov
[
i
].
iov_ba£
,

1822 
buf
, 
iov
[
i
].
iov_Àn
);

1823 
iov
[
i
].
iov_ba£
 = 
buf
;

1828  
ªgs
->
ªgs_R
[2] =

1829 
	`wrôev
–
ªgs
->
ªgs_R
[4], 
iov
,Ñegs->regs_R[6]);

1832 i‡(
ªgs
->
ªgs_R
[2] != -1)

1833 
ªgs
->
ªgs_R
[7] = 0;

1837 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1838 
ªgs
->
ªgs_R
[7] = 1;

1842 
i
=0; i < 
ªgs
->
ªgs_R
[6]; i++)

1844 i‡(
iov
[
i
].
iov_ba£
)

1846 
	`‰ì
(
iov
[
i
].
iov_ba£
);

1847 
iov
[
i
].
iov_ba£
 = 
NULL
;

1850 
	`‰ì
(
iov
);

1855 
SS_SYS_utimes
:

1857 
buf
[
MAXBUFSIZE
];

1860 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1862 i‡–
ªgs
->
ªgs_R
[5] == 0)

1864 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
löux
)

1866  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, 
NULL
);

1867 #ñi‡
	`deföed
(
_MSC_VER
)

1869  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, 
NULL
);

1870 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

1871  
ªgs
->
ªgs_R
[2] = 
	`utimes
(
buf
, 
NULL
);

1872 #ñi‡
	`deföed
(
__CYGWIN32__
)

1873 
	`w¨n
("syscall: called utimes()\n");

1875 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

1880 
ss_timevÆ
 
ss_tvÆ
[2];

1881 #i‚de‡
_MSC_VER


1882 
timevÆ
 
tvÆ
[2];

1886 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1887 
ss_tvÆ
, 2*(
ss_timevÆ
));

1889 #i‚de‡
_MSC_VER


1891 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[0].
ss_tv_£c
);

1892 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[0].
ss_tv_u£c
);

1893 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[1].
ss_tv_£c
);

1894 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[1].
ss_tv_u£c
);

1897 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

1900 
utimbuf
 
ubuf
;

1902 
ubuf
.
a˘ime
 = 
tvÆ
[0].
tv_£c
;

1903 
ubuf
.
modtime
 = 
tvÆ
[1].
tv_£c
;

1905  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, &
ubuf
);

1907 #ñi‡
	`deföed
(
_MSC_VER
)

1910 
_utimbuf
 
ubuf
;

1912 
ubuf
.
a˘ime
 = 
ss_tvÆ
[0].
ss_tv_£c
;

1913 
ubuf
.
modtime
 = 
ss_tvÆ
[1].
ss_tv_£c
;

1915  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, &
ubuf
);

1917 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

1918  
ªgs
->
ªgs_R
[2] = 
	`utimes
(
buf
, 
tvÆ
);

1919 #ñi‡
	`deföed
(
__CYGWIN32__
)

1920 
	`w¨n
("syscall: called utimes()\n");

1922 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

1927 i‡(
ªgs
->
ªgs_R
[2] != -1)

1928 
ªgs
->
ªgs_R
[7] = 0;

1932 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1933 
ªgs
->
ªgs_R
[7] = 1;

1938 
SS_SYS_gëæimô
:

1939 
SS_SYS_£ålimô
:

1940 #ifde‡
_MSC_VER


1941 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

1942 
ªgs
->
ªgs_R
[7] = 0;

1943 #ñi‡
	`deföed
(
__CYGWIN32__
)

1944 
	`w¨n
("syscall: called get/setrlimit()\n");

1945 
ªgs
->
ªgs_R
[7] = 0;

1949 
ss_æimô
 
ss_æ
;

1950 
æimô
 
æ
;

1953 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1954 &
ss_æ
, (
ss_æimô
));

1957 
æ
.
æim_cur
 = 
	`MD_SWAPW
(
ss_æ
.
ss_æim_cur
);

1958 
æ
.
æim_max
 = 
	`MD_SWAPW
(
ss_æ
.
ss_æim_max
);

1961 i‡(
syscode
 =
SS_SYS_gëæimô
)

1962  
ªgs
->
ªgs_R
[2] = 
	`gëæimô
‘egs->ªgs_R[4], &
æ
);

1964  
ªgs
->
ªgs_R
[2] = 
	`£ålimô
‘egs->ªgs_R[4], &
æ
);

1967 i‡(
ªgs
->
ªgs_R
[2] != -1)

1968 
ªgs
->
ªgs_R
[7] = 0;

1972 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1973 
ªgs
->
ªgs_R
[7] = 1;

1977 
ss_æ
.
ss_æim_cur
 = 
	`MD_SWAPW
(
æ
.
æim_cur
);

1978 
ss_æ
.
ss_æim_max
 = 
	`MD_SWAPW
(
æ
.
æim_max
);

1981 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1982 &
ss_æ
, (
ss_æimô
));

1988 
SS_SYS_gëdúíåõs
:

1992 
i
;

1993 *
buf
;

1994 
ba£
;

1996 
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6] + 1, ());

1997 i‡(!
buf
)

1998 
	`Áèl
("out of memory in SYS_getdirentries");

2001 
i
=0; i< 
ªgs
->
ªgs_R
[6]; i++)

2002 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[5]+
i
,

2003 (*)&
buf
[
i
], 1);

2004 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[7], (*)&
ba£
, 4);

2006  
ªgs
->
ªgs_R
[2] =

2007 
	`gëdúíåõs
–
ªgs
->
ªgs_R
[4], 
buf
,

2008  
ªgs
->
ªgs_R
[6], &
ba£
);

2010 i‡(
ªgs
->
ªgs_R
[2] != -1)

2011 
ªgs
->
ªgs_R
[7] = 0;

2014 
ªgs
->
ªgs_R
[2] = 
î∫o
;

2015 
ªgs
->
ªgs_R
[7] = 1;

2019 
i
=0; i< 
ªgs
->
ªgs_R
[6]; i++)

2020 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[5]+
i
,

2021 (*)&
buf
[
i
], 1);

2022 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[7], (*)&
ba£
, 4);

2024 
	`‰ì
(
buf
);

2030 
	`∑nic
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

2035 
	}
}

	@tests-alpha/src/anagram.c

131 
	~<°dio.h
>

132 
	~<°dlib.h
>

133 
	~<˘y≥.h
>

134 
	~<sys/ty≥s.h
>

135 
	~<sys/°©.h
>

136 
	~<£tjmp.h
>

149 
	tQuad
;

150 
	#MASK_BITS
 32

	)

152 
	#MAX_QUADS
 2

	)

154 
	#MAXWORDS
 26000

	)

155 
	#MAXCAND
 5000

	)

156 
	#MAXSOL
 51

	)

158 
	#ALPHABET
 26

	)

159 
	#ch2i
(
ch
Ë((ch)-'a'Ë

	)

160 
	#i2ch
(
ch
Ë((ch)+'a'Ë

	)

175 
	#huge


	)

176 
	#Ár


	)

177 
	#SåögF‹m©
 "%15s%c"

	)

178 
	#bigmÆloc
 
mÆloc


	)

179 
	#smÆlmÆloc
 
mÆloc


	)

180 
	#smÆlmÆlocÁû
 (*)0

	)

181 
	#HÆtPro˚ssög
(Ë0

	)

182 
	#Cde˛


	)

187 #ifde‡
DEBUG


188 
	#Debug
(
x
Ë
	)
x

190 
	#Debug
(
x
)

	)

193 #ifde‡
STAT


194 
	#Sèt
(
x
Ë
	)
x

196 
	#Sèt
(
x
)

	)

201 
Quad
 
	maqMask
[
MAX_QUADS
];

202 * 
	mpchW‹d
;

203 
	mcchLígth
;

204 } 
	tW‹d
;

205 
W‹d
 * 
	tPW‹d
;

206 
W‹d
 * * 
	tPPW‹d
;

208 
PW‹d
 
	g≠wC™d
[
MAXCAND
];

209 
	g˝wC™d
;

217 
	muFªquícy
;

218 
	muShi·
;

219 
	muBôs
;

220 
	miq
;

221 } 
	tLëãr
;

222 
Lëãr
 * 
	tPLëãr
;

224 
Lëãr
 
	gÆPhø£
[
ALPHABET
];

225 
	#lPhø£
(
ch
Ë
ÆPhø£
[
	`ch2i
(ch)]

	)

227 
	gcchPhø£Lígth
;

229 
Quad
 
	gaqMaöMask
[
MAX_QUADS
];

230 
Quad
 
	gaqMaöSign
[
MAX_QUADS
];

232 
	gcchMöLígth
 = 3;

238 
	gauGlobÆFªquícy
[
ALPHABET
];

239 
	gachByFªquícy
[
ALPHABET
];

241 * 
	gpchDi˘i⁄¨y
;

243 
	#Zîo
(
t
Ë
	`mem£t
—, 0, —)Ë

	)

246 
	$F©Æ
(*
pchMsg
, 
u
) {

247 
	`Ârötf
(
°dout
, 
pchMsg
, 
u
);

248 
	`exô
(1);

249 
	}
}

263 
	$RódDi˘
(*
pchFûe
) {

264 
FILE
 *
Â
;

265 * 
pch
;

266 * 
pchBa£
;

267 
ulLí
;

268 
cW‹ds
 = 0;

269 
cLëãrs
;

270 
ch
;

271 
°©
 
°©Buf
;

273 i‡(
	`°©
(
pchFûe
, &
°©Buf
)Ë
	`F©Æ
("Cannot stat dictionary\n", 0);

275 
ulLí
 = 
°©Buf
.
°_size
 + 2 * ()
MAXWORDS
;

276 
pchBa£
 = 
pchDi˘i⁄¨y
 = (*)
	`mÆloc
(
ulLí
);

278 if(
pchDi˘i⁄¨y
 =
NULL
)

279 
	`F©Æ
("UnableÅoállocate memory for dictionary\n", 0);

281 i‡((
Â
 = 
	`f›í
(
pchFûe
, "r")Ë=
NULL
)

282 
	`F©Æ
("Cannot open dictionary\n", 0);

284 !
	`„of
(
Â
)) {

285 
pch
 = 
pchBa£
+2;

286 
cLëãrs
 = 0;

287 (
ch
 = 
	`fgëc
(
Â
)Ë!'\n' && ch !
EOF
) {

288 i‡(
	`ißÕha
(
ch
)Ë
cLëãrs
++;

289 *
pch
++ = 
ch
;

291 *
pch
++ = '\0';

292 *
pchBa£
 = 
pch
 -ÖchBase;

293 
pchBa£
[1] = 
cLëãrs
;

294 
pchBa£
 = 
pch
;

295 
cW‹ds
++;

297 
	`f˛o£
(
Â
);

299 *
pchBa£
++ = 0;

301 
	`Ârötf
(
°dout
, "maö di˘i⁄¨y ha†%uÉ¡rõs\n", 
cW‹ds
);

302 i‡(
cW‹ds
 >
MAXWORDS
)

303 
	`F©Æ
("DictionaryÅooÜarge; increase MAXWORDS\n", 0);

304 
	`Ârötf
(
°dout
, "%lu byã†wa°ed\n", 
ulLí
 - (
pchBa£
 - 
pchDi˘i⁄¨y
));

305 
	}
}

307 
	$BuûdMask
(* 
pchPhø£
) {

308 
i
;

309 
ch
;

310 
iq
;

311 
cbtU£d
;

312 
cbtNìd
;

313 
Quad
 
qNìd
;

315 
	`bzîo
(
ÆPhø£
, (
Lëãr
)*
ALPHABET
);

316 
	`bzîo
(
aqMaöMask
, (
Quad
)*
MAX_QUADS
);

317 
	`bzîo
(
aqMaöSign
, (
Quad
)*
MAX_QUADS
);

325 
cchPhø£Lígth
 = 0;

326 (
ch
 = *
pchPhø£
++) != '\0') {

327 i‡(
	`ißÕha
(
ch
)) {

328 
ch
 = 
	`tﬁowî
(ch);

329 
	`lPhø£
(
ch
).
uFªquícy
++;

330 
cchPhø£Lígth
++;

335 
iq
 = 0;

336 
cbtU£d
 = 0;

338 
i
 = 0; i < 
ALPHABET
; i++) {

339 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) {

340 
auGlobÆFªquícy
[
i
] = ~0;

342 
auGlobÆFªquícy
[
i
] = 0;

343 
cbtNìd
 = 1, 
qNìd
 = 1;

344 
ÆPhø£
[
i
].
uFªquícy
 >
qNìd
;

345 
cbtNìd
++, 
qNìd
 <<= 1);

346 i‡(
cbtU£d
 + 
cbtNìd
 > 
MASK_BITS
) {

347 i‡(++
iq
 >
MAX_QUADS
)

348 
	`F©Æ
("MAX_QUADSÇotÜargeÉnough\n", 0);

349 
cbtU£d
 = 0;

351 
ÆPhø£
[
i
].
uBôs
 = 
qNìd
-1;

352 i‡(
cbtU£d
)

353 
qNìd
 <<
cbtU£d
;

354 
aqMaöSign
[
iq
] |
qNìd
;

355 
aqMaöMask
[
iq
] |(
Quad
)
ÆPhø£
[
i
].
uFªquícy
 << 
cbtU£d
;

356 
ÆPhø£
[
i
].
uShi·
 = 
cbtU£d
;

357 
ÆPhø£
[
i
].
iq
 = iq;

358 
cbtU£d
 +
cbtNìd
;

361 
	}
}

363 
PW‹d


364 
	$NewW‹d
() {

365 
PW‹d
 
pw
;

367 
pw
 = (
W‹d
 *)
	`mÆloc
((Word));

368 i‡(
pw
 =
NULL
)

369 
	`F©Æ
("Ouào‡mem‹yá·î %d c™did©es\n", 
˝wC™d
);

370  
pw
;

371 
	}
}

378 
	$w¥öt
(* 
pch
) {

379 
	`¥ötf
("%†", 
pch
);

380 
	}
}

382 
PW‹d
 
NextW‹d
();

385 
PW‹d
 
	$NextW‹d
() {

386 
PW‹d
 
pw
;

387 i‡(
˝wC™d
 >
MAXCAND
)

388 
	`F©Æ
("Too many candidates\n", 0);

389 
pw
 = 
≠wC™d
[
˝wC™d
++];

390 i‡(
pw
 !
NULL
)

391  
pw
;

392 
≠wC™d
[
˝wC™d
-1] = 
	`NewW‹d
();

393  
≠wC™d
[
˝wC™d
-1];

394 
	}
}

399 
	$BuûdW‹d
(* 
pchW‹d
) {

400 
cchFªquícy
[
ALPHABET
];

401 
i
;

402 * 
pch
 = 
pchW‹d
;

403 
PW‹d
 
pw
;

404 
cchLígth
 = 0;

406 
	`bzîo
(
cchFªquícy
, ()*
ALPHABET
);

410 (
i
 = *
pch
++) != '\0') {

411 i‡(!
	`ißÕha
(
i
)) ;

412 
i
 = 
	`ch2i
(
	`tﬁowî
(i));

413 i‡(++
cchFªquícy
[
i
] > 
ÆPhø£
[i].
uFªquícy
)

415 ++
cchLígth
;

418 
	`Debug
(
	`w¥öt
(
pchW‹d
);)

421 
i
 = 0; i < 
ALPHABET
; i++)

422 
auGlobÆFªquícy
[
i
] +
cchFªquícy
[i];

427 
pw
 = 
	`NextW‹d
();

428 
	`bzîo
(
pw
->
aqMask
, (
Quad
)*
MAX_QUADS
);

430 
pw
->
pchW‹d
 =ÖchWord;

431 
pw
->
cchLígth
 = cchLength;

432 
i
 = 0; i < 
ALPHABET
; i++) {

433 
pw
->
aqMask
[
ÆPhø£
[
i
].
iq
] |=

434 (
Quad
)
cchFªquícy
[
i
] << 
ÆPhø£
[i].
uShi·
;

436 
	}
}

440 
	$AddW‹ds
() {

441 * 
pch
 = 
pchDi˘i⁄¨y
;

443 
˝wC™d
 = 0;

445 *
pch
) {

446 i‡((
pch
[1] >
cchMöLígth
 &&Öch[1]+cchMöLígth <
cchPhø£Lígth
)

447 || 
pch
[1] =
cchPhø£Lígth
)

448 
	`BuûdW‹d
(
pch
+2);

449 
pch
 += *pch;

452 
	`Ârötf
(
°dout
, "%d c™did©es\n", 
˝wC™d
);

453 
	}
}

455 
	$DumpC™did©es
() {

456 
u
;

458 
u
 = 0; u < 
˝wC™d
; u++)

459 
	`¥ötf
(
SåögF‹m©
, 
≠wC™d
[
u
]->
pchW‹d
, (u % 4 == 3) ? '\n' : ' ');

460 
	`¥ötf
("\n");

461 
	}
}

463 
PW‹d
 
	g≠wSﬁ
[
MAXSOL
];

464 
	g˝wLa°
;

466 
Debug
(

467 
	$DumpW‹d
(
Quad
 * 
pq
) {

468 
i
;

469 
Quad
 
q
;

470 
i
 = 0; i < 
ALPHABET
; i++) {

471 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) ;

472 
q
 = 
pq
[
ÆPhø£
[
i
].
iq
];

473 i‡(
ÆPhø£
[
i
].
uShi·
Ë
q
 >>=álPhrase[i].uShift;

474 
q
 &
ÆPhø£
[
i
].
uBôs
;

475 
q
--Ë
	`putch¨
('a'+
i
);

477 
	`putch¨
(' ');

478 
	}
}

481 
	$DumpW‹ds
() {

482 
i
;

483 
i
 = 0; i < 
˝wLa°
; i++Ë
	`w¥öt
(
≠wSﬁ
[i]->
pchW‹d
);

484 
	`¥ötf
("\n");

485 
	}
}

487 
Sèt
(
ulHighCou¡
; 
ulLowCou¡
;)

489 
jmp_buf
 
	gjbA«gøm
;

491 
	#O√Sãp
(
i
) \

492 i‡((
aqNext
[
i
] = 
pqMask
[i] - 
pw
->
aqMask
[i]Ë& 
aqMaöSign
[i]) { \

493 
µwSèπ
++; \

495 }

	)

499 
	$FödA«gøm
(
Quad
 * 
pqMask
, 
PPW‹d
 
µwSèπ
, 
iLëãr
)

501 
Quad
 
aqNext
[
MAX_QUADS
];

502 
PW‹d
 
pw
;

503 
Quad
 
qMask
;

504 
iq
;

505 
PPW‹d
 
µwEnd
 = &
≠wC™d
[0];

506 
µwEnd
 +
˝wC™d
;

510 i‡(
	`HÆtPro˚ssög
()Ë
	`l⁄gjmp
(
jbA«gøm
, 1);

512 
	`Debug
(
	`¥ötf
("Tryög :"); 
	`DumpW‹d
(
pqMask
);Örintf(":\n");)

515 
iq
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].iq;

516 
qMask
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uBôs
 <<

517 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uShi·
;

518 i‡(
pqMask
[
iq
] & 
qMask
) ;

519 
iLëãr
++;

522 
	`Debug
(
	`¥ötf
("PivŸög o¿%c\n", 
	`i2ch
(
achByFªquícy
[
iLëãr
]));)

524 
µwSèπ
 < 
µwEnd
) {

525 
pw
 = *
µwSèπ
;

527 
	`Sèt
(i‡(++
ulLowCou¡
 =0Ë++
ulHighCou¡
;)

529 #i‡
MAX_QUADS
 > 0

530 
	`O√Sãp
(0);

533 #i‡
MAX_QUADS
 > 1

534 
	`O√Sãp
(1);

537 #i‡
MAX_QUADS
 > 2

538 
	`O√Sãp
(2);

541 #i‡
MAX_QUADS
 > 3

542 
	`O√Sãp
(3);

545 #i‡
MAX_QUADS
 > 4

550 i‡((
pw
->
aqMask
[
iq
] & 
qMask
) == 0) {

551 *
µwSèπ
 = *--
µwEnd
;

552 *
µwEnd
 = 
pw
;

557 
≠wSﬁ
[
˝wLa°
++] = 
pw
;

558 i‡(
cchPhø£Lígth
 -
pw
->
cchLígth
) {

559 
	`Debug
(
	`DumpW‹ds
();)

563 
µwEnd
 = &
≠wC™d
[0];

564 
µwEnd
 +
˝wC™d
;

565 
	`FödA«gøm
(&
aqNext
[0],

566 
µwSèπ
, 
iLëãr
);

567 } 
	`DumpW‹ds
();

568 
cchPhø£Lígth
 +
pw
->
cchLígth
;

569 --
˝wLa°
;

570 
µwSèπ
++;

575 
	}
}

577 
Cde˛
 
	$Com∑ªFªquícy
(*
pch1
, *
pch2
) {

578  
auGlobÆFªquícy
[*
pch1
] <áuGlobÆFªquícy[*
pch2
]

580 
auGlobÆFªquícy
[*
pch1
] =auGlobÆFªquícy[*
pch2
]

582 
	}
}

584 
	$S‹tC™did©es
() {

585 
i
;

588 
i
 = 0; i < 
ALPHABET
; i++Ë
achByFªquícy
[i] = i;

589 
	`qs‹t
(
achByFªquícy
, 
ALPHABET
, (),

590 ((*)(c⁄° *, c⁄° *))
Com∑ªFªquícy
);

592 
	`Ârötf
(
°dout
, "Order of search will be ");

593 
i
 = 0; i < 
ALPHABET
; i++)

594 
	`Âutc
(
	`i2ch
(
achByFªquícy
[
i
]), 
°dout
);

595 
	`Âutc
('\n', 
°dout
);

596 
	}
}

598 
	gfI¡îa˘ive
;

600 * 
	$GëPhø£
(* 
pch
) {

601 i‡(
fI¡îa˘ive
Ë
	`¥ötf
(">");

602 
	`fÊush
(
°dout
);

603 i‡(
	`gës
(
pch
Ë=
NULL
) {

604 #ifde‡
PLUS_STATS


605 
	`PrötDîefSèts
(
°dout
);

606 
	`PrötHópSize
(
°dout
);

608 
	`exô
(0);

610 (
pch
);

611 
	}
}

613 
	gachPhø£
[255];

615 
Cde˛
 
	$maö
(
˝chArgc
, **
µchArgv
) {

617 i‡(
˝chArgc
 != 2 && cpchArgc != 3)

618 
	`F©Æ
("Usage:ánagram dictionary [length]\n", 0);

620 i‡(
˝chArgc
 == 3)

621 
cchMöLígth
 = 
	`©oi
(
µchArgv
[2]);

623 
fI¡îa˘ive
 = 
	`ißây
(1);

625 
	`RódDi˘
(
µchArgv
[1]);

627 
	`GëPhø£
(&
achPhø£
[0]Ë!
NULL
) {

628 i‡(
	`isdigô
(
achPhø£
[0])) {

629 
cchMöLígth
 = 
	`©oi
(
achPhø£
);

630 
	`¥ötf
("NewÜígth: %d\n", 
cchMöLígth
);

631 } i‡(
achPhø£
[0] == '?') {

632 
	`DumpC™did©es
();

634 
	`BuûdMask
(&
achPhø£
[0]);

635 
	`AddW‹ds
();

636 i‡(
˝wC™d
 =0 || 
cchPhø£Lígth
 == 0) ;

638 
	`Sèt
(
ulHighCou¡
 = 
ulLowCou¡
 = 0;)

639 
˝wLa°
 = 0;

640 
	`S‹tC™did©es
();

641 i‡(
	`£tjmp
(
jbA«gøm
) == 0)

642 
	`FödA«gøm
(&
aqMaöMask
[0], &
≠wC™d
[0], 0);

643 
	`Sèt
(
	`¥ötf
("%lu:%luÖrobes\n", 
ulHighCou¡
, 
ulLowCou¡
);)

647 
	}
}

	@tests-alpha/src/test-dirent.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<dúít.h
>

7 
	$maö
(
¨gc
, **
¨gv
)

9 *
buf
;

10 
dúít
 *
p
;

11 
i
, 
˙t
, 
dú
, 
nbyãs
;

12 
off_t
 
ba£
 = 0;

14 i‡(
¨gc
 != 2)

16 
	`Ârötf
(
°dîr
, "Usage:Åest-dirent <path>\n");

17 
	`exô
(1);

20 
buf
 = 
	`ˇŒoc
(1, 8192);

21 i‡(!
buf
)

23 
	`Ârötf
(
°dîr
, "error: out of virtual memory\n");

24 
	`exô
(1);

27 
	`Ârötf
(
°dout
, "ã°-dúít: o≥nög `%s'...\n", 
¨gv
[1]);

28 
dú
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
);

29 i‡(
dú
 == -1)

31 
	`Ârötf
(
°dîr
, "îr‹: c™nŸ o≥¿dúe˘‹y `%s'\n", 
¨gv
[1]);

32 
	`exô
(1);

35 
nbyãs
 = 
	`gëdúíåõs
(
dú
, 
buf
, 8192, &
ba£
);

36 
	`Ârötf
(
°dout
, "%d = getdirentries(%d, %p, %d, %d)\n",

37 
nbyãs
, 
dú
, 
buf
, 8192, 
ba£
);

40 
i
=0, 
˙t
=0, 
p
=(
dúít
 *)
buf
;

41 
˙t
 < 
nbyãs
 && 
p
->
d_ª˛í
 > 0;

42 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

44 
	`Ârötf
(
°dout
, "rec #%2d: d_ino: %7d, d_reclen: %2d, d_name: %s\n",

45 
i
, 
p
->
d_öo
,Ö->
d_ª˛í
,Ö->
d_«me
);

48 i‡(
˙t
 !
nbyãs
)

49 
	`Ârötf
(
°dîr
, "warn: cnt !=Çbytes, cnt == %d,Çbytes == %d",

50 
˙t
, 
nbyãs
);

51 
	}
}

	@tests-alpha/src/test-fmath.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

5 
	gfoo1
=5.3, 
	gfoo2
=6.4;

6 
	gb¨1
=5.3, 
	gb¨2
=6.4;

7 
	gq
 = 4;

8 
	gx
 = 12;

9 
	gy
 = 29;

10 
	gz
;

11 
	gl
 = 6;

12 *
	gÕ
 = &
l
;

15 
	$maö
()

17 
	`¥ötf
("q=%d (öt)x=%d (öt)y=%d\n", 
q
, ()
x
, ()
y
);

18 
z
 = 
	`pow
(
x
, 2);

19 
	`¥ötf
("z=%d\n", ()
z
);

20 
z
 = 
	`pow
(
y
, 2);

21 
	`¥ötf
("z=%d\n", ()
z
);

22 
z
 = 13.21;

23 
	`¥ötf
("z=%d\n", ()
z
);

24 
z
 = ()13;

25 
	`¥ötf
("z=%d\n", ()
z
);

26 
	`¥ötf
("l=%d\n", ()
l
);

27 
l
 =Ü * 6;

28 
	`¥ötf
("l=%d\n", ()
l
);

29 *
Õ
 = *lp * 6;

30 
	`¥ötf
("*Õ=%d\n", ()*
Õ
);

31 
z
 = 
	`pow
(
x
, 2);

32 
	`¥ötf
("z=%f\n", 
z
);

34 
	`¥ötf
("q=%d x=%‡(öt)x=%d y=%‡(öt)y=%d\n", 
q
, 
x
, ()x, 
y
, ()y);

36 
x
 = 
foo1
+
foo2
;

37 
y
 = 2*
b¨1
+2*
b¨2
;

39 
q
 = q*4;

41 
	`¥ötf
("q = %d x = %‡ y = %f\n", 
q
, 
x
, 
y
);

44 
	}
}

	@tests-alpha/src/test-llong.c

1 
	~<°dio.h
>

3 
	gx
 = 0x100000000LL;

4 
	gy
 = 0x1ffffffffLL;

5 
	gz
 = 0x010000000LL;

6 
	gw
 = 0x01fffffffLL;

9 
	$maö
()

11 
	`Ârötf
(
°dout
, "x+1 = 0x%016Lx\n", 
x
+1);

12 
	`Ârötf
(
°dout
, "x-1 = 0x%016Lx\n", 
x
-1);

13 
	`Ârötf
(
°dout
, "y+1 = 0x%016Lx\n", 
y
+1);

14 
	`Ârötf
(
°dout
, "x+y = 0x%016Lx\n", 
x
+
y
);

15 
	`Ârötf
(
°dout
, "z*w = 0x%016Lx\n", 
z
*
w
);

16 
	`exô
(0);

17 
	}
}

	@tests-alpha/src/test-lswlr.c

1 
	~<°dio.h
>

4 
	$maö
()

6 
°r
[] = "Hello world...";

8 
	`Ârötf
(
°dout
, "°∏%s\n", 
°r
);

9 
	`exô
(0);

10 
	}
}

	@tests-alpha/src/test-math.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

6 
	$maö
()

8 
°r
[] = "123.456";

9 
x
,
h
,
li
,
Ã
,
a
,
Ãr
;

11 
	`¥ötf
("pow(12.0, 2.0Ë=%f\n", 
	`pow
(12.0, 2.0));

12 
	`¥ötf
("pow(10.0, 3.0Ë=%f\n", 
	`pow
(10.0, 3.0));

13 
	`¥ötf
("pow(10.0, -3.0Ë=%f\n", 
	`pow
(10.0, -3.0));

15 
	`¥ötf
("°r: %s\n", 
°r
);

16 
x
 = ()
	`©oi
 (
°r
);

17 
	`¥ötf
("x: %f\n", 
x
);

19 
	`¥ötf
("°r: %s\n", 
°r
);

20 
x
 = 
	`©of
 (
°r
);

21 
	`¥ötf
("x: %f\n", 
x
);

23 
	`¥ötf
("°r: %s\n", 
°r
);

24 
x
 = 
	`©of
 (
°r
);

25 
	`¥ötf
("x: %f\n", 
x
);

27 
	`¥ötf
 ("%g %‡%d %g\n", 
x
, x, ()x, 
	`pow
 (10.0, 3.0));

29 
x
 = 
	`söh
(2.0);

31 
	`¥ötf
("söh(2.0Ë%g\n", 
x
);

33 
x
 = 
	`söh
(3.0);

35 
	`¥ötf
("söh(3.0Ë%g\n", 
x
);

37 
h
 = 
	`hypŸ
(2.0,3.0);

39 
	`¥ötf
("h=%g\n", 
h
);

41 
a
 = 
	`©™2
(3.0, 2.0);

43 
	`¥ötf
("©™2(3,2Ë%g\n", 
a
);

45 
Ã
 = 
	`pow
(
h
,4.0);

47 
	`¥ötf
("pow(%g,4.0Ë%g\n", 
h
, 
Ã
);

49 
Ãr
 = 
Ã
;

51 
li
 = 4.0 * 
a
;

53 
Ã
 =Ü∏/ 
	`exp
(
a
*5.0);

55 
	`¥ötf
("%g /Éxp(%g * 5Ë%g\n", 
Ãr
, 
a
, 
Ã
);

57 
Ãr
 = 
li
;

59 
li
 +5.0 * 
	`log
(
h
);

61 
	`¥ötf
("%g + 5*log(%gË%g\n", 
Ãr
, 
h
, 
li
);

63 
	`¥ötf
("cos(%gË%g, sö(%gË%g\n", 
li
, 
	`cos
÷i),Üi, 
	`sö
(li));

66 
x
 = 
	`dªm
(10.3435,6.2831852);

68 
	`¥ötf
("dªm(10.3435,6.2831852Ë%g\n", 
x
);

70 
x
 = 
	`dªm
(-10.3435,6.2831852);

72 
	`¥ötf
("dªm(-10.3435,6.2831852Ë%g\n", 
x
);

74 
x
 = 
	`dªm
(-10.3435,-6.2831852);

76 
	`¥ötf
("dªm(-10.3435,-6.2831852Ë%g\n", 
x
);

78 
x
 = 
	`dªm
(10.3435,-6.2831852);

80 
	`¥ötf
("dªm(10.3435,-6.2831852Ë%g\n", 
x
);

83 
	`¥ötf
("x%8.6gx\n", .5);

84 
	`¥ötf
("x%-8.6gx\n", .5);

85 
	`¥ötf
("x%6.6gx\n", .5);

88 
x
 = 
	`©of
 ("-1e-17-");

89 
	`¥ötf
 ("%g %c= %g %s!\n",

90 
x
,

91 
x
 == -1e-17 ? '=' : '!',

93 
	`Ábs
(
x
 - -1e-17) < 0.000000001 ? "Worked" : "Failed");

97 
	}
}

	@tests-alpha/src/test-printf.c

19 #ifdef 
BSD


20 
	~</u§/ö˛ude/°dio.h
>

21 
	#EXIT_SUCCESS
 0

	)

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

31 
	ma
;

32 
	mb
;

33 
	mc
;

34 
	md
;

35 } 
	gxxyyz
[100];

37 
	gzzz
;

40 
	$FooB¨
(
a
)

42  
xxyyz
[
a
].
b
;

43 
	}
}

45 
	guxxe
[100];

48 
	$FooFoo
(
a
)

50 
zzz
++;

51  
uxxe
[
a
];

52 
	}
}

54 *
	gsccsid
 = "this isáÅest...";

57 
	$fmtchk
(*
fmt
)

59 *
sccsid
 = "this isáÅest...";

60 (Ë
	`Âuts
(
fmt
, 
°dout
);

61 (Ë
	`¥ötf
(":\t`");

62 (Ë
	`¥ötf
(
fmt
, 0x12);

63 (Ë
	`¥ötf
("'\n");

64 
	}
}

67 
	$fmt°1chk
(*
fmt
)

69 (Ë
	`Âuts
(
fmt
, 
°dout
);

70 (Ë
	`¥ötf
(":\t`");

71 (Ë
	`¥ötf
(
fmt
, 4, 0x12);

72 (Ë
	`¥ötf
("'\n");

73 
	}
}

76 
	$fmt°2chk
(*
fmt
)

78 (Ë
	`Âuts
(
fmt
, 
°dout
);

79 (Ë
	`¥ötf
(":\t`");

80 (Ë
	`¥ötf
(
fmt
, 4, 4, 0x12);

81 (Ë
	`¥ötf
("'\n");

82 
	}
}

98 
	#DEC
 -123

	)

99 
	#INT
 255

	)

100 
	#UNS
 (~0)

	)

108 
	$Â_ã°
()

110 
i
, 
j
, 
k
, 
l
;

111 
buf
[7];

112 *
¥efix
 = 
buf
;

113 
ç
[20];

115 
	`puts
("\nFormatted outputÅest");

116 
	`¥ötf
("prefix 6d 6o 6x 6X 6u\n");

117 
	`°r˝y
(
¥efix
, "%");

118 
i
 = 0; i < 2; i++) {

119 
j
 = 0; j < 2; j++) {

120 
k
 = 0; k < 2; k++) {

121 
l
 = 0;Ü < 2;Ü++) {

122 
	`°r˝y
(
¥efix
, "%");

123 i‡(
i
 =0Ë
	`°rˇt
(
¥efix
, "-");

124 i‡(
j
 =0Ë
	`°rˇt
(
¥efix
, "+");

125 i‡(
k
 =0Ë
	`°rˇt
(
¥efix
, "#");

126 i‡(
l
 =0Ë
	`°rˇt
(
¥efix
, "0");

127 
	`¥ötf
("%5†|", 
¥efix
);

128 
	`°r˝y
(
ç
, 
¥efix
);

129 
	`°rˇt
(
ç
, "6d |");

130 
	`¥ötf
(
ç
, 
DEC
);

131 
	`°r˝y
(
ç
, 
¥efix
);

132 
	`°rˇt
(
ç
, "6o |");

133 
	`¥ötf
(
ç
, 
INT
);

134 
	`°r˝y
(
ç
, 
¥efix
);

135 
	`°rˇt
(
ç
, "6x |");

136 
	`¥ötf
(
ç
, 
INT
);

137 
	`°r˝y
(
ç
, 
¥efix
);

138 
	`°rˇt
(
ç
, "6X |");

139 
	`¥ötf
(
ç
, 
INT
);

140 
	`°r˝y
(
ç
, 
¥efix
);

141 
	`°rˇt
(
ç
, "6u |");

142 
	`¥ötf
(
ç
, 
UNS
);

143 
	`¥ötf
("\n");

148 
	`¥ötf
("%10s\n", (*Ë
NULL
);

149 
	`¥ötf
("%-10s\n", (*Ë
NULL
);

150 
	}
}

153 
	$maö
()

155 
sh‹t°r
[] = "Hi, Z.";

156 
l⁄g°r
[] = "Good morning, Doctor Chandra. This is Hal. \
ámÑeady for my firstÜessonÅoday.";

159 
	`fmtchk
("%.4x");

160 
	`fmtchk
("%04x");

161 
	`fmtchk
("%4.4x");

162 
	`fmtchk
("%04.4x");

163 
	`fmtchk
("%4.3x");

164 
	`fmtchk
("%04.3x");

166 
	`fmt°1chk
("%.*x");

167 
	`fmt°1chk
("%0*x");

168 
	`fmt°2chk
("%*.*x");

169 
	`fmt°2chk
("%0*.*x");

171 #i‚def 
BSD


172 
	`¥ötf
("bad format:\t\"%z\"\n");

173 
	`¥ötf
("nûÖoöã∏’added):\t\"%10p\"\n", (*Ë
NULL
);

176 
	`¥ötf
("decimalÇegative:\t\"%d\"\n", -2345);

177 
	`¥ötf
("octalÇegative:\t\"%o\"\n", -2345);

178 
	`¥ötf
("hexÇegative:\t\"%x\"\n", -2345);

179 
	`¥ötf
("long decimalÇumber:\t\"%ld\"\n", -123456);

180 
	`¥ötf
("long octalÇegative:\t\"%lo\"\n", -2345L);

181 
	`¥ötf
("long unsigned decimalÇumber:\t\"%lu\"\n", -123456);

182 
	`¥ötf
("zero-padded LDN:\t\"%010ld\"\n", -123456);

183 
	`¥ötf
("left-adjusted ZLDN:\t\"%-010ld\"\n", -123456);

184 
	`¥ötf
("space-padded LDN:\t\"%10ld\"\n", -123456);

185 
	`¥ötf
("left-adjusted SLDN:\t\"%-10ld\"\n", -123456);

187 
	`¥ötf
("zîo-∑dded såög:\t\"%010s\"\n", 
sh‹t°r
);

188 
	`¥ötf
("À·-adju°ed Z såög:\t\"%-010s\"\n", 
sh‹t°r
);

189 
	`¥ötf
("•a˚-∑dded såög:\t\"%10s\"\n", 
sh‹t°r
);

190 
	`¥ötf
("À·-adju°ed S såög:\t\"%-10s\"\n", 
sh‹t°r
);

191 
	`¥ötf
("nuŒ såög:\t\"%s\"\n", (*)
NULL
);

193 
	`¥ötf
("limôed såög:\t\"%.22s\"\n", 
l⁄g°r
);

196 
	`¥ötf
("e-style >= 1:\t\"%e\"\n", 12.34);

197 
	`¥ötf
("e-style >= .1:\t\"%e\"\n", 0.1234);

198 
	`¥ötf
("e-style < .1:\t\"%e\"\n", 0.001234);

199 
	`¥ötf
("e-style big:\t\"%.60e\"\n", 1e20);

200 
	`¥ötf
 ("e-style == .1:\t\"%e\"\n", 0.1);

201 
	`¥ötf
("f-style >= 1:\t\"%f\"\n", 12.34);

202 
	`¥ötf
("f-style >= .1:\t\"%f\"\n", 0.1234);

203 
	`¥ötf
("f-style < .1:\t\"%f\"\n", 0.001234);

204 
	`¥ötf
("g-style >= 1:\t\"%g\"\n", 12.34);

205 
	`¥ötf
("g-style >= .1:\t\"%g\"\n", 0.1234);

206 
	`¥ötf
("g-style < .1:\t\"%g\"\n", 0.001234);

207 
	`¥ötf
("g-style big:\t\"%.60g\"\n", 1e20);

210 
buf
[128];

211 
	`•rötf
(
buf
, "newÅest: %.15g", 99.85);

212 
	`¥ötf
(":%s:\n", 
buf
);

215 
	`¥ötf
 (" %6.5lf\n", .099999999860301614);

216 
	`¥ötf
 (" %6.5lf\n", .1);

217 
	`¥ötf
 ("x%5.4lfx\n", .5);

219 
	`¥ötf
 ("%#03x\n", 1);

223 
d
 = 
FLT_MIN
;

224 
nôî
 = 17;

226 
nôî
-- != 0)

227 
	`¥ötf
 ("%.17e\n", 
d
 / 2);

228 
	`fÊush
 (
°dout
);

231 
	`¥ötf
 ("%15.5e\n", 4.9406564584124654e-324);

234 
	#FORMAT
 "|%12.4f|%12.4e|%12.4g|\n"

	)

235 
	`¥ötf
 (
FORMAT
, 0.0, 0.0, 0.0);

236 
	`¥ötf
 (
FORMAT
, 1.0, 1.0, 1.0);

237 
	`¥ötf
 (
FORMAT
, -1.0, -1.0, -1.0);

238 
	`¥ötf
 (
FORMAT
, 100.0, 100.0, 100.0);

239 
	`¥ötf
 (
FORMAT
, 1000.0, 1000.0, 1000.0);

240 
	`¥ötf
 (
FORMAT
, 10000.0, 10000.0, 10000.0);

241 
	`¥ötf
 (
FORMAT
, 12345.0, 12345.0, 12345.0);

242 
	`¥ötf
 (
FORMAT
, 100000.0, 100000.0, 100000.0);

243 
	`¥ötf
 (
FORMAT
, 123456.0, 123456.0, 123456.0);

244 #unde‡
FORMAT


248 
buf
[20];

249 
	`¥ötf
 ("snprintf (\"%%30s\", \"foo\") == %d, \"%.*s\"\n",

250 
	`¢¥ötf
 (
buf
,  (buf), "%30s", "foo"),  (buf), buf);

254 
	`Â_ã°
 ();

255 
	`Â_ã°
 ();

256 
	`Â_ã°
 ();

257 
	`Â_ã°
 ();

258 
	`Â_ã°
 ();

259 
	`Â_ã°
 ();

260 
	`Â_ã°
 ();

261 
	`Â_ã°
 ();

263 
	`¥ötf
 ("%e should be 1.234568e+06\n", 1234567.8);

264 
	`¥ötf
 ("%f should be 1234567.800000\n", 1234567.8);

265 
	`¥ötf
 ("%g should be 1.23457e+06\n", 1234567.8);

266 
	`¥ötf
 ("%g should be 123.456\n", 123.456);

267 
	`¥ötf
 ("%g should be 1e+06\n", 1000000.0);

268 
	`¥ötf
 ("%g should be 10\n", 10.0);

269 
	`¥ötf
 ("%g should be 0.02\n", 0.02);

272 
buf
[128];

273 
	`•rötf
(
buf
, "%#.*f", 4, ()0.70000);

274 
	`¥ötf
("ã°ögÖ¨amëri¯fõlds: %s\n", 
buf
);

278 
	}
}

	@tests-pisa/src/anagram.c

131 
	~<°dio.h
>

132 
	~<°dlib.h
>

133 
	~<˘y≥.h
>

134 
	~<sys/ty≥s.h
>

135 
	~<sys/°©.h
>

136 
	~<£tjmp.h
>

149 
	tQuad
;

150 
	#MASK_BITS
 32

	)

152 
	#MAX_QUADS
 2

	)

154 
	#MAXWORDS
 26000

	)

155 
	#MAXCAND
 5000

	)

156 
	#MAXSOL
 51

	)

158 
	#ALPHABET
 26

	)

159 
	#ch2i
(
ch
Ë((ch)-'a'Ë

	)

160 
	#i2ch
(
ch
Ë((ch)+'a'Ë

	)

175 
	#huge


	)

176 
	#Ár


	)

177 
	#SåögF‹m©
 "%15s%c"

	)

178 
	#bigmÆloc
 
mÆloc


	)

179 
	#smÆlmÆloc
 
mÆloc


	)

180 
	#smÆlmÆlocÁû
 (*)0

	)

181 
	#HÆtPro˚ssög
(Ë0

	)

182 
	#Cde˛


	)

187 #ifde‡
DEBUG


188 
	#Debug
(
x
Ë
	)
x

190 
	#Debug
(
x
)

	)

193 #ifde‡
STAT


194 
	#Sèt
(
x
Ë
	)
x

196 
	#Sèt
(
x
)

	)

201 
Quad
 
	maqMask
[
MAX_QUADS
];

202 * 
	mpchW‹d
;

203 
	mcchLígth
;

204 } 
	tW‹d
;

205 
W‹d
 * 
	tPW‹d
;

206 
W‹d
 * * 
	tPPW‹d
;

208 
PW‹d
 
	g≠wC™d
[
MAXCAND
];

209 
	g˝wC™d
;

217 
	muFªquícy
;

218 
	muShi·
;

219 
	muBôs
;

220 
	miq
;

221 } 
	tLëãr
;

222 
Lëãr
 * 
	tPLëãr
;

224 
Lëãr
 
	gÆPhø£
[
ALPHABET
];

225 
	#lPhø£
(
ch
Ë
ÆPhø£
[
	`ch2i
(ch)]

	)

227 
	gcchPhø£Lígth
;

229 
Quad
 
	gaqMaöMask
[
MAX_QUADS
];

230 
Quad
 
	gaqMaöSign
[
MAX_QUADS
];

232 
	gcchMöLígth
 = 3;

238 
	gauGlobÆFªquícy
[
ALPHABET
];

239 
	gachByFªquícy
[
ALPHABET
];

241 * 
	gpchDi˘i⁄¨y
;

243 
	#Zîo
(
t
Ë
	`mem£t
—, 0, —)Ë

	)

246 
	$F©Æ
(*
pchMsg
, 
u
) {

247 
	`Ârötf
(
°dout
, 
pchMsg
, 
u
);

248 
	`exô
(1);

249 
	}
}

263 
	$RódDi˘
(*
pchFûe
) {

264 
FILE
 *
Â
;

265 * 
pch
;

266 * 
pchBa£
;

267 
ulLí
;

268 
cW‹ds
 = 0;

269 
cLëãrs
;

270 
ch
;

271 
°©
 
°©Buf
;

273 i‡(
	`°©
(
pchFûe
, &
°©Buf
)Ë
	`F©Æ
("Cannot stat dictionary\n", 0);

275 
ulLí
 = 
°©Buf
.
°_size
 + 2 * ()
MAXWORDS
;

276 
pchBa£
 = 
pchDi˘i⁄¨y
 = (*)
	`mÆloc
(
ulLí
);

278 if(
pchDi˘i⁄¨y
 =
NULL
)

279 
	`F©Æ
("UnableÅoállocate memory for dictionary\n", 0);

281 i‡((
Â
 = 
	`f›í
(
pchFûe
, "r")Ë=
NULL
)

282 
	`F©Æ
("Cannot open dictionary\n", 0);

284 !
	`„of
(
Â
)) {

285 
pch
 = 
pchBa£
+2;

286 
cLëãrs
 = 0;

287 (
ch
 = 
	`fgëc
(
Â
)Ë!'\n' && ch !
EOF
) {

288 i‡(
	`ißÕha
(
ch
)Ë
cLëãrs
++;

289 *
pch
++ = 
ch
;

291 *
pch
++ = '\0';

292 *
pchBa£
 = 
pch
 -ÖchBase;

293 
pchBa£
[1] = 
cLëãrs
;

294 
pchBa£
 = 
pch
;

295 
cW‹ds
++;

297 
	`f˛o£
(
Â
);

299 *
pchBa£
++ = 0;

301 
	`Ârötf
(
°dout
, "maö di˘i⁄¨y ha†%uÉ¡rõs\n", 
cW‹ds
);

302 i‡(
cW‹ds
 >
MAXWORDS
)

303 
	`F©Æ
("DictionaryÅooÜarge; increase MAXWORDS\n", 0);

304 
	`Ârötf
(
°dout
, "%lu byã†wa°ed\n", 
ulLí
 - (
pchBa£
 - 
pchDi˘i⁄¨y
));

305 
	}
}

307 
	$BuûdMask
(* 
pchPhø£
) {

308 
i
;

309 
ch
;

310 
iq
;

311 
cbtU£d
;

312 
cbtNìd
;

313 
Quad
 
qNìd
;

315 
	`bzîo
(
ÆPhø£
, (
Lëãr
)*
ALPHABET
);

316 
	`bzîo
(
aqMaöMask
, (
Quad
)*
MAX_QUADS
);

317 
	`bzîo
(
aqMaöSign
, (
Quad
)*
MAX_QUADS
);

325 
cchPhø£Lígth
 = 0;

326 (
ch
 = *
pchPhø£
++) != '\0') {

327 i‡(
	`ißÕha
(
ch
)) {

328 
ch
 = 
	`tﬁowî
(ch);

329 
	`lPhø£
(
ch
).
uFªquícy
++;

330 
cchPhø£Lígth
++;

335 
iq
 = 0;

336 
cbtU£d
 = 0;

338 
i
 = 0; i < 
ALPHABET
; i++) {

339 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) {

340 
auGlobÆFªquícy
[
i
] = ~0;

342 
auGlobÆFªquícy
[
i
] = 0;

343 
cbtNìd
 = 1, 
qNìd
 = 1;

344 
ÆPhø£
[
i
].
uFªquícy
 >
qNìd
;

345 
cbtNìd
++, 
qNìd
 <<= 1);

346 i‡(
cbtU£d
 + 
cbtNìd
 > 
MASK_BITS
) {

347 i‡(++
iq
 >
MAX_QUADS
)

348 
	`F©Æ
("MAX_QUADSÇotÜargeÉnough\n", 0);

349 
cbtU£d
 = 0;

351 
ÆPhø£
[
i
].
uBôs
 = 
qNìd
-1;

352 i‡(
cbtU£d
)

353 
qNìd
 <<
cbtU£d
;

354 
aqMaöSign
[
iq
] |
qNìd
;

355 
aqMaöMask
[
iq
] |(
Quad
)
ÆPhø£
[
i
].
uFªquícy
 << 
cbtU£d
;

356 
ÆPhø£
[
i
].
uShi·
 = 
cbtU£d
;

357 
ÆPhø£
[
i
].
iq
 = iq;

358 
cbtU£d
 +
cbtNìd
;

361 
	}
}

363 
PW‹d


364 
	$NewW‹d
() {

365 
PW‹d
 
pw
;

367 
pw
 = (
W‹d
 *)
	`mÆloc
((Word));

368 i‡(
pw
 =
NULL
)

369 
	`F©Æ
("Ouào‡mem‹yá·î %d c™did©es\n", 
˝wC™d
);

370  
pw
;

371 
	}
}

378 
	$w¥öt
(* 
pch
) {

379 
	`¥ötf
("%†", 
pch
);

380 
	}
}

382 
PW‹d
 
NextW‹d
();

385 
PW‹d
 
	$NextW‹d
() {

386 
PW‹d
 
pw
;

387 i‡(
˝wC™d
 >
MAXCAND
)

388 
	`F©Æ
("Too many candidates\n", 0);

389 
pw
 = 
≠wC™d
[
˝wC™d
++];

390 i‡(
pw
 !
NULL
)

391  
pw
;

392 
≠wC™d
[
˝wC™d
-1] = 
	`NewW‹d
();

393  
≠wC™d
[
˝wC™d
-1];

394 
	}
}

399 
	$BuûdW‹d
(* 
pchW‹d
) {

400 
cchFªquícy
[
ALPHABET
];

401 
i
;

402 * 
pch
 = 
pchW‹d
;

403 
PW‹d
 
pw
;

404 
cchLígth
 = 0;

406 
	`bzîo
(
cchFªquícy
, ()*
ALPHABET
);

410 (
i
 = *
pch
++) != '\0') {

411 i‡(!
	`ißÕha
(
i
)) ;

412 
i
 = 
	`ch2i
(
	`tﬁowî
(i));

413 i‡(++
cchFªquícy
[
i
] > 
ÆPhø£
[i].
uFªquícy
)

415 ++
cchLígth
;

418 
	`Debug
(
	`w¥öt
(
pchW‹d
);)

421 
i
 = 0; i < 
ALPHABET
; i++)

422 
auGlobÆFªquícy
[
i
] +
cchFªquícy
[i];

427 
pw
 = 
	`NextW‹d
();

428 
	`bzîo
(
pw
->
aqMask
, (
Quad
)*
MAX_QUADS
);

430 
pw
->
pchW‹d
 =ÖchWord;

431 
pw
->
cchLígth
 = cchLength;

432 
i
 = 0; i < 
ALPHABET
; i++) {

433 
pw
->
aqMask
[
ÆPhø£
[
i
].
iq
] |=

434 (
Quad
)
cchFªquícy
[
i
] << 
ÆPhø£
[i].
uShi·
;

436 
	}
}

440 
	$AddW‹ds
() {

441 * 
pch
 = 
pchDi˘i⁄¨y
;

443 
˝wC™d
 = 0;

445 *
pch
) {

446 i‡((
pch
[1] >
cchMöLígth
 &&Öch[1]+cchMöLígth <
cchPhø£Lígth
)

447 || 
pch
[1] =
cchPhø£Lígth
)

448 
	`BuûdW‹d
(
pch
+2);

449 
pch
 += *pch;

452 
	`Ârötf
(
°dout
, "%d c™did©es\n", 
˝wC™d
);

453 
	}
}

455 
	$DumpC™did©es
() {

456 
u
;

458 
u
 = 0; u < 
˝wC™d
; u++)

459 
	`¥ötf
(
SåögF‹m©
, 
≠wC™d
[
u
]->
pchW‹d
, (u % 4 == 3) ? '\n' : ' ');

460 
	`¥ötf
("\n");

461 
	}
}

463 
PW‹d
 
	g≠wSﬁ
[
MAXSOL
];

464 
	g˝wLa°
;

466 
Debug
(

467 
	$DumpW‹d
(
Quad
 * 
pq
) {

468 
i
;

469 
Quad
 
q
;

470 
i
 = 0; i < 
ALPHABET
; i++) {

471 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) ;

472 
q
 = 
pq
[
ÆPhø£
[
i
].
iq
];

473 i‡(
ÆPhø£
[
i
].
uShi·
Ë
q
 >>=álPhrase[i].uShift;

474 
q
 &
ÆPhø£
[
i
].
uBôs
;

475 
q
--Ë
	`putch¨
('a'+
i
);

477 
	`putch¨
(' ');

478 
	}
}

481 
	$DumpW‹ds
() {

482 
i
;

483 
i
 = 0; i < 
˝wLa°
; i++Ë
	`w¥öt
(
≠wSﬁ
[i]->
pchW‹d
);

484 
	`¥ötf
("\n");

485 
	}
}

487 
Sèt
(
ulHighCou¡
; 
ulLowCou¡
;)

489 
jmp_buf
 
	gjbA«gøm
;

491 
	#O√Sãp
(
i
) \

492 i‡((
aqNext
[
i
] = 
pqMask
[i] - 
pw
->
aqMask
[i]Ë& 
aqMaöSign
[i]) { \

493 
µwSèπ
++; \

495 }

	)

499 
	$FödA«gøm
(
Quad
 * 
pqMask
, 
PPW‹d
 
µwSèπ
, 
iLëãr
)

501 
Quad
 
aqNext
[
MAX_QUADS
];

502 
PW‹d
 
pw
;

503 
Quad
 
qMask
;

504 
iq
;

505 
PPW‹d
 
µwEnd
 = &
≠wC™d
[0];

506 
µwEnd
 +
˝wC™d
;

510 i‡(
	`HÆtPro˚ssög
()Ë
	`l⁄gjmp
(
jbA«gøm
, 1);

512 
	`Debug
(
	`¥ötf
("Tryög :"); 
	`DumpW‹d
(
pqMask
);Örintf(":\n");)

515 
iq
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].iq;

516 
qMask
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uBôs
 <<

517 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uShi·
;

518 i‡(
pqMask
[
iq
] & 
qMask
) ;

519 
iLëãr
++;

522 
	`Debug
(
	`¥ötf
("PivŸög o¿%c\n", 
	`i2ch
(
achByFªquícy
[
iLëãr
]));)

524 
µwSèπ
 < 
µwEnd
) {

525 
pw
 = *
µwSèπ
;

527 
	`Sèt
(i‡(++
ulLowCou¡
 =0Ë++
ulHighCou¡
;)

529 #i‡
MAX_QUADS
 > 0

530 
	`O√Sãp
(0);

533 #i‡
MAX_QUADS
 > 1

534 
	`O√Sãp
(1);

537 #i‡
MAX_QUADS
 > 2

538 
	`O√Sãp
(2);

541 #i‡
MAX_QUADS
 > 3

542 
	`O√Sãp
(3);

545 #i‡
MAX_QUADS
 > 4

550 i‡((
pw
->
aqMask
[
iq
] & 
qMask
) == 0) {

551 *
µwSèπ
 = *--
µwEnd
;

552 *
µwEnd
 = 
pw
;

557 
≠wSﬁ
[
˝wLa°
++] = 
pw
;

558 i‡(
cchPhø£Lígth
 -
pw
->
cchLígth
) {

559 
	`Debug
(
	`DumpW‹ds
();)

563 
µwEnd
 = &
≠wC™d
[0];

564 
µwEnd
 +
˝wC™d
;

565 
	`FödA«gøm
(&
aqNext
[0],

566 
µwSèπ
, 
iLëãr
);

567 } 
	`DumpW‹ds
();

568 
cchPhø£Lígth
 +
pw
->
cchLígth
;

569 --
˝wLa°
;

570 
µwSèπ
++;

575 
	}
}

577 
Cde˛
 
	$Com∑ªFªquícy
(*
pch1
, *
pch2
) {

578  
auGlobÆFªquícy
[*
pch1
] <áuGlobÆFªquícy[*
pch2
]

580 
auGlobÆFªquícy
[*
pch1
] =auGlobÆFªquícy[*
pch2
]

582 
	}
}

584 
	$S‹tC™did©es
() {

585 
i
;

588 
i
 = 0; i < 
ALPHABET
; i++Ë
achByFªquícy
[i] = i;

589 
	`qs‹t
(
achByFªquícy
, 
ALPHABET
, (),

590 ((*)(c⁄° *, c⁄° *))
Com∑ªFªquícy
);

592 
	`Ârötf
(
°dout
, "Order of search will be ");

593 
i
 = 0; i < 
ALPHABET
; i++)

594 
	`Âutc
(
	`i2ch
(
achByFªquícy
[
i
]), 
°dout
);

595 
	`Âutc
('\n', 
°dout
);

596 
	}
}

598 
	gfI¡îa˘ive
;

600 * 
	$GëPhø£
(* 
pch
) {

601 i‡(
fI¡îa˘ive
Ë
	`¥ötf
(">");

602 
	`fÊush
(
°dout
);

603 i‡(
	`gës
(
pch
Ë=
NULL
) {

604 #ifde‡
PLUS_STATS


605 
	`PrötDîefSèts
(
°dout
);

606 
	`PrötHópSize
(
°dout
);

608 
	`exô
(0);

610 (
pch
);

611 
	}
}

613 
	gachPhø£
[255];

615 
Cde˛
 
	$maö
(
˝chArgc
, **
µchArgv
) {

617 i‡(
˝chArgc
 != 2 && cpchArgc != 3)

618 
	`F©Æ
("Usage:ánagram dictionary [length]\n", 0);

620 i‡(
˝chArgc
 == 3)

621 
cchMöLígth
 = 
	`©oi
(
µchArgv
[2]);

623 
fI¡îa˘ive
 = 
	`ißây
(1);

625 
	`RódDi˘
(
µchArgv
[1]);

627 
	`GëPhø£
(&
achPhø£
[0]Ë!
NULL
) {

628 i‡(
	`isdigô
(
achPhø£
[0])) {

629 
cchMöLígth
 = 
	`©oi
(
achPhø£
);

630 
	`¥ötf
("NewÜígth: %d\n", 
cchMöLígth
);

631 } i‡(
achPhø£
[0] == '?') {

632 
	`DumpC™did©es
();

634 
	`BuûdMask
(&
achPhø£
[0]);

635 
	`AddW‹ds
();

636 i‡(
˝wC™d
 =0 || 
cchPhø£Lígth
 == 0) ;

638 
	`Sèt
(
ulHighCou¡
 = 
ulLowCou¡
 = 0;)

639 
˝wLa°
 = 0;

640 
	`S‹tC™did©es
();

641 i‡(
	`£tjmp
(
jbA«gøm
) == 0)

642 
	`FödA«gøm
(&
aqMaöMask
[0], &
≠wC™d
[0], 0);

643 
	`Sèt
(
	`¥ötf
("%lu:%luÖrobes\n", 
ulHighCou¡
, 
ulLowCou¡
);)

647 
	}
}

	@tests-pisa/src/test-fmath.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

5 
	gfoo1
=5.3, 
	gfoo2
=6.4;

6 
	gb¨1
=5.3, 
	gb¨2
=6.4;

7 
	gq
 = 4;

8 
	gx
 = 12;

9 
	gy
 = 29;

10 
	gz
;

11 
	gl
 = 6;

12 *
	gÕ
 = &
l
;

15 
	$maö
()

17 
	`¥ötf
("q=%d (öt)x=%d (öt)y=%d\n", 
q
, ()
x
, ()
y
);

18 
z
 = 
	`pow
(
x
, 2);

19 
	`¥ötf
("z=%d\n", ()
z
);

20 
z
 = 
	`pow
(
y
, 2);

21 
	`¥ötf
("z=%d\n", ()
z
);

22 
z
 = 13.21;

23 
	`¥ötf
("z=%d\n", ()
z
);

24 
z
 = ()13;

25 
	`¥ötf
("z=%d\n", ()
z
);

26 
	`¥ötf
("l=%d\n", ()
l
);

27 
l
 =Ü * 6;

28 
	`¥ötf
("l=%d\n", ()
l
);

29 *
Õ
 = *lp * 6;

30 
	`¥ötf
("*Õ=%d\n", ()*
Õ
);

31 
z
 = 
	`pow
(
x
, 2);

32 
	`¥ötf
("z=%f\n", 
z
);

34 
	`¥ötf
("q=%d x=%‡(öt)x=%d y=%‡(öt)y=%d\n", 
q
, 
x
, ()x, 
y
, ()y);

36 
x
 = 
foo1
+
foo2
;

37 
y
 = 2*
b¨1
+2*
b¨2
;

39 
q
 = q*4;

41 
	`¥ötf
("q = %d x = %‡ y = %f\n", 
q
, 
x
, 
y
);

44 
	}
}

	@tests-pisa/src/test-llong.c

1 
	~<°dio.h
>

3 
	gx
 = 0x100000000LL;

4 
	gy
 = 0x1ffffffffLL;

5 
	gz
 = 0x010000000LL;

6 
	gw
 = 0x01fffffffLL;

9 
	$maö
()

11 
	`Ârötf
(
°dout
, "x+1 = 0x%016Lx\n", 
x
+1);

12 
	`Ârötf
(
°dout
, "x-1 = 0x%016Lx\n", 
x
-1);

13 
	`Ârötf
(
°dout
, "y+1 = 0x%016Lx\n", 
y
+1);

14 
	`Ârötf
(
°dout
, "x+y = 0x%016Lx\n", 
x
+
y
);

15 
	`Ârötf
(
°dout
, "z*w = 0x%016Lx\n", 
z
*
w
);

16 
	`exô
(0);

17 
	}
}

	@tests-pisa/src/test-lswlr.c

1 
	~<°dio.h
>

4 
	$maö
()

6 
°r
[] = "Hello world...";

8 
	`Ârötf
(
°dout
, "°∏%s\n", 
°r
);

9 
	`exô
(0);

10 
	}
}

	@tests-pisa/src/test-math.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

6 
	$maö
()

8 
°r
[] = "123.456";

9 
x
,
h
,
li
,
Ã
,
a
,
Ãr
;

11 
	`¥ötf
("pow(12.0, 2.0Ë=%f\n", 
	`pow
(12.0, 2.0));

12 
	`¥ötf
("pow(10.0, 3.0Ë=%f\n", 
	`pow
(10.0, 3.0));

13 
	`¥ötf
("pow(10.0, -3.0Ë=%f\n", 
	`pow
(10.0, -3.0));

15 
	`¥ötf
("°r: %s\n", 
°r
);

16 
x
 = ()
	`©oi
 (
°r
);

17 
	`¥ötf
("x: %f\n", 
x
);

19 
	`¥ötf
("°r: %s\n", 
°r
);

20 
x
 = 
	`©of
 (
°r
);

21 
	`¥ötf
("x: %f\n", 
x
);

23 
	`¥ötf
("°r: %s\n", 
°r
);

24 
x
 = 
	`©of
 (
°r
);

25 
	`¥ötf
("x: %f\n", 
x
);

27 
	`¥ötf
 ("%g %‡%d %g\n", 
x
, x, ()x, 
	`pow
 (10.0, 3.0));

29 
x
 = 
	`söh
(2.0);

31 
	`¥ötf
("söh(2.0Ë%g\n", 
x
);

33 
x
 = 
	`söh
(3.0);

35 
	`¥ötf
("söh(3.0Ë%g\n", 
x
);

37 
h
 = 
	`hypŸ
(2.0,3.0);

39 
	`¥ötf
("h=%g\n", 
h
);

41 
a
 = 
	`©™2
(3.0, 2.0);

43 
	`¥ötf
("©™2(3,2Ë%g\n", 
a
);

45 
Ã
 = 
	`pow
(
h
,4.0);

47 
	`¥ötf
("pow(%g,4.0Ë%g\n", 
h
, 
Ã
);

49 
Ãr
 = 
Ã
;

51 
li
 = 4.0 * 
a
;

53 
Ã
 =Ü∏/ 
	`exp
(
a
*5.0);

55 
	`¥ötf
("%g /Éxp(%g * 5Ë%g\n", 
Ãr
, 
a
, 
Ã
);

57 
Ãr
 = 
li
;

59 
li
 +5.0 * 
	`log
(
h
);

61 
	`¥ötf
("%g + 5*log(%gË%g\n", 
Ãr
, 
h
, 
li
);

63 
	`¥ötf
("cos(%gË%g, sö(%gË%g\n", 
li
, 
	`cos
÷i),Üi, 
	`sö
(li));

66 
x
 = 
	`dªm
(10.3435,6.2831852);

68 
	`¥ötf
("dªm(10.3435,6.2831852Ë%g\n", 
x
);

70 
x
 = 
	`dªm
(-10.3435,6.2831852);

72 
	`¥ötf
("dªm(-10.3435,6.2831852Ë%g\n", 
x
);

74 
x
 = 
	`dªm
(-10.3435,-6.2831852);

76 
	`¥ötf
("dªm(-10.3435,-6.2831852Ë%g\n", 
x
);

78 
x
 = 
	`dªm
(10.3435,-6.2831852);

80 
	`¥ötf
("dªm(10.3435,-6.2831852Ë%g\n", 
x
);

83 
	`¥ötf
("x%8.6gx\n", .5);

84 
	`¥ötf
("x%-8.6gx\n", .5);

85 
	`¥ötf
("x%6.6gx\n", .5);

88 
x
 = 
	`©of
 ("-1e-17-");

89 
	`¥ötf
 ("%g %c= %g %s!\n",

90 
x
,

91 
x
 == -1e-17 ? '=' : '!',

93 
	`Ábs
(
x
 - -1e-17) < 0.000000001 ? "Worked" : "Failed");

97 
	}
}

	@tests-pisa/src/test-printf.c

19 #ifdef 
BSD


20 
	~</u§/ö˛ude/°dio.h
>

21 
	#EXIT_SUCCESS
 0

	)

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

31 
	ma
;

32 
	mb
;

33 
	mc
;

34 
	md
;

35 } 
	gxxyyz
[100];

37 
	gzzz
;

40 
	$FooB¨
(
a
)

42  
xxyyz
[
a
].
b
;

43 
	}
}

45 
	guxxe
[100];

48 
	$FooFoo
(
a
)

50 
zzz
++;

51  
uxxe
[
a
];

52 
	}
}

54 *
	gsccsid
 = "this isáÅest...";

57 
	$fmtchk
(*
fmt
)

59 *
sccsid
 = "this isáÅest...";

60 (Ë
	`Âuts
(
fmt
, 
°dout
);

61 (Ë
	`¥ötf
(":\t`");

62 (Ë
	`¥ötf
(
fmt
, 0x12);

63 (Ë
	`¥ötf
("'\n");

64 
	}
}

67 
	$fmt°1chk
(*
fmt
)

69 (Ë
	`Âuts
(
fmt
, 
°dout
);

70 (Ë
	`¥ötf
(":\t`");

71 (Ë
	`¥ötf
(
fmt
, 4, 0x12);

72 (Ë
	`¥ötf
("'\n");

73 
	}
}

76 
	$fmt°2chk
(*
fmt
)

78 (Ë
	`Âuts
(
fmt
, 
°dout
);

79 (Ë
	`¥ötf
(":\t`");

80 (Ë
	`¥ötf
(
fmt
, 4, 4, 0x12);

81 (Ë
	`¥ötf
("'\n");

82 
	}
}

98 
	#DEC
 -123

	)

99 
	#INT
 255

	)

100 
	#UNS
 (~0)

	)

108 
	$Â_ã°
()

110 
i
, 
j
, 
k
, 
l
;

111 
buf
[7];

112 *
¥efix
 = 
buf
;

113 
ç
[20];

115 
	`puts
("\nFormatted outputÅest");

116 
	`¥ötf
("prefix 6d 6o 6x 6X 6u\n");

117 
	`°r˝y
(
¥efix
, "%");

118 
i
 = 0; i < 2; i++) {

119 
j
 = 0; j < 2; j++) {

120 
k
 = 0; k < 2; k++) {

121 
l
 = 0;Ü < 2;Ü++) {

122 
	`°r˝y
(
¥efix
, "%");

123 i‡(
i
 =0Ë
	`°rˇt
(
¥efix
, "-");

124 i‡(
j
 =0Ë
	`°rˇt
(
¥efix
, "+");

125 i‡(
k
 =0Ë
	`°rˇt
(
¥efix
, "#");

126 i‡(
l
 =0Ë
	`°rˇt
(
¥efix
, "0");

127 
	`¥ötf
("%5†|", 
¥efix
);

128 
	`°r˝y
(
ç
, 
¥efix
);

129 
	`°rˇt
(
ç
, "6d |");

130 
	`¥ötf
(
ç
, 
DEC
);

131 
	`°r˝y
(
ç
, 
¥efix
);

132 
	`°rˇt
(
ç
, "6o |");

133 
	`¥ötf
(
ç
, 
INT
);

134 
	`°r˝y
(
ç
, 
¥efix
);

135 
	`°rˇt
(
ç
, "6x |");

136 
	`¥ötf
(
ç
, 
INT
);

137 
	`°r˝y
(
ç
, 
¥efix
);

138 
	`°rˇt
(
ç
, "6X |");

139 
	`¥ötf
(
ç
, 
INT
);

140 
	`°r˝y
(
ç
, 
¥efix
);

141 
	`°rˇt
(
ç
, "6u |");

142 
	`¥ötf
(
ç
, 
UNS
);

143 
	`¥ötf
("\n");

148 
	`¥ötf
("%10s\n", (*Ë
NULL
);

149 
	`¥ötf
("%-10s\n", (*Ë
NULL
);

150 
	}
}

153 
	$maö
()

155 
sh‹t°r
[] = "Hi, Z.";

156 
l⁄g°r
[] = "Good morning, Doctor Chandra. This is Hal. \
ámÑeady for my firstÜessonÅoday.";

159 
	`fmtchk
("%.4x");

160 
	`fmtchk
("%04x");

161 
	`fmtchk
("%4.4x");

162 
	`fmtchk
("%04.4x");

163 
	`fmtchk
("%4.3x");

164 
	`fmtchk
("%04.3x");

166 
	`fmt°1chk
("%.*x");

167 
	`fmt°1chk
("%0*x");

168 
	`fmt°2chk
("%*.*x");

169 
	`fmt°2chk
("%0*.*x");

171 #i‚def 
BSD


172 
	`¥ötf
("bad format:\t\"%z\"\n");

173 
	`¥ötf
("nûÖoöã∏’added):\t\"%10p\"\n", (*Ë
NULL
);

176 
	`¥ötf
("decimalÇegative:\t\"%d\"\n", -2345);

177 
	`¥ötf
("octalÇegative:\t\"%o\"\n", -2345);

178 
	`¥ötf
("hexÇegative:\t\"%x\"\n", -2345);

179 
	`¥ötf
("long decimalÇumber:\t\"%ld\"\n", -123456);

180 
	`¥ötf
("long octalÇegative:\t\"%lo\"\n", -2345L);

181 
	`¥ötf
("long unsigned decimalÇumber:\t\"%lu\"\n", -123456);

182 
	`¥ötf
("zero-padded LDN:\t\"%010ld\"\n", -123456);

183 
	`¥ötf
("left-adjusted ZLDN:\t\"%-010ld\"\n", -123456);

184 
	`¥ötf
("space-padded LDN:\t\"%10ld\"\n", -123456);

185 
	`¥ötf
("left-adjusted SLDN:\t\"%-10ld\"\n", -123456);

187 
	`¥ötf
("zîo-∑dded såög:\t\"%010s\"\n", 
sh‹t°r
);

188 
	`¥ötf
("À·-adju°ed Z såög:\t\"%-010s\"\n", 
sh‹t°r
);

189 
	`¥ötf
("•a˚-∑dded såög:\t\"%10s\"\n", 
sh‹t°r
);

190 
	`¥ötf
("À·-adju°ed S såög:\t\"%-10s\"\n", 
sh‹t°r
);

191 
	`¥ötf
("nuŒ såög:\t\"%s\"\n", (*)
NULL
);

193 
	`¥ötf
("limôed såög:\t\"%.22s\"\n", 
l⁄g°r
);

196 
	`¥ötf
("e-style >= 1:\t\"%e\"\n", 12.34);

197 
	`¥ötf
("e-style >= .1:\t\"%e\"\n", 0.1234);

198 
	`¥ötf
("e-style < .1:\t\"%e\"\n", 0.001234);

199 
	`¥ötf
("e-style big:\t\"%.60e\"\n", 1e20);

200 
	`¥ötf
 ("e-style == .1:\t\"%e\"\n", 0.1);

201 
	`¥ötf
("f-style >= 1:\t\"%f\"\n", 12.34);

202 
	`¥ötf
("f-style >= .1:\t\"%f\"\n", 0.1234);

203 
	`¥ötf
("f-style < .1:\t\"%f\"\n", 0.001234);

204 
	`¥ötf
("g-style >= 1:\t\"%g\"\n", 12.34);

205 
	`¥ötf
("g-style >= .1:\t\"%g\"\n", 0.1234);

206 
	`¥ötf
("g-style < .1:\t\"%g\"\n", 0.001234);

207 
	`¥ötf
("g-style big:\t\"%.60g\"\n", 1e20);

210 
buf
[128];

211 
	`•rötf
(
buf
, "newÅest: %.15g", 99.85);

212 
	`¥ötf
(":%s:\n", 
buf
);

215 
	`¥ötf
 (" %6.5lf\n", .099999999860301614);

216 
	`¥ötf
 (" %6.5lf\n", .1);

217 
	`¥ötf
 ("x%5.4lfx\n", .5);

219 
	`¥ötf
 ("%#03x\n", 1);

223 
d
 = 
FLT_MIN
;

224 
nôî
 = 17;

226 
nôî
-- != 0)

227 
	`¥ötf
 ("%.17e\n", 
d
 / 2);

228 
	`fÊush
 (
°dout
);

231 
	`¥ötf
 ("%15.5e\n", 4.9406564584124654e-324);

234 
	#FORMAT
 "|%12.4f|%12.4e|%12.4g|\n"

	)

235 
	`¥ötf
 (
FORMAT
, 0.0, 0.0, 0.0);

236 
	`¥ötf
 (
FORMAT
, 1.0, 1.0, 1.0);

237 
	`¥ötf
 (
FORMAT
, -1.0, -1.0, -1.0);

238 
	`¥ötf
 (
FORMAT
, 100.0, 100.0, 100.0);

239 
	`¥ötf
 (
FORMAT
, 1000.0, 1000.0, 1000.0);

240 
	`¥ötf
 (
FORMAT
, 10000.0, 10000.0, 10000.0);

241 
	`¥ötf
 (
FORMAT
, 12345.0, 12345.0, 12345.0);

242 
	`¥ötf
 (
FORMAT
, 100000.0, 100000.0, 100000.0);

243 
	`¥ötf
 (
FORMAT
, 123456.0, 123456.0, 123456.0);

244 #unde‡
FORMAT


248 
buf
[20];

249 
	`¥ötf
 ("snprintf (\"%%30s\", \"foo\") == %d, \"%.*s\"\n",

250 
	`¢¥ötf
 (
buf
,  (buf), "%30s", "foo"),  (buf), buf);

254 
	`Â_ã°
 ();

255 
	`Â_ã°
 ();

256 
	`Â_ã°
 ();

257 
	`Â_ã°
 ();

258 
	`Â_ã°
 ();

259 
	`Â_ã°
 ();

260 
	`Â_ã°
 ();

261 
	`Â_ã°
 ();

263 
	`¥ötf
 ("%e should be 1.234568e+06\n", 1234567.8);

264 
	`¥ötf
 ("%f should be 1234567.800000\n", 1234567.8);

265 
	`¥ötf
 ("%g should be 1.23457e+06\n", 1234567.8);

266 
	`¥ötf
 ("%g should be 123.456\n", 123.456);

267 
	`¥ötf
 ("%g should be 1e+06\n", 1000000.0);

268 
	`¥ötf
 ("%g should be 10\n", 10.0);

269 
	`¥ötf
 ("%g should be 0.02\n", 0.02);

272 
buf
[128];

273 
	`•rötf
(
buf
, "%#.*f", 4, ()0.70000);

274 
	`¥ötf
("ã°ögÖ¨amëri¯fõlds: %s\n", 
buf
);

278 
	}
}

	@version.h

52 #i‡
deföed
(
TARGET_PISA
)

53 
	#VER_TARGET
 "PISA"

	)

54 #ñi‡
deföed
(
TARGET_ALPHA
)

55 
	#VER_TARGET
 "AÕha"

	)

57 #îr‹ 
C™nŸ
 
decode
 
Sim∂eSˇœr
 
èrgë
...

60 
	#VER_MAJOR
 3

	)

61 
	#VER_MINOR
 0

	)

63 
	#VER_UPDATE
 "Augu°, 2003"

	)

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/dirent.h

24 #i‚def 
_DIRENT_H


25 
	#_DIRENT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifde‡
__USE_XOPEN


34 #i‚de‡
__öo_t_deföed


35 #i‚de‡
__USE_FILE_OFFSET64


36 
__öo_t
 
	töo_t
;

38 
__öo64_t
 
	töo_t
;

40 
	#__öo_t_deföed


	)

42 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


43 
__öo64_t
 
	töo64_t
;

44 
	#__öo64_t_deföed


	)

63 
	~<bôs/dúít.h
>

65 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


66 
	#d_öo
 
d_fûío


	)

83 #ifde‡
_DIRENT_HAVE_D_NAMLEN


84 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

85 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

87 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

88 #ifde‡
_DIRENT_HAVE_D_RECLEN


89 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

91 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

92 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

97 #ifde‡
__USE_BSD


101 
	mDT_UNKNOWN
 = 0,

102 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

103 
	mDT_FIFO
 = 1,

104 
	#DT_FIFO
 
DT_FIFO


	)

105 
	mDT_CHR
 = 2,

106 
	#DT_CHR
 
DT_CHR


	)

107 
	mDT_DIR
 = 4,

108 
	#DT_DIR
 
DT_DIR


	)

109 
	mDT_BLK
 = 6,

110 
	#DT_BLK
 
DT_BLK


	)

111 
	mDT_REG
 = 8,

112 
	#DT_REG
 
DT_REG


	)

113 
	mDT_LNK
 = 10,

114 
	#DT_LNK
 
DT_LNK


	)

115 
	mDT_SOCK
 = 12,

116 
	#DT_SOCK
 
DT_SOCK


	)

117 
	mDT_WHT
 = 14

118 
	#DT_WHT
 
DT_WHT


	)

122 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

123 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

129 
__dú°ªam
 
	tDIR
;

136 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_XOPEN2K8


143 
DIR
 *
	`fd›ídú
 (
__fd
);

151 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

197 
	#ªaddú_r
 
ªaddú64_r


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

203 
dúít64
 *
__ª°ri˘
 
__íåy
,

204 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

205 
	`__n⁄nuŒ
 ((1, 2, 3));

210 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


213 
	~<bôs/ty≥s.h
>

216 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


225 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


228 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


232 #i‚de‡
MAXNAMLEN


234 
	~<bôs/posix1_lim.h
>

237 #ifde‡
NAME_MAX


238 
	#MAXNAMLEN
 
NAME_MAX


	)

240 
	#MAXNAMLEN
 255

	)

245 
	#__√ed_size_t


	)

246 
	~<°ddef.h
>

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

257 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

258 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

259 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

260 
__c⁄°
 
dúít
 **))

261 
	`__n⁄nuŒ
 ((1, 2));

263 #ifde‡
__REDIRECT


264 
	`__REDIRECT
 (
sˇndú
,

265 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

266 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

267 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

268 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

269 
__c⁄°
 
dúít
 **)),

270 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

272 
	#sˇndú
 
sˇndú64


	)

276 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


279 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

280 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

281 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

282 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

283 
__c⁄°
 
dúít64
 **))

284 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__USE_GNU


293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`sˇndú©
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

295 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

296 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

297 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

298 
__c⁄°
 
dúít
 **))

299 
	`__n⁄nuŒ
 ((2, 3));

301 #ifde‡
__REDIRECT


302 
	`__REDIRECT
 (
sˇndú©
,

303 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

304 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

305 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

306 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

307 
__c⁄°
 
dúít
 **)),

308 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

310 
	#sˇndú©
 
sˇndú©64


	)

316 
	`sˇndú©64
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

317 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

318 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

319 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

320 
__c⁄°
 
dúít64
 **))

321 
	`__n⁄nuŒ
 ((2, 3));

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

327 
__c⁄°
 
dúít
 **
__e2
)

328 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

330 #ifde‡
__REDIRECT


331 
	`__REDIRECT_NTH
 (
Æphas‹t
,

332 (
__c⁄°
 
dúít
 **
__e1
,

333 
__c⁄°
 
dúít
 **
__e2
),

334 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 
	#Æphas‹t
 
Æphas‹t64


	)

340 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


341 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

342 
__c⁄°
 
dúít64
 **
__e2
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


353 #i‚de‡
__USE_FILE_OFFSET64


354 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

355 
size_t
 
__nbyãs
,

356 
__off_t
 *
__ª°ri˘
 
__ba£p
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

359 #ifde‡
__REDIRECT


360 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

361 (
__fd
, *
__ª°ri˘
 
__buf
,

362 
size_t
 
__nbyãs
,

363 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

364 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

366 
	#gëdúíåõs
 
gëdúíåõs64


	)

370 #ifde‡
__USE_LARGEFILE64


371 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

372 
size_t
 
__nbyãs
,

373 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

374 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

378 #ifde‡
__USE_GNU


380 #i‚de‡
__USE_FILE_OFFSET64


381 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

382 
__c⁄°
 
dúít
 **
__e2
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

387 (
__c⁄°
 
dúít
 **
__e1
,

388 
__c⁄°
 
dúít
 **
__e2
),

389 
vîsi⁄s‹t64
)

390 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

392 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

396 #ifde‡
__USE_LARGEFILE64


397 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

398 
__c⁄°
 
dúít64
 **
__e2
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

403 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

102 || 
deföed
 
__LDBL_COMPAT
)

103 #ifde‡
__LDBL_COMPAT


105 #ifde‡
__USE_ISOC99


106 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

107 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

108 #ifde‡
__REDIRECT_NTH


109 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

110 
__∆dbl_√xâow¨df
)

111 
	`__©åibuã__
 ((
__c⁄°__
));

112 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

113 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

115 (
__x
, 
__y
),

116 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

121 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


123 #unde‡
__MATHDECL_1


124 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

125 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

126 
¨gs
, 
Æüs
)

	)

127 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

128 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	#__MATH_DECLARE_LDOUBLE
 1

	)

146 
	~<bôs/m©hˇŒs.h
>

147 #unde‡
_MdoubÀ_


148 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


149 #unde‡
_MdoubÀ_END_NAMESPACE


150 #unde‡
__MATH_PRECNAME


155 #unde‡
__MATHDECL_1


156 #unde‡
__MATHDECL


157 #unde‡
__MATHCALL


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


162 
signgam
;

167 #ifde‡
__USE_ISOC99


205 
FP_NAN
,

206 
	#FP_NAN
 
FP_NAN


	)

207 
FP_INFINITE
,

208 
	#FP_INFINITE
 
FP_INFINITE


	)

209 
FP_ZERO
,

210 
	#FP_ZERO
 
FP_ZERO


	)

211 
FP_SUBNORMAL
,

212 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

213 
FP_NORMAL


214 
	#FP_NORMAL
 
FP_NORMAL


	)

218 #ifde‡
__NO_LONG_DOUBLE_MATH


219 
	#Â˛assify
(
x
) \

220 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

222 
	#Â˛assify
(
x
) \

223 ( (
x
) ==  () \

224 ? 
	`__Â˛assifyf
 (
x
) \

225 :  (
x
) ==  () \

226 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

230 #ifde‡
__NO_LONG_DOUBLE_MATH


231 
	#signbô
(
x
) \

232 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

234 
	#signbô
(
x
) \

235 ( (
x
) ==  () \

236 ? 
	`__signbôf
 (
x
) \

237 :  (
x
) ==  () \

238 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

242 #ifde‡
__NO_LONG_DOUBLE_MATH


243 
	#isföôe
(
x
) \

244 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

246 
	#isföôe
(
x
) \

247 ( (
x
) ==  () \

248 ? 
	`__föôef
 (
x
) \

249 :  (
x
) ==  () \

250 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

254 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

258 #ifde‡
__NO_LONG_DOUBLE_MATH


259 
	#i¢™
(
x
) \

260 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

262 
	#i¢™
(
x
) \

263 ( (
x
) ==  () \

264 ? 
	`__i¢™f
 (
x
) \

265 :  (
x
) ==  () \

266 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

270 #ifde‡
__NO_LONG_DOUBLE_MATH


271 
	#isöf
(
x
) \

272 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

274 
	#isöf
(
x
) \

275 ( (
x
) ==  () \

276 ? 
	`__isöff
 (
x
) \

277 :  (
x
) ==  () \

278 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

282 
	#MATH_ERRNO
 1

	)

283 
	#MATH_ERREXCEPT
 2

	)

288 #i‚de‡
__FAST_MATH__


289 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

294 #ifdef 
__USE_MISC


298 
_IEEE_
 = -1,

299 
_SVID_
,

300 
_XOPEN_
,

301 
_POSIX_
,

302 
_ISOC_


303 } 
	t_LIB_VERSION_TYPE
;

308 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

312 #ifde‡
__USE_SVID


318 #ifde‡
__˝lu•lus


319 
__ex˚±i⁄


321 
ex˚±i⁄


324 
ty≥
;

325 *
«me
;

326 
¨g1
;

327 
¨g2
;

328 
ªtvÆ
;

329 
	}
};

331 #ifde‡
__˝lu•lus


332 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

334 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

337 
	#X_TLOSS
 1.41484755040568800000e+16

	)

340 
	#DOMAIN
 1

	)

341 
	#SING
 2

	)

342 
	#OVERFLOW
 3

	)

343 
	#UNDERFLOW
 4

	)

344 
	#TLOSS
 5

	)

345 
	#PLOSS
 6

	)

348 
	#HUGE
 3.40282347e+38F

	)

352 #ifde‡
__USE_XOPEN


354 
	#MAXFLOAT
 3.40282347e+38F

	)

361 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


362 
	#M_E
 2.7182818284590452354

	)

363 
	#M_LOG2E
 1.4426950408889634074

	)

364 
	#M_LOG10E
 0.43429448190325182765

	)

365 
	#M_LN2
 0.69314718055994530942

	)

366 
	#M_LN10
 2.30258509299404568402

	)

367 
	#M_PI
 3.14159265358979323846

	)

368 
	#M_PI_2
 1.57079632679489661923

	)

369 
	#M_PI_4
 0.78539816339744830962

	)

370 
	#M_1_PI
 0.31830988618379067154

	)

371 
	#M_2_PI
 0.63661977236758134308

	)

372 
	#M_2_SQRTPI
 1.12837916709551257390

	)

373 
	#M_SQRT2
 1.41421356237309504880

	)

374 
	#M_SQRT1_2
 0.70710678118654752440

	)

380 #ifde‡
__USE_GNU


381 
	#M_El
 2.7182818284590452353602874713526625L

	)

382 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

383 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

384 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

385 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

386 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

387 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

388 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

389 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

390 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

391 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

392 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

393 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

400 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


401 
	#__NO_MATH_INLINES
 1

	)

404 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

411 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

412 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

413 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

414 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

415 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

416 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

420 #ifde‡
__USE_EXTERN_INLINES


421 
	~<bôs/m©hölöe.h
>

426 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

427 
	~<bôs/m©h-föôe.h
>

430 #ifde‡
__USE_ISOC99


434 #i‚de‡
isgª©î


435 
	#isgª©î
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

442 #i‚de‡
isgª©îequÆ


443 
	#isgª©îequÆ
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

450 #i‚de‡
i¶ess


451 
	#i¶ess
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

458 #i‚de‡
i¶es£quÆ


459 
	#i¶es£quÆ
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

466 #i‚de‡
i¶essgª©î


467 
	#i¶essgª©î
(
x
, 
y
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

470 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

474 #i‚de‡
isun‹dîed


475 
	#isun‹dîed
(
u
, 
v
) \

476 (
__exãnsi⁄__
 \

477 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

478 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

483 
	g__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 #ifde‡
__GNUC__


400 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

401 (
__exãnsi⁄__
 \

402 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

403 
__a
->
s6_addr32
[0] == 0 \

404 && 
__a
->
s6_addr32
[1] == 0 \

405 && 
__a
->
s6_addr32
[2] == 0 \

406 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

408 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

409 (
__exãnsi⁄__
 \

410 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

411 
__a
->
s6_addr32
[0] == 0 \

412 && 
__a
->
s6_addr32
[1] == 0 \

413 && 
__a
->
s6_addr32
[2] == 0 \

414 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

416 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

417 (
__exãnsi⁄__
 \

418 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

419 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

421 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

422 (
__exãnsi⁄__
 \

423 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

424 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

426 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
s6_addr32
[0] == 0 \

430 && 
__a
->
s6_addr32
[1] == 0 \

431 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

433 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

434 (
__exãnsi⁄__
 \

435 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

436 
__a
->
s6_addr32
[0] == 0 \

437 && 
__a
->
s6_addr32
[1] == 0 \

438 && 
__a
->
s6_addr32
[2] == 0 \

439 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

441 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

442 (
__exãnsi⁄__
 \

443 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

444 
__c⁄°
 
ö6_addr
 *
__b
 = (__c⁄° ö6_add∏*Ë(
b
); \

445 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

446 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

447 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

448 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

450 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

451 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

452 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

453 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

454 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

456 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

457 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

458 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

459 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

460 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

462 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

463 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

464 =
	`ht⁄l
 (0x„800000))

	)

466 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

467 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

468 =
	`ht⁄l
 (0x„c00000))

	)

470 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

471 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

472 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

473 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

475 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

476 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

477 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

478 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

479 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

481 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

482 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

483 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

484 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

485 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

488 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

490 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


492 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

495 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

496 
__THROW
;

500 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

501 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

502 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

504 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

505 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

506 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

508 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

509 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

510 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

512 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

513 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

514 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

516 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

517 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

518 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

521 #ifde‡
__USE_GNU


523 
	sö6_pktöfo


525 
ö6_addr
 
ùi6_addr
;

526 
ùi6_ifödex
;

530 
	sù6_mtuöfo


532 
sockaddr_ö6
 
ù6m_addr
;

533 
uöt32_t
 
ù6m_mtu
;

538 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

539 
__THROW
 
__©åibuã_dïªˇãd__
;

540 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

541 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

542 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

543 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

544 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

545 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

546 
__mu…x
, 
__∂usy
)

547 
__THROW
 
__©åibuã_dïªˇãd__
;

548 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

549 
uöt8_t
 **
__çåp
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

552 
uöt8_t
 **
__çåp
, 
__ty≥
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

557 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

558 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

559 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

560 **
__d©abuÂ
Ë
__THROW
;

561 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

562 
__THROW
;

563 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

564 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

565 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

566 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

567 **
__d©abuÂ
Ë
__THROW
;

568 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

569 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

570 **
__d©abuÂ
Ë
__THROW
;

571 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

572 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

577 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

578 
__£gmíts
Ë
__THROW
;

579 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

580 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

581 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

582 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

583 
__THROW
;

589 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

590 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

591 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

592 
__THROW
;

595 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

596 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

597 
uöt32_t
 
__num§c
,

598 
__c⁄°
 
ö_addr
 *
__¶i°
)

599 
__THROW
;

603 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

604 
__c⁄°
 
sockaddr
 *
__group
,

605 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

606 
uöt32_t
 *
__num§c
,

607 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

610 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

611 
__c⁄°
 
sockaddr
 *
__group
,

612 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

613 
uöt32_t
 
__num§c
,

614 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

617 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/netinet/udp.h

48 #i‚de‡
__NETINET_UDP_H


49 
	#__NETINET_UDP_H
 1

	)

51 
	~<„©uªs.h
>

52 
	~<sys/ty≥s.h
>

56 #ifde‡
__FAVOR_BSD


58 
	sudphdr


60 
u_öt16_t
 
	muh_•‹t
;

61 
u_öt16_t
 
	muh_dp‹t
;

62 
u_öt16_t
 
	muh_uÀn
;

63 
u_öt16_t
 
	muh_sum
;

68 
	sudphdr


70 
u_öt16_t
 
	msour˚
;

71 
u_öt16_t
 
	mde°
;

72 
u_öt16_t
 
	mÀn
;

73 
u_öt16_t
 
	mcheck
;

78 
	#UDP_CORK
 1

	)

79 
	#UDP_ENCAP
 100

	)

83 
	#UDP_ENCAP_ESPINUDP_NON_IKE
 1

	)

84 
	#UDP_ENCAP_ESPINUDP
 2

	)

85 
	#UDP_ENCAP_L2TPINUDP
 3

	)

87 
	#SOL_UDP
 17

	)

	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/sgtty.h

19 #i‚def 
_SGTTY_H


20 
	#_SGTTY_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/io˘l.h
>

28 
	gsgâyb
;

30 
__BEGIN_DECLS


33 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

36 
	$°ty
 (
__fd
, 
__c⁄°
 
sgâyb
 *
__∑øms
Ë
__THROW
;

39 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
111
1892
bitmap.h
bpred.c
bpred.h
cache.c
cache.h
dlite.c
dlite.h
eio.c
eio.h
endian.c
endian.h
eval.c
eval.h
eventq.c
eventq.h
host.h
libexo/exo-test.c
libexo/exolex.c
libexo/exolex.l
libexo/libexo.c
libexo/libexo.h
loader.h
main.c
memory.c
memory.h
misc.c
misc.h
options.c
options.h
ptrace.c
ptrace.h
range.c
range.h
regs.c
regs.h
resource.c
resource.h
sim-bpred.c
sim-cache.c
sim-eio.c
sim-fast.c
sim-outorder.c
sim-profile.c
sim-safe.c
sim.h
stats.c
stats.h
symbol.h
syscall.h
sysprobe.c
target-alpha/alpha.c
target-alpha/alpha.h
target-alpha/config.h
target-alpha/ecoff.h
target-alpha/loader.c
target-alpha/symbol.c
target-alpha/syscall.c
target-pisa/config.h
target-pisa/configbig.h
target-pisa/configlit.h
target-pisa/ecoff.h
target-pisa/loader.c
target-pisa/pisa.c
target-pisa/pisa.h
target-pisa/symbol.c
target-pisa/syscall.c
tests-alpha/src/anagram.c
tests-alpha/src/test-dirent.c
tests-alpha/src/test-fmath.c
tests-alpha/src/test-llong.c
tests-alpha/src/test-lswlr.c
tests-alpha/src/test-math.c
tests-alpha/src/test-printf.c
tests-pisa/src/anagram.c
tests-pisa/src/test-fmath.c
tests-pisa/src/test-llong.c
tests-pisa/src/test-lswlr.c
tests-pisa/src/test-math.c
tests-pisa/src/test-printf.c
version.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/netinet/udp.h
/usr/include/setjmp.h
/usr/include/sgtty.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/termio.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
